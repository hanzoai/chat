# Hanzo Router (LiteLLM) - Local Development
# Usage: docker compose up -d

services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: hanzo
      POSTGRES_PASSWORD: hanzo123
      POSTGRES_DB: router
    ports:
      - "5433:5432"  # Different port to avoid conflicts
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hanzo"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes --requirepass routersecret
    ports:
      - "6380:6379"  # Different port to avoid conflicts
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "routersecret", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  router:
    image: ghcr.io/berriai/litellm:main-latest
    ports:
      - "4000:4000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://hanzo:hanzo123@postgres:5432/router
      REDIS_URL: redis://:routersecret@redis:6379
      LITELLM_MASTER_KEY: ${LITELLM_MASTER_KEY:-sk-router-master-dev}
      # LLM Keys
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
      TOGETHER_API_KEY: ${TOGETHER_API_KEY}
    volumes:
      - ./config.yaml:/app/config.yaml
    command: ["--config", "/app/config.yaml", "--port", "4000", "--num_workers", "1"]

volumes:
  postgres_data:
  redis_data: