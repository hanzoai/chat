{"version":3,"file":"index.js","sources":["../src/utils.ts","../src/types/assistants.ts","../src/feedback.ts","../src/schemas.ts","../src/types/files.ts","../src/models.ts","../src/file-config.ts","../src/types/agents.ts","../src/mcp.ts","../src/config.ts","../src/types/runs.ts","../src/bedrock.ts","../src/parsers.ts","../src/azure.ts","../src/artifacts.ts","../src/generate.ts","../src/zod.ts","../src/web.ts","../src/permissions.ts","../src/roles.ts","../src/types/web.ts","../src/keys.ts","../src/headers-helpers.ts","../src/api-endpoints.ts","../src/request.ts","../src/data-service.ts","../src/actions.ts","../src/parameterSettings.ts","../src/createPayload.ts","../src/memory.ts","../src/ocr.ts"],"sourcesContent":["export const envVarRegex = /^\\${(.+)}$/;\n\n/** Extracts the environment variable name from a template literal string */\nexport function extractVariableName(value: string): string | null {\n  if (!value) {\n    return null;\n  }\n\n  const match = value.trim().match(envVarRegex);\n  return match ? match[1] : null;\n}\n\n/** Extracts the value of an environment variable from a string. */\nexport function extractEnvVariable(value: string) {\n  if (!value) {\n    return value;\n  }\n\n  // Trim the input\n  const trimmed = value.trim();\n\n  // Special case: if it's just a single environment variable\n  const singleMatch = trimmed.match(envVarRegex);\n  if (singleMatch) {\n    const varName = singleMatch[1];\n    return process.env[varName] || trimmed;\n  }\n\n  // For multiple variables, process them using a regex loop\n  const regex = /\\${([^}]+)}/g;\n  let result = trimmed;\n\n  // First collect all matches and their positions\n  const matches = [];\n  let match;\n  while ((match = regex.exec(trimmed)) !== null) {\n    matches.push({\n      fullMatch: match[0],\n      varName: match[1],\n      index: match.index,\n    });\n  }\n\n  // Process matches in reverse order to avoid position shifts\n  for (let i = matches.length - 1; i >= 0; i--) {\n    const { fullMatch, varName, index } = matches[i];\n    const envValue = process.env[varName] || fullMatch;\n\n    // Replace at exact position\n    result = result.substring(0, index) + envValue + result.substring(index + fullMatch.length);\n  }\n\n  return result;\n}\n","import type { OpenAPIV3 } from 'openapi-types';\nimport type { AssistantsEndpoint, AgentProvider } from 'src/schemas';\nimport type { ContentTypes } from './runs';\nimport type { Agents } from './agents';\nimport type { TFile } from './files';\nimport { ArtifactModes } from 'src/artifacts';\n\nexport type Schema = OpenAPIV3.SchemaObject & { description?: string };\nexport type Reference = OpenAPIV3.ReferenceObject & { description?: string };\n\nexport type Metadata = {\n  avatar?: string;\n  author?: string;\n} & {\n  [key: string]: unknown;\n};\n\nexport enum Tools {\n  execute_code = 'execute_code',\n  code_interpreter = 'code_interpreter',\n  file_search = 'file_search',\n  web_search = 'web_search',\n  retrieval = 'retrieval',\n  function = 'function',\n  memory = 'memory',\n}\n\nexport enum EToolResources {\n  code_interpreter = 'code_interpreter',\n  execute_code = 'execute_code',\n  file_search = 'file_search',\n  image_edit = 'image_edit',\n  ocr = 'ocr',\n}\n\nexport type Tool = {\n  [type: string]: Tools;\n};\n\nexport type FunctionTool = {\n  type: Tools;\n  function?: {\n    description: string;\n    name: string;\n    parameters: Record<string, unknown>;\n    strict?: boolean;\n    additionalProperties?: boolean; // must be false if strict is true https://platform.openai.com/docs/guides/structured-outputs/some-type-specific-keywords-are-not-yet-supported\n  };\n};\n\n/**\n * A set of resources that are used by the assistant's tools. The resources are\n * specific to the type of tool. For example, the `code_interpreter` tool requires\n * a list of file IDs, while the `file_search` tool requires a list of vector store\n * IDs.\n */\nexport interface ToolResources {\n  code_interpreter?: CodeInterpreterResource;\n  file_search?: FileSearchResource;\n}\nexport interface CodeInterpreterResource {\n  /**\n   * A list of [file](https://platform.openai.com/docs/api-reference/files) IDs made\n   * available to the `code_interpreter`` tool. There can be a maximum of 20 files\n   * associated with the tool.\n   */\n  file_ids?: Array<string>;\n}\n\nexport interface FileSearchResource {\n  /**\n   * The ID of the\n   * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object)\n   * attached to this assistant. There can be a maximum of 1 vector store attached to\n   * the assistant.\n   */\n  vector_store_ids?: Array<string>;\n}\n\n/* Assistant types */\n\nexport type Assistant = {\n  id: string;\n  created_at: number;\n  description: string | null;\n  file_ids?: string[];\n  instructions: string | null;\n  conversation_starters?: string[];\n  metadata: Metadata | null;\n  model: string;\n  name: string | null;\n  object: string;\n  tools?: FunctionTool[];\n  tool_resources?: ToolResources;\n};\n\nexport type TAssistantsMap = Record<AssistantsEndpoint, Record<string, Assistant>>;\n\nexport type AssistantCreateParams = {\n  model: string;\n  description?: string | null;\n  file_ids?: string[];\n  instructions?: string | null;\n  conversation_starters?: string[];\n  metadata?: Metadata | null;\n  name?: string | null;\n  tools?: Array<FunctionTool | string>;\n  endpoint: AssistantsEndpoint;\n  version: number | string;\n  append_current_datetime?: boolean;\n};\n\nexport type AssistantUpdateParams = {\n  model?: string;\n  description?: string | null;\n  file_ids?: string[];\n  instructions?: string | null;\n  conversation_starters?: string[] | null;\n  metadata?: Metadata | null;\n  name?: string | null;\n  tools?: Array<FunctionTool | string>;\n  tool_resources?: ToolResources;\n  endpoint: AssistantsEndpoint;\n  append_current_datetime?: boolean;\n};\n\nexport type AssistantListParams = {\n  limit?: number;\n  before?: string | null;\n  after?: string | null;\n  order?: 'asc' | 'desc';\n  endpoint: AssistantsEndpoint;\n};\n\nexport type AssistantListResponse = {\n  object: string;\n  data: Assistant[];\n  first_id: string;\n  last_id: string;\n  has_more: boolean;\n};\n\nexport type File = {\n  file_id: string;\n  id?: string;\n  temp_file_id?: string;\n  bytes: number;\n  created_at: number;\n  filename: string;\n  object: string;\n  purpose: 'fine-tune' | 'fine-tune-results' | 'assistants' | 'assistants_output';\n};\n\n/* Agent types */\n\nexport type AgentParameterValue = number | string | null;\n\nexport type AgentModelParameters = {\n  model?: string;\n  temperature: AgentParameterValue;\n  maxContextTokens: AgentParameterValue;\n  max_context_tokens: AgentParameterValue;\n  max_output_tokens: AgentParameterValue;\n  top_p: AgentParameterValue;\n  frequency_penalty: AgentParameterValue;\n  presence_penalty: AgentParameterValue;\n};\n\nexport interface AgentBaseResource {\n  /**\n   * A list of file IDs made available to the tool.\n   */\n  file_ids?: Array<string>;\n  /**\n   * A list of files already fetched.\n   */\n  files?: Array<TFile>;\n}\n\nexport interface AgentToolResources {\n  [EToolResources.image_edit]?: AgentBaseResource;\n  [EToolResources.execute_code]?: ExecuteCodeResource;\n  [EToolResources.file_search]?: AgentFileResource;\n  [EToolResources.ocr]?: AgentBaseResource;\n}\n/**\n * A resource for the execute_code tool.\n * Contains file IDs made available to the tool (max 20 files) and already fetched files.\n */\nexport type ExecuteCodeResource = AgentBaseResource;\n\nexport interface AgentFileResource extends AgentBaseResource {\n  /**\n   * The ID of the vector store attached to this agent. There\n   * can be a maximum of 1 vector store attached to the agent.\n   */\n  vector_store_ids?: Array<string>;\n}\n\nexport type Agent = {\n  id: string;\n  name: string | null;\n  author?: string | null;\n  /** The original custom endpoint name, lowercased */\n  endpoint?: string | null;\n  authorName?: string | null;\n  description: string | null;\n  created_at: number;\n  avatar: AgentAvatar | null;\n  instructions: string | null;\n  additional_instructions?: string | null;\n  tools?: string[];\n  projectIds?: string[];\n  tool_kwargs?: Record<string, unknown>;\n  metadata?: Record<string, unknown>;\n  provider: AgentProvider;\n  model: string | null;\n  model_parameters: AgentModelParameters;\n  conversation_starters?: string[];\n  isCollaborative?: boolean;\n  tool_resources?: AgentToolResources;\n  agent_ids?: string[];\n  end_after_tools?: boolean;\n  hide_sequential_outputs?: boolean;\n  artifacts?: ArtifactModes;\n  recursion_limit?: number;\n  version?: number;\n};\n\nexport type TAgentsMap = Record<string, Agent | undefined>;\n\nexport type AgentCreateParams = {\n  name?: string | null;\n  description?: string | null;\n  avatar?: AgentAvatar | null;\n  file_ids?: string[];\n  instructions?: string | null;\n  tools?: Array<FunctionTool | string>;\n  provider: AgentProvider;\n  model: string | null;\n  model_parameters: AgentModelParameters;\n} & Pick<\n  Agent,\n  'agent_ids' | 'end_after_tools' | 'hide_sequential_outputs' | 'artifacts' | 'recursion_limit'\n>;\n\nexport type AgentUpdateParams = {\n  name?: string | null;\n  description?: string | null;\n  avatar?: AgentAvatar | null;\n  file_ids?: string[];\n  instructions?: string | null;\n  tools?: Array<FunctionTool | string>;\n  tool_resources?: ToolResources;\n  provider?: AgentProvider;\n  model?: string | null;\n  model_parameters?: AgentModelParameters;\n  projectIds?: string[];\n  removeProjectIds?: string[];\n  isCollaborative?: boolean;\n} & Pick<\n  Agent,\n  'agent_ids' | 'end_after_tools' | 'hide_sequential_outputs' | 'artifacts' | 'recursion_limit'\n>;\n\nexport type AgentListParams = {\n  limit?: number;\n  before?: string | null;\n  after?: string | null;\n  order?: 'asc' | 'desc';\n  provider?: AgentProvider;\n};\n\nexport type AgentListResponse = {\n  object: string;\n  data: Agent[];\n  first_id: string;\n  last_id: string;\n  has_more: boolean;\n};\n\nexport type AgentFile = {\n  file_id: string;\n  id?: string;\n  temp_file_id?: string;\n  bytes: number;\n  created_at: number;\n  filename: string;\n  object: string;\n  purpose: 'fine-tune' | 'fine-tune-results' | 'agents' | 'agents_output';\n};\n\n/**\n * Details of the Code Interpreter tool call the run step was involved in.\n * Includes the tool call ID, the code interpreter definition, and the type of tool call.\n */\nexport type CodeToolCall = {\n  id: string; // The ID of the tool call.\n  code_interpreter: {\n    input: string; // The input to the Code Interpreter tool call.\n    outputs: Array<Record<string, unknown>>; // The outputs from the Code Interpreter tool call.\n  };\n  type: 'code_interpreter'; // The type of tool call, always 'code_interpreter'.\n};\n\n/**\n * Details of a Function tool call the run step was involved in.\n * Includes the tool call ID, the function definition, and the type of tool call.\n */\nexport type FunctionToolCall = {\n  id: string; // The ID of the tool call object.\n  function: {\n    arguments: string; // The arguments passed to the function.\n    name: string; // The name of the function.\n    output: string | null; // The output of the function, null if not submitted.\n  };\n  type: 'function'; // The type of tool call, always 'function'.\n};\n\n/**\n * Details of a Retrieval tool call the run step was involved in.\n * Includes the tool call ID and the type of tool call.\n */\nexport type RetrievalToolCall = {\n  id: string; // The ID of the tool call object.\n  retrieval: unknown; // An empty object for now.\n  type: 'retrieval'; // The type of tool call, always 'retrieval'.\n};\n\n/**\n * Details of a Retrieval tool call the run step was involved in.\n * Includes the tool call ID and the type of tool call.\n */\nexport type FileSearchToolCall = {\n  id: string; // The ID of the tool call object.\n  file_search: unknown; // An empty object for now.\n  type: 'file_search'; // The type of tool call, always 'retrieval'.\n};\n\n/**\n * Details of the tool calls involved in a run step.\n * Can be associated with one of three types of tools: `code_interpreter`, `retrieval`, or `function`.\n */\nexport type ToolCallsStepDetails = {\n  tool_calls: Array<CodeToolCall | RetrievalToolCall | FileSearchToolCall | FunctionToolCall>; // An array of tool calls the run step was involved in.\n  type: 'tool_calls'; // Always 'tool_calls'.\n};\n\nexport type ImageFile = TFile & {\n  /**\n   * The [File](https://platform.openai.com/docs/api-reference/files) ID of the image\n   * in the message content.\n   */\n  file_id: string;\n  filename: string;\n  filepath: string;\n  height: number;\n  width: number;\n  /**\n   * Prompt used to generate the image if applicable.\n   */\n  prompt?: string;\n  /**\n   * Additional metadata used to generate or about the image/tool_call.\n   */\n  metadata?: Record<string, unknown>;\n};\n\n// FileCitation.ts\nexport type FileCitation = {\n  end_index: number;\n  file_citation: FileCitationDetails;\n  start_index: number;\n  text: string;\n  type: 'file_citation';\n};\n\nexport type FileCitationDetails = {\n  file_id: string;\n  quote: string;\n};\n\nexport type FilePath = {\n  end_index: number;\n  file_path: FilePathDetails;\n  start_index: number;\n  text: string;\n  type: 'file_path';\n};\n\nexport type FilePathDetails = {\n  file_id: string;\n};\n\nexport type Text = {\n  annotations?: Array<FileCitation | FilePath>;\n  value: string;\n};\n\nexport enum AnnotationTypes {\n  FILE_CITATION = 'file_citation',\n  FILE_PATH = 'file_path',\n}\n\nexport enum StepStatus {\n  IN_PROGRESS = 'in_progress',\n  CANCELLED = 'cancelled',\n  FAILED = 'failed',\n  COMPLETED = 'completed',\n  EXPIRED = 'expired',\n}\n\nexport enum MessageContentTypes {\n  TEXT = 'text',\n  IMAGE_FILE = 'image_file',\n}\n\n//enum for RunStatus\n// The status of the run: queued, in_progress, requires_action, cancelling, cancelled, failed, completed, or expired.\nexport enum RunStatus {\n  QUEUED = 'queued',\n  IN_PROGRESS = 'in_progress',\n  REQUIRES_ACTION = 'requires_action',\n  CANCELLING = 'cancelling',\n  CANCELLED = 'cancelled',\n  FAILED = 'failed',\n  COMPLETED = 'completed',\n  EXPIRED = 'expired',\n}\n\nexport type PartMetadata = {\n  progress?: number;\n  asset_pointer?: string;\n  status?: string;\n  action?: boolean;\n  auth?: string;\n  expires_at?: number;\n};\n\nexport type ContentPart = (\n  | CodeToolCall\n  | RetrievalToolCall\n  | FileSearchToolCall\n  | FunctionToolCall\n  | Agents.AgentToolCall\n  | ImageFile\n  | Text\n) &\n  PartMetadata;\n\nexport type TMessageContentParts =\n  | { type: ContentTypes.ERROR; text?: string | (Text & PartMetadata); error?: string }\n  | { type: ContentTypes.THINK; think: string | (Text & PartMetadata) }\n  | { type: ContentTypes.TEXT; text: string | (Text & PartMetadata); tool_call_ids?: string[] }\n  | {\n      type: ContentTypes.TOOL_CALL;\n      tool_call: (\n        | CodeToolCall\n        | RetrievalToolCall\n        | FileSearchToolCall\n        | FunctionToolCall\n        | Agents.AgentToolCall\n      ) &\n        PartMetadata;\n    }\n  | { type: ContentTypes.IMAGE_FILE; image_file: ImageFile & PartMetadata }\n  | Agents.AgentUpdate\n  | Agents.MessageContentImageUrl;\n\nexport type StreamContentData = TMessageContentParts & {\n  /** The index of the current content part */\n  index: number;\n  /** The current text content was already served but edited to replace elements therein */\n  edited?: boolean;\n};\n\nexport type TContentData = StreamContentData & {\n  messageId: string;\n  conversationId: string;\n  userMessageId: string;\n  thread_id: string;\n  stream?: boolean;\n};\n\nexport const actionDelimiter = '_action_';\nexport const actionDomainSeparator = '---';\nexport const hostImageIdSuffix = '_host_copy';\nexport const hostImageNamePrefix = 'host_copy_';\n\nexport type AssistantAvatar = {\n  filepath: string;\n  source: string;\n};\n\nexport type AssistantDocument = {\n  user: string;\n  assistant_id: string;\n  conversation_starters?: string[];\n  avatar?: AssistantAvatar;\n  access_level?: number;\n  file_ids?: string[];\n  actions?: string[];\n  createdAt?: Date;\n  updatedAt?: Date;\n  append_current_datetime?: boolean;\n};\n\n/* Agent types */\n\nexport type AgentAvatar = {\n  filepath: string;\n  source: string;\n};\n\nexport enum FilePurpose {\n  Vision = 'vision',\n  FineTune = 'fine-tune',\n  FineTuneResults = 'fine-tune-results',\n  Assistants = 'assistants',\n  AssistantsOutput = 'assistants_output',\n}\n\nexport const defaultOrderQuery: {\n  order: 'desc';\n  limit: 100;\n} = {\n  order: 'desc',\n  limit: 100,\n};\n\nexport enum AssistantStreamEvents {\n  ThreadCreated = 'thread.created',\n  ThreadRunCreated = 'thread.run.created',\n  ThreadRunQueued = 'thread.run.queued',\n  ThreadRunInProgress = 'thread.run.in_progress',\n  ThreadRunRequiresAction = 'thread.run.requires_action',\n  ThreadRunCompleted = 'thread.run.completed',\n  ThreadRunFailed = 'thread.run.failed',\n  ThreadRunCancelling = 'thread.run.cancelling',\n  ThreadRunCancelled = 'thread.run.cancelled',\n  ThreadRunExpired = 'thread.run.expired',\n  ThreadRunStepCreated = 'thread.run.step.created',\n  ThreadRunStepInProgress = 'thread.run.step.in_progress',\n  ThreadRunStepCompleted = 'thread.run.step.completed',\n  ThreadRunStepFailed = 'thread.run.step.failed',\n  ThreadRunStepCancelled = 'thread.run.step.cancelled',\n  ThreadRunStepExpired = 'thread.run.step.expired',\n  ThreadRunStepDelta = 'thread.run.step.delta',\n  ThreadMessageCreated = 'thread.message.created',\n  ThreadMessageInProgress = 'thread.message.in_progress',\n  ThreadMessageCompleted = 'thread.message.completed',\n  ThreadMessageIncomplete = 'thread.message.incomplete',\n  ThreadMessageDelta = 'thread.message.delta',\n  ErrorEvent = 'error',\n}\n","import { z } from 'zod';\n\nexport type TFeedbackRating = 'thumbsUp' | 'thumbsDown';\nexport const FEEDBACK_RATINGS = ['thumbsUp', 'thumbsDown'] as const;\n\nexport const FEEDBACK_REASON_KEYS = [\n  // Down\n  'not_matched',\n  'inaccurate',\n  'bad_style',\n  'missing_image',\n  'unjustified_refusal',\n  'not_helpful',\n  'other',\n  // Up\n  'accurate_reliable',\n  'creative_solution',\n  'clear_well_written',\n  'attention_to_detail',\n] as const;\n\nexport type TFeedbackTagKey = (typeof FEEDBACK_REASON_KEYS)[number];\n\nexport interface TFeedbackTag {\n  key: TFeedbackTagKey;\n  label: string;\n  direction: TFeedbackRating;\n  icon: string;\n}\n\n// --- Tag Registry ---\nexport const FEEDBACK_TAGS: TFeedbackTag[] = [\n  // Thumbs Down\n  {\n    key: 'not_matched',\n    label: 'com_ui_feedback_tag_not_matched',\n    direction: 'thumbsDown',\n    icon: 'AlertCircle',\n  },\n  {\n    key: 'inaccurate',\n    label: 'com_ui_feedback_tag_inaccurate',\n    direction: 'thumbsDown',\n    icon: 'AlertCircle',\n  },\n  {\n    key: 'bad_style',\n    label: 'com_ui_feedback_tag_bad_style',\n    direction: 'thumbsDown',\n    icon: 'PenTool',\n  },\n  {\n    key: 'missing_image',\n    label: 'com_ui_feedback_tag_missing_image',\n    direction: 'thumbsDown',\n    icon: 'ImageOff',\n  },\n  {\n    key: 'unjustified_refusal',\n    label: 'com_ui_feedback_tag_unjustified_refusal',\n    direction: 'thumbsDown',\n    icon: 'Ban',\n  },\n  {\n    key: 'not_helpful',\n    label: 'com_ui_feedback_tag_not_helpful',\n    direction: 'thumbsDown',\n    icon: 'ThumbsDown',\n  },\n  {\n    key: 'other',\n    label: 'com_ui_feedback_tag_other',\n    direction: 'thumbsDown',\n    icon: 'HelpCircle',\n  },\n  // Thumbs Up\n  {\n    key: 'accurate_reliable',\n    label: 'com_ui_feedback_tag_accurate_reliable',\n    direction: 'thumbsUp',\n    icon: 'CheckCircle',\n  },\n  {\n    key: 'creative_solution',\n    label: 'com_ui_feedback_tag_creative_solution',\n    direction: 'thumbsUp',\n    icon: 'Lightbulb',\n  },\n  {\n    key: 'clear_well_written',\n    label: 'com_ui_feedback_tag_clear_well_written',\n    direction: 'thumbsUp',\n    icon: 'PenTool',\n  },\n  {\n    key: 'attention_to_detail',\n    label: 'com_ui_feedback_tag_attention_to_detail',\n    direction: 'thumbsUp',\n    icon: 'Search',\n  },\n];\n\nexport function getTagsForRating(rating: TFeedbackRating): TFeedbackTag[] {\n  return FEEDBACK_TAGS.filter((tag) => tag.direction === rating);\n}\n\nexport const feedbackTagKeySchema = z.enum(FEEDBACK_REASON_KEYS);\nexport const feedbackRatingSchema = z.enum(FEEDBACK_RATINGS);\n\nexport const feedbackSchema = z.object({\n  rating: feedbackRatingSchema,\n  tag: feedbackTagKeySchema,\n  text: z.string().max(1024).optional(),\n});\n\nexport type TMinimalFeedback = z.infer<typeof feedbackSchema>;\n\nexport type TFeedback = {\n  rating: TFeedbackRating;\n  tag: TFeedbackTag | undefined;\n  text?: string;\n};\n\nexport function toMinimalFeedback(feedback: TFeedback | undefined): TMinimalFeedback | undefined {\n  if (!feedback?.rating || !feedback?.tag || !feedback.tag.key) {\n    return undefined;\n  }\n\n  return {\n    rating: feedback.rating,\n    tag: feedback.tag.key,\n    text: feedback.text,\n  };\n}\n\nexport function getTagByKey(key: TFeedbackTagKey | undefined): TFeedbackTag | undefined {\n  if (!key) {\n    return undefined;\n  }\n  return FEEDBACK_TAGS.find((tag) => tag.key === key);\n}\n","import { z } from 'zod';\nimport { Tools } from './types/assistants';\nimport type { TMessageContentParts, FunctionTool, FunctionToolCall } from './types/assistants';\nimport { TFeedback, feedbackSchema } from './feedback';\nimport type { SearchResultData } from './types/web';\nimport type { TFile } from './types/files';\n\nexport const isUUID = z.string().uuid();\n\nexport enum AuthType {\n  OVERRIDE_AUTH = 'override_auth',\n  USER_PROVIDED = 'user_provided',\n  SYSTEM_DEFINED = 'system_defined',\n}\n\nexport const authTypeSchema = z.nativeEnum(AuthType);\n\nexport enum EModelEndpoint {\n  azureOpenAI = 'azureOpenAI',\n  openAI = 'openAI',\n  google = 'google',\n  anthropic = 'anthropic',\n  assistants = 'assistants',\n  azureAssistants = 'azureAssistants',\n  agents = 'agents',\n  custom = 'custom',\n  bedrock = 'bedrock',\n  /** @deprecated */\n  chatGPTBrowser = 'chatGPTBrowser',\n  /** @deprecated */\n  gptPlugins = 'gptPlugins',\n}\n\nexport const paramEndpoints = new Set<EModelEndpoint | string>([\n  EModelEndpoint.agents,\n  EModelEndpoint.openAI,\n  EModelEndpoint.bedrock,\n  EModelEndpoint.azureOpenAI,\n  EModelEndpoint.anthropic,\n  EModelEndpoint.custom,\n  EModelEndpoint.google,\n]);\n\nexport enum BedrockProviders {\n  AI21 = 'ai21',\n  Amazon = 'amazon',\n  Anthropic = 'anthropic',\n  Cohere = 'cohere',\n  Meta = 'meta',\n  MistralAI = 'mistral',\n  StabilityAI = 'stability',\n  DeepSeek = 'deepseek',\n}\n\nexport const getModelKey = (endpoint: EModelEndpoint | string, model: string) => {\n  if (endpoint === EModelEndpoint.bedrock) {\n    const parts = model.split('.');\n    const provider = [parts[0], parts[1]].find((part) =>\n      Object.values(BedrockProviders).includes(part as BedrockProviders),\n    );\n    return (provider ?? parts[0]) as BedrockProviders;\n  }\n  return model;\n};\n\nexport const getSettingsKeys = (endpoint: EModelEndpoint | string, model: string) => {\n  const endpointKey = endpoint;\n  const modelKey = getModelKey(endpointKey, model);\n  const combinedKey = `${endpointKey}-${modelKey}`;\n  return [combinedKey, endpointKey];\n};\n\nexport type AssistantsEndpoint = EModelEndpoint.assistants | EModelEndpoint.azureAssistants;\n\nexport const isAssistantsEndpoint = (_endpoint?: AssistantsEndpoint | null | string): boolean => {\n  const endpoint = _endpoint ?? '';\n  if (!endpoint) {\n    return false;\n  }\n  return endpoint.toLowerCase().endsWith(EModelEndpoint.assistants);\n};\n\nexport type AgentProvider = Exclude<keyof typeof EModelEndpoint, EModelEndpoint.agents> | string;\n\nexport const isAgentsEndpoint = (_endpoint?: EModelEndpoint.agents | null | string): boolean => {\n  const endpoint = _endpoint ?? '';\n  if (!endpoint) {\n    return false;\n  }\n  return endpoint === EModelEndpoint.agents;\n};\n\nexport const isParamEndpoint = (\n  endpoint: EModelEndpoint | string,\n  endpointType?: EModelEndpoint | string,\n): boolean => {\n  if (paramEndpoints.has(endpoint)) {\n    return true;\n  }\n\n  if (endpointType != null) {\n    return paramEndpoints.has(endpointType);\n  }\n\n  return false;\n};\n\nexport enum ImageDetail {\n  low = 'low',\n  auto = 'auto',\n  high = 'high',\n}\n\nexport enum ReasoningEffort {\n  low = 'low',\n  medium = 'medium',\n  high = 'high',\n}\n\nexport const imageDetailNumeric = {\n  [ImageDetail.low]: 0,\n  [ImageDetail.auto]: 1,\n  [ImageDetail.high]: 2,\n};\n\nexport const imageDetailValue = {\n  0: ImageDetail.low,\n  1: ImageDetail.auto,\n  2: ImageDetail.high,\n};\n\nexport const eImageDetailSchema = z.nativeEnum(ImageDetail);\nexport const eReasoningEffortSchema = z.nativeEnum(ReasoningEffort);\n\nexport const defaultAssistantFormValues = {\n  assistant: '',\n  id: '',\n  name: '',\n  description: '',\n  instructions: '',\n  conversation_starters: [],\n  model: '',\n  functions: [],\n  code_interpreter: false,\n  image_vision: false,\n  retrieval: false,\n  append_current_datetime: false,\n};\n\nexport const defaultAgentFormValues = {\n  agent: {},\n  id: '',\n  name: '',\n  description: '',\n  instructions: '',\n  model: '',\n  model_parameters: {},\n  tools: [],\n  provider: {},\n  projectIds: [],\n  artifacts: '',\n  isCollaborative: false,\n  recursion_limit: undefined,\n  [Tools.execute_code]: false,\n  [Tools.file_search]: false,\n  [Tools.web_search]: false,\n};\n\nexport const ImageVisionTool: FunctionTool = {\n  type: Tools.function,\n  [Tools.function]: {\n    name: 'image_vision',\n    description: 'Get detailed text descriptions for all current image attachments.',\n    parameters: {\n      type: 'object',\n      properties: {},\n      required: [],\n    },\n  },\n};\n\nexport const isImageVisionTool = (tool: FunctionTool | FunctionToolCall) =>\n  tool.type === 'function' && tool.function?.name === ImageVisionTool.function?.name;\n\nexport const openAISettings = {\n  model: {\n    default: 'gpt-4o-mini' as const,\n  },\n  temperature: {\n    min: 0 as const,\n    max: 2 as const,\n    step: 0.01 as const,\n    default: 1 as const,\n  },\n  top_p: {\n    min: 0 as const,\n    max: 1 as const,\n    step: 0.01 as const,\n    default: 1 as const,\n  },\n  presence_penalty: {\n    min: 0 as const,\n    max: 2 as const,\n    step: 0.01 as const,\n    default: 0 as const,\n  },\n  frequency_penalty: {\n    min: 0 as const,\n    max: 2 as const,\n    step: 0.01 as const,\n    default: 0 as const,\n  },\n  resendFiles: {\n    default: true as const,\n  },\n  maxContextTokens: {\n    default: undefined,\n  },\n  max_tokens: {\n    default: undefined,\n  },\n  imageDetail: {\n    default: ImageDetail.auto as const,\n    min: 0 as const,\n    max: 2 as const,\n    step: 1 as const,\n  },\n};\n\nexport const googleSettings = {\n  model: {\n    default: 'gemini-1.5-flash-latest' as const,\n  },\n  maxOutputTokens: {\n    min: 1 as const,\n    max: 64000 as const,\n    step: 1 as const,\n    default: 8192 as const,\n  },\n  temperature: {\n    min: 0 as const,\n    max: 2 as const,\n    step: 0.01 as const,\n    default: 1 as const,\n  },\n  topP: {\n    min: 0 as const,\n    max: 1 as const,\n    step: 0.01 as const,\n    default: 0.95 as const,\n  },\n  topK: {\n    min: 1 as const,\n    max: 40 as const,\n    step: 1 as const,\n    default: 40 as const,\n  },\n  thinking: {\n    default: true as const,\n  },\n  thinkingBudget: {\n    min: -1 as const,\n    max: 32768 as const,\n    step: 1 as const,\n    /** `-1` = Dynamic Thinking, meaning the model will adjust\n     * the budget based on the complexity of the request.\n     */\n    default: -1 as const,\n  },\n};\n\nconst ANTHROPIC_MAX_OUTPUT = 128000 as const;\nconst DEFAULT_MAX_OUTPUT = 8192 as const;\nconst LEGACY_ANTHROPIC_MAX_OUTPUT = 4096 as const;\nexport const anthropicSettings = {\n  model: {\n    default: 'claude-3-5-sonnet-latest' as const,\n  },\n  temperature: {\n    min: 0 as const,\n    max: 1 as const,\n    step: 0.01 as const,\n    default: 1 as const,\n  },\n  promptCache: {\n    default: true as const,\n  },\n  thinking: {\n    default: true as const,\n  },\n  thinkingBudget: {\n    min: 1024 as const,\n    step: 100 as const,\n    max: 200000 as const,\n    default: 2000 as const,\n  },\n  maxOutputTokens: {\n    min: 1 as const,\n    max: ANTHROPIC_MAX_OUTPUT,\n    step: 1 as const,\n    default: DEFAULT_MAX_OUTPUT,\n    reset: (modelName: string) => {\n      if (/claude-3[-.]5-sonnet/.test(modelName) || /claude-3[-.]7/.test(modelName)) {\n        return DEFAULT_MAX_OUTPUT;\n      }\n\n      return 4096;\n    },\n    set: (value: number, modelName: string) => {\n      if (\n        !(/claude-3[-.]5-sonnet/.test(modelName) || /claude-3[-.]7/.test(modelName)) &&\n        value > LEGACY_ANTHROPIC_MAX_OUTPUT\n      ) {\n        return LEGACY_ANTHROPIC_MAX_OUTPUT;\n      }\n\n      return value;\n    },\n  },\n  topP: {\n    min: 0 as const,\n    max: 1 as const,\n    step: 0.01 as const,\n    default: 0.7 as const,\n  },\n  topK: {\n    min: 1 as const,\n    max: 40 as const,\n    step: 1 as const,\n    default: 5 as const,\n  },\n  resendFiles: {\n    default: true as const,\n  },\n  maxContextTokens: {\n    default: undefined,\n  },\n  legacy: {\n    maxOutputTokens: {\n      min: 1 as const,\n      max: LEGACY_ANTHROPIC_MAX_OUTPUT,\n      step: 1 as const,\n      default: LEGACY_ANTHROPIC_MAX_OUTPUT,\n    },\n  },\n};\n\nexport const agentsSettings = {\n  model: {\n    default: 'gpt-3.5-turbo-test' as const,\n  },\n  temperature: {\n    min: 0 as const,\n    max: 1 as const,\n    step: 0.01 as const,\n    default: 1 as const,\n  },\n  top_p: {\n    min: 0 as const,\n    max: 1 as const,\n    step: 0.01 as const,\n    default: 1 as const,\n  },\n  presence_penalty: {\n    min: 0 as const,\n    max: 2 as const,\n    step: 0.01 as const,\n    default: 0 as const,\n  },\n  frequency_penalty: {\n    min: 0 as const,\n    max: 2 as const,\n    step: 0.01 as const,\n    default: 0 as const,\n  },\n  resendFiles: {\n    default: true as const,\n  },\n  maxContextTokens: {\n    default: undefined,\n  },\n  max_tokens: {\n    default: undefined,\n  },\n  imageDetail: {\n    default: ImageDetail.auto as const,\n  },\n};\n\nexport const endpointSettings = {\n  [EModelEndpoint.openAI]: openAISettings,\n  [EModelEndpoint.google]: googleSettings,\n  [EModelEndpoint.anthropic]: anthropicSettings,\n  [EModelEndpoint.agents]: agentsSettings,\n  [EModelEndpoint.bedrock]: agentsSettings,\n};\n\nconst google = endpointSettings[EModelEndpoint.google];\n\nexport const eModelEndpointSchema = z.nativeEnum(EModelEndpoint);\n\nexport const extendedModelEndpointSchema = z.union([eModelEndpointSchema, z.string()]);\n\nexport const tPluginAuthConfigSchema = z.object({\n  authField: z.string(),\n  label: z.string(),\n  description: z.string(),\n});\n\nexport type TPluginAuthConfig = z.infer<typeof tPluginAuthConfigSchema>;\n\nexport const tPluginSchema = z.object({\n  name: z.string(),\n  pluginKey: z.string(),\n  description: z.string().optional(),\n  icon: z.string().optional(),\n  authConfig: z.array(tPluginAuthConfigSchema).optional(),\n  authenticated: z.boolean().optional(),\n  chatMenu: z.boolean().optional(),\n  isButton: z.boolean().optional(),\n  toolkit: z.boolean().optional(),\n});\n\nexport type TPlugin = z.infer<typeof tPluginSchema>;\n\nexport type TInput = {\n  inputStr: string;\n};\n\nexport type TResPlugin = {\n  plugin: string;\n  input: string;\n  thought: string;\n  loading?: boolean;\n  outputs?: string;\n  latest?: string;\n  inputs?: TInput[];\n};\n\nexport const tExampleSchema = z.object({\n  input: z.object({\n    content: z.string(),\n  }),\n  output: z.object({\n    content: z.string(),\n  }),\n});\n\nexport type TExample = z.infer<typeof tExampleSchema>;\n\nexport enum EAgent {\n  functions = 'functions',\n  classic = 'classic',\n}\n\nexport const agentOptionSettings = {\n  model: {\n    default: 'gpt-4o-mini',\n  },\n  temperature: {\n    min: 0,\n    max: 1,\n    step: 0.01,\n    default: 0,\n  },\n  agent: {\n    default: EAgent.functions,\n    options: [EAgent.functions, EAgent.classic],\n  },\n  skipCompletion: {\n    default: true,\n  },\n};\n\nexport const eAgentOptionsSchema = z.nativeEnum(EAgent);\n\nexport const tAgentOptionsSchema = z.object({\n  agent: z.string().default(EAgent.functions),\n  skipCompletion: z.boolean().default(agentOptionSettings.skipCompletion.default),\n  model: z.string(),\n  temperature: z.number().default(agentOptionSettings.temperature.default),\n});\n\nexport const tMessageSchema = z.object({\n  messageId: z.string(),\n  endpoint: z.string().optional(),\n  clientId: z.string().nullable().optional(),\n  conversationId: z.string().nullable(),\n  parentMessageId: z.string().nullable(),\n  responseMessageId: z.string().nullable().optional(),\n  overrideParentMessageId: z.string().nullable().optional(),\n  bg: z.string().nullable().optional(),\n  model: z.string().nullable().optional(),\n  title: z.string().nullable().or(z.literal('New Chat')).default('New Chat'),\n  sender: z.string().optional(),\n  text: z.string(),\n  generation: z.string().nullable().optional(),\n  isCreatedByUser: z.boolean(),\n  error: z.boolean().optional(),\n  clientTimestamp: z.string().optional(),\n  createdAt: z\n    .string()\n    .optional()\n    .default(() => new Date().toISOString()),\n  updatedAt: z\n    .string()\n    .optional()\n    .default(() => new Date().toISOString()),\n  current: z.boolean().optional(),\n  unfinished: z.boolean().optional(),\n  searchResult: z.boolean().optional(),\n  finish_reason: z.string().optional(),\n  /* assistant */\n  thread_id: z.string().optional(),\n  /* frontend components */\n  iconURL: z.string().nullable().optional(),\n  feedback: feedbackSchema.optional(),\n});\n\nexport type MemoryArtifact = {\n  key: string;\n  value?: string;\n  tokenCount?: number;\n  type: 'update' | 'delete';\n};\n\nexport type TAttachmentMetadata = {\n  type?: Tools;\n  messageId: string;\n  toolCallId: string;\n  [Tools.web_search]?: SearchResultData;\n  [Tools.memory]?: MemoryArtifact;\n};\n\nexport type TAttachment =\n  | (TFile & TAttachmentMetadata)\n  | (Pick<TFile, 'filename' | 'filepath' | 'conversationId'> & {\n      expiresAt: number;\n    } & TAttachmentMetadata);\n\nexport type TMessage = z.input<typeof tMessageSchema> & {\n  children?: TMessage[];\n  plugin?: TResPlugin | null;\n  plugins?: TResPlugin[];\n  content?: TMessageContentParts[];\n  files?: Partial<TFile>[];\n  depth?: number;\n  siblingIndex?: number;\n  attachments?: TAttachment[];\n  clientTimestamp?: string;\n  feedback?: TFeedback;\n};\n\nexport const coerceNumber = z.union([z.number(), z.string()]).transform((val) => {\n  if (typeof val === 'string') {\n    return val.trim() === '' ? undefined : parseFloat(val);\n  }\n  return val;\n});\n\ntype DocumentTypeValue =\n  | null\n  | boolean\n  | number\n  | string\n  | DocumentTypeValue[]\n  | { [key: string]: DocumentTypeValue };\n\nconst DocumentType: z.ZodType<DocumentTypeValue> = z.lazy(() =>\n  z.union([\n    z.null(),\n    z.boolean(),\n    z.number(),\n    z.string(),\n    z.array(z.lazy(() => DocumentType)),\n    z.record(z.lazy(() => DocumentType)),\n  ]),\n);\n\nexport const tConversationSchema = z.object({\n  conversationId: z.string().nullable(),\n  endpoint: eModelEndpointSchema.nullable(),\n  endpointType: eModelEndpointSchema.nullable().optional(),\n  isArchived: z.boolean().optional(),\n  title: z.string().nullable().or(z.literal('New Chat')).default('New Chat'),\n  user: z.string().optional(),\n  messages: z.array(z.string()).optional(),\n  tools: z.union([z.array(tPluginSchema), z.array(z.string())]).optional(),\n  modelLabel: z.string().nullable().optional(),\n  userLabel: z.string().optional(),\n  model: z.string().nullable().optional(),\n  promptPrefix: z.string().nullable().optional(),\n  temperature: z.number().optional(),\n  topP: z.number().optional(),\n  topK: z.number().optional(),\n  top_p: z.number().optional(),\n  frequency_penalty: z.number().optional(),\n  presence_penalty: z.number().optional(),\n  parentMessageId: z.string().optional(),\n  maxOutputTokens: coerceNumber.optional(),\n  maxContextTokens: coerceNumber.optional(),\n  max_tokens: coerceNumber.optional(),\n  /* Anthropic */\n  promptCache: z.boolean().optional(),\n  system: z.string().optional(),\n  thinking: z.boolean().optional(),\n  thinkingBudget: coerceNumber.optional(),\n  /* artifacts */\n  artifacts: z.string().optional(),\n  /* google */\n  context: z.string().nullable().optional(),\n  examples: z.array(tExampleSchema).optional(),\n  /* DB */\n  tags: z.array(z.string()).optional(),\n  createdAt: z.string(),\n  updatedAt: z.string(),\n  /* Files */\n  resendFiles: z.boolean().optional(),\n  file_ids: z.array(z.string()).optional(),\n  /* vision */\n  imageDetail: eImageDetailSchema.optional(),\n  /* OpenAI: o1 only */\n  reasoning_effort: eReasoningEffortSchema.optional(),\n  /* assistant */\n  assistant_id: z.string().optional(),\n  /* agents */\n  agent_id: z.string().optional(),\n  /* AWS Bedrock */\n  region: z.string().optional(),\n  maxTokens: coerceNumber.optional(),\n  additionalModelRequestFields: DocumentType.optional(),\n  /* assistants */\n  instructions: z.string().optional(),\n  additional_instructions: z.string().optional(),\n  append_current_datetime: z.boolean().optional(),\n  /** Used to overwrite active conversation settings when saving a Preset */\n  presetOverride: z.record(z.unknown()).optional(),\n  stop: z.array(z.string()).optional(),\n  /* frontend components */\n  greeting: z.string().optional(),\n  spec: z.string().nullable().optional(),\n  iconURL: z.string().nullable().optional(),\n  /* temporary chat */\n  expiredAt: z.string().nullable().optional(),\n  /** @deprecated */\n  resendImages: z.boolean().optional(),\n  /** @deprecated */\n  agentOptions: tAgentOptionsSchema.nullable().optional(),\n  /** @deprecated Prefer `modelLabel` over `chatGptLabel` */\n  chatGptLabel: z.string().nullable().optional(),\n});\n\nexport const tPresetSchema = tConversationSchema\n  .omit({\n    conversationId: true,\n    createdAt: true,\n    updatedAt: true,\n    title: true,\n  })\n  .merge(\n    z.object({\n      conversationId: z.string().nullable().optional(),\n      presetId: z.string().nullable().optional(),\n      title: z.string().nullable().optional(),\n      defaultPreset: z.boolean().optional(),\n      order: z.number().optional(),\n      endpoint: extendedModelEndpointSchema.nullable(),\n    }),\n  );\n\nexport const tConvoUpdateSchema = tConversationSchema.merge(\n  z.object({\n    endpoint: extendedModelEndpointSchema.nullable(),\n    createdAt: z.string().optional(),\n    updatedAt: z.string().optional(),\n  }),\n);\n\nexport const tQueryParamsSchema = tConversationSchema\n  .pick({\n    // chat settings\n    /** The model spec to be used */\n    spec: true,\n    /** The AI context window, overrides the system-defined window as determined by `model` value */\n    maxContextTokens: true,\n    /**\n     * Whether or not to re-submit files from previous messages on subsequent messages\n     * */\n    resendFiles: true,\n    /**\n     * @endpoints openAI, custom, azureOpenAI\n     *\n     * System parameter that only affects the above endpoints.\n     * Image detail for re-sizing according to OpenAI spec, defaults to `auto`\n     * */\n    imageDetail: true,\n    /**\n     * AKA Custom Instructions, dynamically added to chat history as a system message;\n     * for `bedrock` endpoint, this is used as the `system` model param if the provider uses it;\n     * for `assistants` endpoint, this is used as the `additional_instructions` model param:\n     * https://platform.openai.com/docs/api-reference/runs/createRun#runs-createrun-additional_instructions\n     * ; otherwise, a message with `system` role is added to the chat history\n     */\n    promptPrefix: true,\n    // Model parameters\n    /** @endpoints openAI, custom, azureOpenAI, google, anthropic, assistants, azureAssistants, bedrock */\n    model: true,\n    /** @endpoints openAI, custom, azureOpenAI, google, anthropic, bedrock */\n    temperature: true,\n    /** @endpoints openAI, custom, azureOpenAI */\n    presence_penalty: true,\n    /** @endpoints openAI, custom, azureOpenAI */\n    frequency_penalty: true,\n    /** @endpoints openAI, custom, azureOpenAI */\n    stop: true,\n    /** @endpoints openAI, custom, azureOpenAI */\n    top_p: true,\n    /** @endpoints openAI, custom, azureOpenAI */\n    max_tokens: true,\n    /** @endpoints google, anthropic, bedrock */\n    topP: true,\n    /** @endpoints google, anthropic */\n    topK: true,\n    /** @endpoints google, anthropic */\n    maxOutputTokens: true,\n    /** @endpoints anthropic */\n    promptCache: true,\n    thinking: true,\n    thinkingBudget: true,\n    /** @endpoints bedrock */\n    region: true,\n    /** @endpoints bedrock */\n    maxTokens: true,\n    /** @endpoints agents */\n    agent_id: true,\n    /** @endpoints assistants, azureAssistants */\n    assistant_id: true,\n    /** @endpoints assistants, azureAssistants */\n    append_current_datetime: true,\n    /**\n     * @endpoints assistants, azureAssistants\n     *\n     * Overrides existing assistant instructions, only used for the current run:\n     * https://platform.openai.com/docs/api-reference/runs/createRun#runs-createrun-instructions\n     * */\n    instructions: true,\n  })\n  .merge(\n    z.object({\n      /** @endpoints openAI, custom, azureOpenAI, google, anthropic, assistants, azureAssistants, bedrock, agents */\n      endpoint: extendedModelEndpointSchema.nullable(),\n    }),\n  );\n\nexport type TPreset = z.infer<typeof tPresetSchema>;\n\nexport type TSetOption = (\n  param: number | string,\n) => (newValue: number | string | boolean | string[] | Partial<TPreset>) => void;\n\nexport type TConversation = z.infer<typeof tConversationSchema> & {\n  presetOverride?: Partial<TPreset>;\n  disableParams?: boolean;\n};\n\nexport const tSharedLinkSchema = z.object({\n  conversationId: z.string(),\n  shareId: z.string(),\n  messages: z.array(z.string()),\n  isPublic: z.boolean(),\n  title: z.string(),\n  createdAt: z.string(),\n  updatedAt: z.string(),\n});\n\nexport type TSharedLink = z.infer<typeof tSharedLinkSchema>;\n\nexport const tConversationTagSchema = z.object({\n  _id: z.string(),\n  user: z.string(),\n  tag: z.string(),\n  description: z.string().optional(),\n  createdAt: z.string(),\n  updatedAt: z.string(),\n  count: z.number(),\n  position: z.number(),\n});\nexport type TConversationTag = z.infer<typeof tConversationTagSchema>;\n\nexport const googleBaseSchema = tConversationSchema.pick({\n  model: true,\n  modelLabel: true,\n  promptPrefix: true,\n  examples: true,\n  temperature: true,\n  maxOutputTokens: true,\n  artifacts: true,\n  topP: true,\n  topK: true,\n  thinking: true,\n  thinkingBudget: true,\n  iconURL: true,\n  greeting: true,\n  spec: true,\n  maxContextTokens: true,\n});\n\nexport const googleSchema = googleBaseSchema\n  .transform((obj: Partial<TConversation>) => removeNullishValues(obj))\n  .catch(() => ({}));\n\n/**\n   * TODO: Map the following fields:\n  - presence_penalty -> presencePenalty\n  - frequency_penalty -> frequencyPenalty\n  - stop -> stopSequences\n   */\nexport const googleGenConfigSchema = z\n  .object({\n    maxOutputTokens: coerceNumber.optional(),\n    temperature: coerceNumber.optional(),\n    topP: coerceNumber.optional(),\n    topK: coerceNumber.optional(),\n    presencePenalty: coerceNumber.optional(),\n    frequencyPenalty: coerceNumber.optional(),\n    stopSequences: z.array(z.string()).optional(),\n    thinkingConfig: z\n      .object({\n        includeThoughts: z.boolean().optional(),\n        thinkingBudget: coerceNumber.optional(),\n      })\n      .optional(),\n  })\n  .strip()\n  .optional();\n\nconst gptPluginsBaseSchema = tConversationSchema.pick({\n  model: true,\n  modelLabel: true,\n  chatGptLabel: true,\n  promptPrefix: true,\n  temperature: true,\n  artifacts: true,\n  top_p: true,\n  presence_penalty: true,\n  frequency_penalty: true,\n  tools: true,\n  agentOptions: true,\n  iconURL: true,\n  greeting: true,\n  spec: true,\n  maxContextTokens: true,\n});\n\nexport const gptPluginsSchema = gptPluginsBaseSchema\n  .transform((obj) => {\n    const result = {\n      ...obj,\n      model: obj.model ?? 'gpt-3.5-turbo',\n      chatGptLabel: obj.chatGptLabel ?? obj.modelLabel ?? null,\n      promptPrefix: obj.promptPrefix ?? null,\n      temperature: obj.temperature ?? 0.8,\n      top_p: obj.top_p ?? 1,\n      presence_penalty: obj.presence_penalty ?? 0,\n      frequency_penalty: obj.frequency_penalty ?? 0,\n      tools: obj.tools ?? [],\n      agentOptions: obj.agentOptions ?? {\n        agent: EAgent.functions,\n        skipCompletion: true,\n        model: 'gpt-3.5-turbo',\n        temperature: 0,\n      },\n      iconURL: obj.iconURL ?? undefined,\n      greeting: obj.greeting ?? undefined,\n      spec: obj.spec ?? undefined,\n      maxContextTokens: obj.maxContextTokens ?? undefined,\n    };\n\n    if (obj.modelLabel != null && obj.modelLabel !== '') {\n      result.modelLabel = null;\n    }\n\n    return result;\n  })\n  .catch(() => ({\n    model: 'gpt-3.5-turbo',\n    chatGptLabel: null,\n    promptPrefix: null,\n    temperature: 0.8,\n    top_p: 1,\n    presence_penalty: 0,\n    frequency_penalty: 0,\n    tools: [],\n    agentOptions: {\n      agent: EAgent.functions,\n      skipCompletion: true,\n      model: 'gpt-3.5-turbo',\n      temperature: 0,\n    },\n    iconURL: undefined,\n    greeting: undefined,\n    spec: undefined,\n    maxContextTokens: undefined,\n  }));\n\nexport function removeNullishValues<T extends Record<string, unknown>>(\n  obj: T,\n  removeEmptyStrings?: boolean,\n): Partial<T> {\n  const newObj: Partial<T> = { ...obj };\n\n  (Object.keys(newObj) as Array<keyof T>).forEach((key) => {\n    const value = newObj[key];\n    if (value === undefined || value === null) {\n      delete newObj[key];\n    }\n    if (removeEmptyStrings && typeof value === 'string' && value === '') {\n      delete newObj[key];\n    }\n  });\n\n  return newObj;\n}\n\nconst assistantBaseSchema = tConversationSchema.pick({\n  model: true,\n  assistant_id: true,\n  instructions: true,\n  artifacts: true,\n  promptPrefix: true,\n  iconURL: true,\n  greeting: true,\n  spec: true,\n  append_current_datetime: true,\n});\n\nexport const assistantSchema = assistantBaseSchema\n  .transform((obj) => ({\n    ...obj,\n    model: obj.model ?? openAISettings.model.default,\n    assistant_id: obj.assistant_id ?? undefined,\n    instructions: obj.instructions ?? undefined,\n    promptPrefix: obj.promptPrefix ?? null,\n    iconURL: obj.iconURL ?? undefined,\n    greeting: obj.greeting ?? undefined,\n    spec: obj.spec ?? undefined,\n    append_current_datetime: obj.append_current_datetime ?? false,\n  }))\n  .catch(() => ({\n    model: openAISettings.model.default,\n    assistant_id: undefined,\n    instructions: undefined,\n    promptPrefix: null,\n    iconURL: undefined,\n    greeting: undefined,\n    spec: undefined,\n    append_current_datetime: false,\n  }));\n\nconst compactAssistantBaseSchema = tConversationSchema.pick({\n  model: true,\n  assistant_id: true,\n  instructions: true,\n  promptPrefix: true,\n  artifacts: true,\n  iconURL: true,\n  greeting: true,\n  spec: true,\n});\n\nexport const compactAssistantSchema = compactAssistantBaseSchema\n  .transform((obj) => removeNullishValues(obj))\n  .catch(() => ({}));\n\nexport const agentsBaseSchema = tConversationSchema.pick({\n  model: true,\n  modelLabel: true,\n  temperature: true,\n  top_p: true,\n  presence_penalty: true,\n  frequency_penalty: true,\n  resendFiles: true,\n  imageDetail: true,\n  agent_id: true,\n  instructions: true,\n  promptPrefix: true,\n  iconURL: true,\n  greeting: true,\n  maxContextTokens: true,\n});\n\nexport const agentsSchema = agentsBaseSchema\n  .transform((obj) => ({\n    ...obj,\n    model: obj.model ?? agentsSettings.model.default,\n    modelLabel: obj.modelLabel ?? null,\n    temperature: obj.temperature ?? 1,\n    top_p: obj.top_p ?? 1,\n    presence_penalty: obj.presence_penalty ?? 0,\n    frequency_penalty: obj.frequency_penalty ?? 0,\n    resendFiles:\n      typeof obj.resendFiles === 'boolean' ? obj.resendFiles : agentsSettings.resendFiles.default,\n    imageDetail: obj.imageDetail ?? ImageDetail.auto,\n    agent_id: obj.agent_id ?? undefined,\n    instructions: obj.instructions ?? undefined,\n    promptPrefix: obj.promptPrefix ?? null,\n    iconURL: obj.iconURL ?? undefined,\n    greeting: obj.greeting ?? undefined,\n    maxContextTokens: obj.maxContextTokens ?? undefined,\n  }))\n  .catch(() => ({\n    model: agentsSettings.model.default,\n    modelLabel: null,\n    temperature: 1,\n    top_p: 1,\n    presence_penalty: 0,\n    frequency_penalty: 0,\n    resendFiles: agentsSettings.resendFiles.default,\n    imageDetail: ImageDetail.auto,\n    agent_id: undefined,\n    instructions: undefined,\n    promptPrefix: null,\n    iconURL: undefined,\n    greeting: undefined,\n    maxContextTokens: undefined,\n  }));\n\nexport const openAIBaseSchema = tConversationSchema.pick({\n  model: true,\n  modelLabel: true,\n  chatGptLabel: true,\n  promptPrefix: true,\n  temperature: true,\n  top_p: true,\n  presence_penalty: true,\n  frequency_penalty: true,\n  resendFiles: true,\n  artifacts: true,\n  imageDetail: true,\n  stop: true,\n  iconURL: true,\n  greeting: true,\n  spec: true,\n  maxContextTokens: true,\n  max_tokens: true,\n  reasoning_effort: true,\n});\n\nexport const openAISchema = openAIBaseSchema\n  .transform((obj: Partial<TConversation>) => removeNullishValues(obj))\n  .catch(() => ({}));\n\nexport const compactGoogleSchema = googleBaseSchema\n  .transform((obj) => {\n    const newObj: Partial<TConversation> = { ...obj };\n    if (newObj.temperature === google.temperature.default) {\n      delete newObj.temperature;\n    }\n    if (newObj.maxOutputTokens === google.maxOutputTokens.default) {\n      delete newObj.maxOutputTokens;\n    }\n    if (newObj.topP === google.topP.default) {\n      delete newObj.topP;\n    }\n    if (newObj.topK === google.topK.default) {\n      delete newObj.topK;\n    }\n\n    return removeNullishValues(newObj);\n  })\n  .catch(() => ({}));\n\nexport const anthropicBaseSchema = tConversationSchema.pick({\n  model: true,\n  modelLabel: true,\n  promptPrefix: true,\n  temperature: true,\n  maxOutputTokens: true,\n  topP: true,\n  topK: true,\n  resendFiles: true,\n  promptCache: true,\n  thinking: true,\n  thinkingBudget: true,\n  artifacts: true,\n  iconURL: true,\n  greeting: true,\n  spec: true,\n  maxContextTokens: true,\n});\n\nexport const anthropicSchema = anthropicBaseSchema\n  .transform((obj) => removeNullishValues(obj))\n  .catch(() => ({}));\n\nexport const compactPluginsSchema = gptPluginsBaseSchema\n  .transform((obj) => {\n    const newObj: Partial<TConversation> = { ...obj };\n    if (newObj.modelLabel === null) {\n      delete newObj.modelLabel;\n    }\n    if (newObj.chatGptLabel === null) {\n      delete newObj.chatGptLabel;\n    }\n    if (newObj.promptPrefix === null) {\n      delete newObj.promptPrefix;\n    }\n    if (newObj.temperature === 0.8) {\n      delete newObj.temperature;\n    }\n    if (newObj.top_p === 1) {\n      delete newObj.top_p;\n    }\n    if (newObj.presence_penalty === 0) {\n      delete newObj.presence_penalty;\n    }\n    if (newObj.frequency_penalty === 0) {\n      delete newObj.frequency_penalty;\n    }\n    if (newObj.tools?.length === 0) {\n      delete newObj.tools;\n    }\n\n    if (\n      newObj.agentOptions &&\n      newObj.agentOptions.agent === EAgent.functions &&\n      newObj.agentOptions.skipCompletion === true &&\n      newObj.agentOptions.model === 'gpt-3.5-turbo' &&\n      newObj.agentOptions.temperature === 0\n    ) {\n      delete newObj.agentOptions;\n    }\n\n    return removeNullishValues(newObj);\n  })\n  .catch(() => ({}));\n\nexport const tBannerSchema = z.object({\n  bannerId: z.string(),\n  message: z.string(),\n  displayFrom: z.string(),\n  displayTo: z.string(),\n  createdAt: z.string(),\n  updatedAt: z.string(),\n  isPublic: z.boolean(),\n});\nexport type TBanner = z.infer<typeof tBannerSchema>;\n\nexport const compactAgentsBaseSchema = tConversationSchema.pick({\n  spec: true,\n  // model: true,\n  iconURL: true,\n  greeting: true,\n  agent_id: true,\n  instructions: true,\n  additional_instructions: true,\n});\n\nexport const compactAgentsSchema = compactAgentsBaseSchema\n  .transform((obj) => removeNullishValues(obj))\n  .catch(() => ({}));\n","import { EToolResources } from './assistants';\n\nexport enum FileSources {\n  local = 'local',\n  firebase = 'firebase',\n  azure = 'azure',\n  azure_blob = 'azure_blob',\n  openai = 'openai',\n  s3 = 's3',\n  vectordb = 'vectordb',\n  execute_code = 'execute_code',\n  mistral_ocr = 'mistral_ocr',\n  azure_mistral_ocr = 'azure_mistral_ocr',\n  text = 'text',\n}\n\nexport const checkOpenAIStorage = (source: string) =>\n  source === FileSources.openai || source === FileSources.azure;\n\nexport enum FileContext {\n  avatar = 'avatar',\n  unknown = 'unknown',\n  agents = 'agents',\n  assistants = 'assistants',\n  execute_code = 'execute_code',\n  image_generation = 'image_generation',\n  assistants_output = 'assistants_output',\n  message_attachment = 'message_attachment',\n  filename = 'filename',\n  updatedAt = 'updatedAt',\n  source = 'source',\n  filterSource = 'filterSource',\n  context = 'context',\n  bytes = 'bytes',\n}\n\nexport type EndpointFileConfig = {\n  disabled?: boolean;\n  fileLimit?: number;\n  fileSizeLimit?: number;\n  totalSizeLimit?: number;\n  supportedMimeTypes?: RegExp[];\n};\n\nexport type FileConfig = {\n  endpoints: {\n    [key: string]: EndpointFileConfig;\n  };\n  serverFileSizeLimit?: number;\n  avatarSizeLimit?: number;\n  clientImageResize?: {\n    enabled?: boolean;\n    maxWidth?: number;\n    maxHeight?: number;\n    quality?: number;\n  };\n  checkType?: (fileType: string, supportedTypes: RegExp[]) => boolean;\n};\n\nexport type TFile = {\n  _id?: string;\n  __v?: number;\n  user: string;\n  conversationId?: string;\n  message?: string;\n  file_id: string;\n  temp_file_id?: string;\n  bytes: number;\n  embedded: boolean;\n  filename: string;\n  filepath: string;\n  object: 'file';\n  type: string;\n  usage: number;\n  context?: FileContext;\n  source?: FileSources;\n  filterSource?: FileSources;\n  width?: number;\n  height?: number;\n  expiresAt?: string | Date;\n  preview?: string;\n  metadata?: { fileIdentifier?: string };\n  createdAt?: string | Date;\n  updatedAt?: string | Date;\n};\n\nexport type TFileUpload = TFile & {\n  temp_file_id: string;\n};\n\nexport type AvatarUploadResponse = {\n  url: string;\n};\n\nexport type SpeechToTextResponse = {\n  text: string;\n};\n\nexport type VoiceResponse = string[];\n\nexport type UploadMutationOptions = {\n  onSuccess?: (data: TFileUpload, variables: FormData, context?: unknown) => void;\n  onMutate?: (variables: FormData) => void | Promise<unknown>;\n  onError?: (error: unknown, variables: FormData, context?: unknown) => void;\n};\n\nexport type UploadAvatarOptions = {\n  onSuccess?: (data: AvatarUploadResponse, variables: FormData, context?: unknown) => void;\n  onMutate?: (variables: FormData) => void | Promise<unknown>;\n  onError?: (error: unknown, variables: FormData, context?: unknown) => void;\n};\n\nexport type SpeechToTextOptions = {\n  onSuccess?: (data: SpeechToTextResponse, variables: FormData, context?: unknown) => void;\n  onMutate?: (variables: FormData) => void | Promise<unknown>;\n  onError?: (error: unknown, variables: FormData, context?: unknown) => void;\n};\n\nexport type TextToSpeechOptions = {\n  onSuccess?: (data: ArrayBuffer, variables: FormData, context?: unknown) => void;\n  onMutate?: (variables: FormData) => void | Promise<unknown>;\n  onError?: (error: unknown, variables: FormData, context?: unknown) => void;\n};\n\nexport type VoiceOptions = {\n  onSuccess?: (data: VoiceResponse, variables: unknown, context?: unknown) => void;\n  onMutate?: () => void | Promise<unknown>;\n  onError?: (error: unknown, variables: unknown, context?: unknown) => void;\n};\n\nexport type DeleteFilesResponse = {\n  message: string;\n  result: Record<string, unknown>;\n};\n\nexport type BatchFile = {\n  file_id: string;\n  filepath: string;\n  embedded: boolean;\n  source: FileSources;\n  temp_file_id?: string;\n};\n\nexport type DeleteFilesBody = {\n  files: BatchFile[];\n  agent_id?: string;\n  assistant_id?: string;\n  tool_resource?: EToolResources;\n};\n\nexport type DeleteMutationOptions = {\n  onSuccess?: (data: DeleteFilesResponse, variables: DeleteFilesBody, context?: unknown) => void;\n  onMutate?: (variables: DeleteFilesBody) => void | Promise<unknown>;\n  onError?: (error: unknown, variables: DeleteFilesBody, context?: unknown) => void;\n};\n","import { z } from 'zod';\nimport type { TPreset } from './schemas';\nimport {\n  EModelEndpoint,\n  tPresetSchema,\n  eModelEndpointSchema,\n  AuthType,\n  authTypeSchema,\n} from './schemas';\n\nexport type TModelSpec = {\n  name: string;\n  label: string;\n  preset: TPreset;\n  order?: number;\n  default?: boolean;\n  description?: string;\n  showIconInMenu?: boolean;\n  showIconInHeader?: boolean;\n  iconURL?: string | EModelEndpoint; // Allow using project-included icons\n  authType?: AuthType;\n};\n\nexport const tModelSpecSchema = z.object({\n  name: z.string(),\n  label: z.string(),\n  preset: tPresetSchema,\n  order: z.number().optional(),\n  default: z.boolean().optional(),\n  description: z.string().optional(),\n  showIconInMenu: z.boolean().optional(),\n  showIconInHeader: z.boolean().optional(),\n  iconURL: z.union([z.string(), eModelEndpointSchema]).optional(),\n  authType: authTypeSchema.optional(),\n});\n\nexport const specsConfigSchema = z.object({\n  enforce: z.boolean().default(false),\n  prioritize: z.boolean().default(true),\n  list: z.array(tModelSpecSchema).min(1),\n  addedEndpoints: z.array(z.union([z.string(), eModelEndpointSchema])).optional(),\n});\n\nexport type TSpecsConfig = z.infer<typeof specsConfigSchema>;\n","import { z } from 'zod';\nimport { EModelEndpoint } from './schemas';\nimport type { EndpointFileConfig, FileConfig } from './types/files';\n\nexport const supportsFiles = {\n  [EModelEndpoint.openAI]: true,\n  [EModelEndpoint.google]: true,\n  [EModelEndpoint.assistants]: true,\n  [EModelEndpoint.azureAssistants]: true,\n  [EModelEndpoint.agents]: true,\n  [EModelEndpoint.azureOpenAI]: true,\n  [EModelEndpoint.anthropic]: true,\n  [EModelEndpoint.custom]: true,\n  [EModelEndpoint.bedrock]: true,\n};\n\nexport const excelFileTypes = [\n  'application/vnd.ms-excel',\n  'application/msexcel',\n  'application/x-msexcel',\n  'application/x-ms-excel',\n  'application/x-excel',\n  'application/x-dos_ms_excel',\n  'application/xls',\n  'application/x-xls',\n  'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n];\n\nexport const fullMimeTypesList = [\n  'text/x-c',\n  'text/x-c++',\n  'application/csv',\n  'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n  'text/html',\n  'text/x-java',\n  'application/json',\n  'text/markdown',\n  'application/pdf',\n  'text/x-php',\n  'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n  'text/x-python',\n  'text/x-script.python',\n  'text/x-ruby',\n  'text/x-tex',\n  'text/plain',\n  'text/css',\n  'text/vtt',\n  'image/jpeg',\n  'text/javascript',\n  'image/gif',\n  'image/png',\n  'image/heic',\n  'image/heif',\n  'application/x-tar',\n  'application/typescript',\n  'application/xml',\n  'application/zip',\n  'image/svg',\n  'image/svg+xml',\n  ...excelFileTypes,\n];\n\nexport const codeInterpreterMimeTypesList = [\n  'text/x-c',\n  'text/x-c++',\n  'application/csv',\n  'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n  'text/html',\n  'text/x-java',\n  'application/json',\n  'text/markdown',\n  'application/pdf',\n  'text/x-php',\n  'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n  'text/x-python',\n  'text/x-script.python',\n  'text/x-ruby',\n  'text/x-tex',\n  'text/plain',\n  'text/css',\n  'image/jpeg',\n  'text/javascript',\n  'image/gif',\n  'image/png',\n  'image/heic',\n  'image/heif',\n  'application/x-tar',\n  'application/typescript',\n  'application/xml',\n  'application/zip',\n  ...excelFileTypes,\n];\n\nexport const retrievalMimeTypesList = [\n  'text/x-c',\n  'text/x-c++',\n  'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n  'text/html',\n  'text/x-java',\n  'application/json',\n  'text/markdown',\n  'application/pdf',\n  'text/x-php',\n  'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n  'text/x-python',\n  'text/x-script.python',\n  'text/x-ruby',\n  'text/x-tex',\n  'text/plain',\n];\n\nexport const imageExtRegex = /\\.(jpg|jpeg|png|gif|webp|heic|heif)$/i;\n\nexport const excelMimeTypes =\n  /^application\\/(vnd\\.ms-excel|msexcel|x-msexcel|x-ms-excel|x-excel|x-dos_ms_excel|xls|x-xls|vnd\\.openxmlformats-officedocument\\.spreadsheetml\\.sheet)$/;\n\nexport const textMimeTypes =\n  /^(text\\/(x-c|x-csharp|tab-separated-values|x-c\\+\\+|x-h|x-java|html|markdown|x-php|x-python|x-script\\.python|x-ruby|x-tex|plain|css|vtt|javascript|csv))$/;\n\nexport const applicationMimeTypes =\n  /^(application\\/(epub\\+zip|csv|json|pdf|x-tar|typescript|vnd\\.openxmlformats-officedocument\\.(wordprocessingml\\.document|presentationml\\.presentation|spreadsheetml\\.sheet)|xml|zip))$/;\n\nexport const imageMimeTypes = /^image\\/(jpeg|gif|png|webp|heic|heif)$/;\n\nexport const supportedMimeTypes = [\n  textMimeTypes,\n  excelMimeTypes,\n  applicationMimeTypes,\n  imageMimeTypes,\n  /** Supported by LC Code Interpreter PAI */\n  /^image\\/(svg|svg\\+xml)$/,\n];\n\nexport const codeInterpreterMimeTypes = [\n  textMimeTypes,\n  excelMimeTypes,\n  applicationMimeTypes,\n  imageMimeTypes,\n];\n\nexport const codeTypeMapping: { [key: string]: string } = {\n  c: 'text/x-c',\n  cs: 'text/x-csharp',\n  cpp: 'text/x-c++',\n  h: 'text/x-h',\n  md: 'text/markdown',\n  php: 'text/x-php',\n  py: 'text/x-python',\n  rb: 'text/x-ruby',\n  tex: 'text/x-tex',\n  js: 'text/javascript',\n  sh: 'application/x-sh',\n  ts: 'application/typescript',\n  tar: 'application/x-tar',\n  zip: 'application/zip',\n  yml: 'application/x-yaml',\n  yaml: 'application/x-yaml',\n  log: 'text/plain',\n  tsv: 'text/tab-separated-values',\n};\n\nexport const retrievalMimeTypes = [\n  /^(text\\/(x-c|x-c\\+\\+|x-h|html|x-java|markdown|x-php|x-python|x-script\\.python|x-ruby|x-tex|plain|vtt|xml))$/,\n  /^(application\\/(json|pdf|vnd\\.openxmlformats-officedocument\\.(wordprocessingml\\.document|presentationml\\.presentation)))$/,\n];\n\nexport const megabyte = 1024 * 1024;\n/** Helper function to get megabytes value */\nexport const mbToBytes = (mb: number): number => mb * megabyte;\n\nconst defaultSizeLimit = mbToBytes(512);\nconst assistantsFileConfig = {\n  fileLimit: 10,\n  fileSizeLimit: defaultSizeLimit,\n  totalSizeLimit: defaultSizeLimit,\n  supportedMimeTypes,\n  disabled: false,\n};\n\nexport const fileConfig = {\n  endpoints: {\n    [EModelEndpoint.assistants]: assistantsFileConfig,\n    [EModelEndpoint.azureAssistants]: assistantsFileConfig,\n    [EModelEndpoint.agents]: assistantsFileConfig,\n    default: {\n      fileLimit: 10,\n      fileSizeLimit: defaultSizeLimit,\n      totalSizeLimit: defaultSizeLimit,\n      supportedMimeTypes,\n      disabled: false,\n    },\n  },\n  serverFileSizeLimit: defaultSizeLimit,\n  avatarSizeLimit: mbToBytes(2),\n  clientImageResize: {\n    enabled: false,\n    maxWidth: 1900,\n    maxHeight: 1900,\n    quality: 0.92,\n  },\n  checkType: function (fileType: string, supportedTypes: RegExp[] = supportedMimeTypes) {\n    return supportedTypes.some((regex) => regex.test(fileType));\n  },\n};\n\nconst supportedMimeTypesSchema = z\n  .array(z.any())\n  .optional()\n  .refine(\n    (mimeTypes) => {\n      if (!mimeTypes) {\n        return true;\n      }\n      return mimeTypes.every(\n        (mimeType) => mimeType instanceof RegExp || typeof mimeType === 'string',\n      );\n    },\n    {\n      message: 'Each mimeType must be a string or a RegExp object.',\n    },\n  );\n\nexport const endpointFileConfigSchema = z.object({\n  disabled: z.boolean().optional(),\n  fileLimit: z.number().min(0).optional(),\n  fileSizeLimit: z.number().min(0).optional(),\n  totalSizeLimit: z.number().min(0).optional(),\n  supportedMimeTypes: supportedMimeTypesSchema.optional(),\n});\n\nexport const fileConfigSchema = z.object({\n  endpoints: z.record(endpointFileConfigSchema).optional(),\n  serverFileSizeLimit: z.number().min(0).optional(),\n  avatarSizeLimit: z.number().min(0).optional(),\n  imageGeneration: z\n    .object({\n      percentage: z.number().min(0).max(100).optional(),\n      px: z.number().min(0).optional(),\n    })\n    .optional(),\n  clientImageResize: z\n    .object({\n      enabled: z.boolean().optional(),\n      maxWidth: z.number().min(0).optional(),\n      maxHeight: z.number().min(0).optional(),\n      quality: z.number().min(0).max(1).optional(),\n    })\n    .optional(),\n});\n\n/** Helper function to safely convert string patterns to RegExp objects */\nexport const convertStringsToRegex = (patterns: string[]): RegExp[] =>\n  patterns.reduce((acc: RegExp[], pattern) => {\n    try {\n      const regex = new RegExp(pattern);\n      acc.push(regex);\n    } catch (error) {\n      console.error(`Invalid regex pattern \"${pattern}\" skipped.`, error);\n    }\n    return acc;\n  }, []);\n\nexport function mergeFileConfig(dynamic: z.infer<typeof fileConfigSchema> | undefined): FileConfig {\n  const mergedConfig = fileConfig as FileConfig;\n  if (!dynamic) {\n    return mergedConfig;\n  }\n\n  if (dynamic.serverFileSizeLimit !== undefined) {\n    mergedConfig.serverFileSizeLimit = mbToBytes(dynamic.serverFileSizeLimit);\n  }\n\n  if (dynamic.avatarSizeLimit !== undefined) {\n    mergedConfig.avatarSizeLimit = mbToBytes(dynamic.avatarSizeLimit);\n  }\n\n  // Merge clientImageResize configuration\n  if (dynamic.clientImageResize !== undefined) {\n    mergedConfig.clientImageResize = {\n      ...mergedConfig.clientImageResize,\n      ...dynamic.clientImageResize,\n    };\n  }\n\n  if (!dynamic.endpoints) {\n    return mergedConfig;\n  }\n\n  for (const key in dynamic.endpoints) {\n    const dynamicEndpoint = (dynamic.endpoints as Record<string, EndpointFileConfig>)[key];\n\n    if (!mergedConfig.endpoints[key]) {\n      mergedConfig.endpoints[key] = {};\n    }\n\n    const mergedEndpoint = mergedConfig.endpoints[key];\n\n    if (dynamicEndpoint.disabled === true) {\n      mergedEndpoint.disabled = true;\n      mergedEndpoint.fileLimit = 0;\n      mergedEndpoint.fileSizeLimit = 0;\n      mergedEndpoint.totalSizeLimit = 0;\n      mergedEndpoint.supportedMimeTypes = [];\n      continue;\n    }\n\n    if (dynamicEndpoint.fileSizeLimit !== undefined) {\n      mergedEndpoint.fileSizeLimit = mbToBytes(dynamicEndpoint.fileSizeLimit);\n    }\n\n    if (dynamicEndpoint.totalSizeLimit !== undefined) {\n      mergedEndpoint.totalSizeLimit = mbToBytes(dynamicEndpoint.totalSizeLimit);\n    }\n\n    const configKeys = ['fileLimit'] as const;\n    configKeys.forEach((field) => {\n      if (dynamicEndpoint[field] !== undefined) {\n        mergedEndpoint[field] = dynamicEndpoint[field];\n      }\n    });\n\n    if (dynamicEndpoint.supportedMimeTypes) {\n      mergedEndpoint.supportedMimeTypes = convertStringsToRegex(\n        dynamicEndpoint.supportedMimeTypes as unknown as string[],\n      );\n    }\n  }\n\n  return mergedConfig;\n}\n","/* eslint-disable @typescript-eslint/no-namespace */\nimport { StepTypes, ContentTypes, ToolCallTypes } from './runs';\nimport type { TAttachment, TPlugin } from 'src/schemas';\nimport type { FunctionToolCall } from './assistants';\n\nexport namespace Agents {\n  export type MessageType = 'human' | 'ai' | 'generic' | 'system' | 'function' | 'tool' | 'remove';\n\n  export type ImageDetail = 'auto' | 'low' | 'high';\n\n  export type ReasoningContentText = {\n    type: ContentTypes.THINK;\n    think: string;\n  };\n\n  export type MessageContentText = {\n    type: ContentTypes.TEXT;\n    text: string;\n    tool_call_ids?: string[];\n  };\n\n  export type AgentUpdate = {\n    type: ContentTypes.AGENT_UPDATE;\n    agent_update: {\n      index: number;\n      runId: string;\n      agentId: string;\n    };\n  };\n\n  export type MessageContentImageUrl = {\n    type: ContentTypes.IMAGE_URL;\n    image_url: string | { url: string; detail?: ImageDetail };\n  };\n\n  export type MessageContentComplex =\n    | ReasoningContentText\n    | AgentUpdate\n    | MessageContentText\n    | MessageContentImageUrl\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    | (Record<string, any> & { type?: ContentTypes | string })\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    | (Record<string, any> & { type?: never });\n\n  export type MessageContent = string | MessageContentComplex[];\n\n  /**\n   * A call to a tool.\n   */\n  export type ToolCall = {\n    /** Type (\"tool_call\") according to Assistants Tool Call Structure */\n    type: ToolCallTypes.TOOL_CALL;\n    /** The name of the tool to be called */\n    name: string;\n\n    /** The arguments to the tool call */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    args?: string | Record<string, any>;\n\n    /** If provided, an identifier associated with the tool call */\n    id?: string;\n    /** If provided, the output of the tool call */\n    output?: string;\n    /** Auth URL */\n    auth?: string;\n    /** Expiration time */\n    expires_at?: number;\n  };\n\n  export type ToolEndEvent = {\n    /** The Step Id of the Tool Call */\n    id: string;\n    /** The Completed Tool Call */\n    tool_call?: ToolCall;\n    /** The content index of the tool call */\n    index: number;\n  };\n\n  export type ToolCallContent = {\n    type: ContentTypes.TOOL_CALL;\n    tool_call?: ToolCall;\n  };\n\n  /**\n   * A chunk of a tool call (e.g., as part of a stream).\n   * When merging ToolCallChunks (e.g., via AIMessageChunk.__add__),\n   * all string attributes are concatenated. Chunks are only merged if their\n   * values of `index` are equal and not None.\n   *\n   * @example\n   * ```ts\n   * const leftChunks = [\n   *   {\n   *     name: \"foo\",\n   *     args: '{\"a\":',\n   *     index: 0\n   *   }\n   * ];\n   *\n   * const leftAIMessageChunk = new AIMessageChunk({\n   *   content: \"\",\n   *   tool_call_chunks: leftChunks\n   * });\n   *\n   * const rightChunks = [\n   *   {\n   *     name: undefined,\n   *     args: '1}',\n   *     index: 0\n   *   }\n   * ];\n   *\n   * const rightAIMessageChunk = new AIMessageChunk({\n   *   content: \"\",\n   *   tool_call_chunks: rightChunks\n   * });\n   *\n   * const result = leftAIMessageChunk.concat(rightAIMessageChunk);\n   * // result.tool_call_chunks is equal to:\n   * // [\n   * //   {\n   * //     name: \"foo\",\n   * //     args: '{\"a\":1}'\n   * //     index: 0\n   * //   }\n   * // ]\n   * ```\n   *\n   * @property {string} [name] - If provided, a substring of the name of the tool to be called\n   * @property {string} [args] - If provided, a JSON substring of the arguments to the tool call\n   * @property {string} [id] - If provided, a substring of an identifier for the tool call\n   * @property {number} [index] - If provided, the index of the tool call in a sequence\n   */\n  export type ToolCallChunk = {\n    name?: string;\n\n    args?: string;\n\n    id?: string;\n\n    index?: number;\n\n    type?: 'tool_call_chunk';\n  };\n\n  /** Event names are of the format: on_[runnable_type]_(start|stream|end).\n\n  Runnable types are one of:\n\n  llm - used by non chat models\n  chat_model - used by chat models\n  prompt -- e.g., ChatPromptTemplate\n  tool -- LangChain tools\n  chain - most Runnables are of this type\n  Further, the events are categorized as one of:\n\n  start - when the runnable starts\n  stream - when the runnable is streaming\n  end - when the runnable ends\n  start, stream and end are associated with slightly different data payload.\n\n  Please see the documentation for EventData for more details. */\n  export type EventName = string;\n  export type RunStep = {\n    type: StepTypes;\n    id: string; // #new\n    runId?: string; // #new\n    index: number; // #new\n    stepIndex?: number; // #new\n    stepDetails: StepDetails;\n    usage: null | object;\n  };\n  /**\n   * Represents a run step delta i.e. any changed fields on a run step during\n   * streaming.\n   */\n  export interface RunStepDeltaEvent {\n    /**\n     * The identifier of the run step, which can be referenced in API endpoints.\n     */\n    id: string;\n    /**\n     * The delta containing the fields that have changed on the run step.\n     */\n    delta: ToolCallDelta;\n  }\n  export type StepDetails = MessageCreationDetails | ToolCallsDetails;\n  export type MessageCreationDetails = {\n    type: StepTypes.MESSAGE_CREATION;\n    message_creation: {\n      message_id: string;\n    };\n  };\n  export type ToolCallsDetails = {\n    type: StepTypes.TOOL_CALLS;\n    tool_calls: AgentToolCall[];\n  };\n  export type ToolCallDelta = {\n    type: StepTypes.TOOL_CALLS | string;\n    tool_calls?: ToolCallChunk[];\n    auth?: string;\n    expires_at?: number;\n  };\n  export type AgentToolCall = FunctionToolCall | ToolCall;\n  export interface ExtendedMessageContent {\n    type?: string;\n    text?: string;\n    input?: string;\n    index?: number;\n    id?: string;\n    name?: string;\n  }\n  /**\n   * Represents a message delta i.e. any changed fields on a message during\n   * streaming.\n   */\n  export interface MessageDeltaEvent {\n    /**\n     * The identifier of the message, which can be referenced in API endpoints.\n     */\n    id: string;\n    /**\n     * The delta containing the fields that have changed on the Message.\n     */\n    delta: MessageDelta;\n  }\n  /**\n   * The delta containing the fields that have changed on the Message.\n   */\n  export interface MessageDelta {\n    /**\n     * The content of the message in array of text and/or images.\n     */\n    content?: Agents.MessageContentComplex[];\n  }\n\n  /**\n   * Represents a reasoning delta i.e. any changed fields on a message during\n   * streaming.\n   */\n  export interface ReasoningDeltaEvent {\n    /**\n     * The identifier of the message, which can be referenced in API endpoints.\n     */\n    id: string;\n\n    /**\n     * The delta containing the fields that have changed.\n     */\n    delta: ReasoningDelta;\n  }\n\n  /**\n   * The reasoning delta containing the fields that have changed on the Message.\n   */\n  export interface ReasoningDelta {\n    /**\n     * The content of the message in array of text and/or images.\n     */\n    content?: MessageContentComplex[];\n  }\n\n  export type ReasoningDeltaUpdate = { type: ContentTypes.THINK; think: string };\n  export type ContentType =\n    | ContentTypes.THINK\n    | ContentTypes.TEXT\n    | ContentTypes.IMAGE_URL\n    | string;\n}\n\nexport type ToolCallResult = {\n  user: string;\n  toolId: string;\n  result?: unknown;\n  messageId: string;\n  partIndex?: number;\n  blockIndex?: number;\n  conversationId: string;\n  attachments?: TAttachment[];\n};\n\nexport enum AuthTypeEnum {\n  ServiceHttp = 'service_http',\n  OAuth = 'oauth',\n  None = 'none',\n}\n\nexport enum AuthorizationTypeEnum {\n  Bearer = 'bearer',\n  Basic = 'basic',\n  Custom = 'custom',\n}\n\nexport enum TokenExchangeMethodEnum {\n  DefaultPost = 'default_post',\n  BasicAuthHeader = 'basic_auth_header',\n}\n\nexport type Action = {\n  action_id: string;\n  type?: string;\n  settings?: Record<string, unknown>;\n  metadata: ActionMetadata;\n  version: number | string;\n} & ({ assistant_id: string; agent_id?: never } | { assistant_id?: never; agent_id: string });\n\nexport type ActionMetadata = {\n  api_key?: string;\n  auth?: ActionAuth;\n  domain?: string;\n  privacy_policy_url?: string;\n  raw_spec?: string;\n  oauth_client_id?: string;\n  oauth_client_secret?: string;\n};\n\nexport type ActionAuth = {\n  authorization_type?: AuthorizationTypeEnum;\n  custom_auth_header?: string;\n  type?: AuthTypeEnum;\n  authorization_content_type?: string;\n  authorization_url?: string;\n  client_url?: string;\n  scope?: string;\n  token_exchange_method?: TokenExchangeMethodEnum;\n};\n\nexport type ActionMetadataRuntime = ActionMetadata & {\n  oauth_access_token?: string;\n  oauth_refresh_token?: string;\n  oauth_token_expires_at?: Date;\n};\n\nexport type MCP = {\n  mcp_id: string;\n  metadata: MCPMetadata;\n} & ({ assistant_id: string; agent_id?: never } | { assistant_id?: never; agent_id: string });\n\nexport type MCPMetadata = Omit<ActionMetadata, 'auth'> & {\n  name?: string;\n  description?: string;\n  url?: string;\n  tools?: string[];\n  auth?: MCPAuth;\n  icon?: string;\n  trust?: boolean;\n};\n\nexport type MCPAuth = ActionAuth;\n\nexport type AgentToolType = {\n  tool_id: string;\n  metadata: ToolMetadata;\n} & ({ assistant_id: string; agent_id?: never } | { assistant_id?: never; agent_id: string });\n\nexport type ToolMetadata = TPlugin;\n","import { z } from 'zod';\nimport { TokenExchangeMethodEnum } from './types/agents';\nimport { extractEnvVariable } from './utils';\n\nconst BaseOptionsSchema = z.object({\n  iconPath: z.string().optional(),\n  timeout: z.number().optional(),\n  initTimeout: z.number().optional(),\n  /** Controls visibility in chat dropdown menu (MCPSelect) */\n  chatMenu: z.boolean().optional(),\n  /**\n   * Controls server instruction behavior:\n   * - undefined/not set: No instructions included (default)\n   * - true: Use server-provided instructions\n   * - string: Use custom instructions (overrides server-provided)\n   */\n  serverInstructions: z.union([z.boolean(), z.string()]).optional(),\n  /**\n   * OAuth configuration for SSE and Streamable HTTP transports\n   * - Optional: OAuth can be auto-discovered on 401 responses\n   * - Pre-configured values will skip discovery steps\n   */\n  oauth: z\n    .object({\n      /** OAuth authorization endpoint (optional - can be auto-discovered) */\n      authorization_url: z.string().url().optional(),\n      /** OAuth token endpoint (optional - can be auto-discovered) */\n      token_url: z.string().url().optional(),\n      /** OAuth client ID (optional - can use dynamic registration) */\n      client_id: z.string().optional(),\n      /** OAuth client secret (optional - can use dynamic registration) */\n      client_secret: z.string().optional(),\n      /** OAuth scopes to request */\n      scope: z.string().optional(),\n      /** OAuth redirect URI (defaults to /api/mcp/{serverName}/oauth/callback) */\n      redirect_uri: z.string().url().optional(),\n      /** Token exchange method */\n      token_exchange_method: z.nativeEnum(TokenExchangeMethodEnum).optional(),\n    })\n    .optional(),\n  customUserVars: z\n    .record(\n      z.string(),\n      z.object({\n        title: z.string(),\n        description: z.string(),\n      }),\n    )\n    .optional(),\n});\n\nexport const StdioOptionsSchema = BaseOptionsSchema.extend({\n  type: z.literal('stdio').optional(),\n  /**\n   * The executable to run to start the server.\n   */\n  command: z.string(),\n  /**\n   * Command line arguments to pass to the executable.\n   */\n  args: z.array(z.string()),\n  /**\n   * The environment to use when spawning the process.\n   *\n   * If not specified, the result of getDefaultEnvironment() will be used.\n   * Environment variables can be referenced using ${VAR_NAME} syntax.\n   */\n  env: z\n    .record(z.string(), z.string())\n    .optional()\n    .transform((env) => {\n      if (!env) {\n        return env;\n      }\n\n      const processedEnv: Record<string, string> = {};\n      for (const [key, value] of Object.entries(env)) {\n        processedEnv[key] = extractEnvVariable(value);\n      }\n      return processedEnv;\n    }),\n  /**\n   * How to handle stderr of the child process. This matches the semantics of Node's `child_process.spawn`.\n   *\n   * @type {import('node:child_process').IOType | import('node:stream').Stream | number}\n   *\n   * The default is \"inherit\", meaning messages to stderr will be printed to the parent process's stderr.\n   */\n  stderr: z.any().optional(),\n});\n\nexport const WebSocketOptionsSchema = BaseOptionsSchema.extend({\n  type: z.literal('websocket').optional(),\n  url: z\n    .string()\n    .transform((val: string) => extractEnvVariable(val))\n    .pipe(z.string().url())\n    .refine(\n      (val: string) => {\n        const protocol = new URL(val).protocol;\n        return protocol === 'ws:' || protocol === 'wss:';\n      },\n      {\n        message: 'WebSocket URL must start with ws:// or wss://',\n      },\n    ),\n});\n\nexport const SSEOptionsSchema = BaseOptionsSchema.extend({\n  type: z.literal('sse').optional(),\n  headers: z.record(z.string(), z.string()).optional(),\n  url: z\n    .string()\n    .transform((val: string) => extractEnvVariable(val))\n    .pipe(z.string().url())\n    .refine(\n      (val: string) => {\n        const protocol = new URL(val).protocol;\n        return protocol !== 'ws:' && protocol !== 'wss:';\n      },\n      {\n        message: 'SSE URL must not start with ws:// or wss://',\n      },\n    ),\n});\n\nexport const StreamableHTTPOptionsSchema = BaseOptionsSchema.extend({\n  type: z.literal('streamable-http'),\n  headers: z.record(z.string(), z.string()).optional(),\n  url: z\n    .string()\n    .transform((val: string) => extractEnvVariable(val))\n    .pipe(z.string().url())\n    .refine(\n      (val: string) => {\n        const protocol = new URL(val).protocol;\n        return protocol !== 'ws:' && protocol !== 'wss:';\n      },\n      {\n        message: 'Streamable HTTP URL must not start with ws:// or wss://',\n      },\n    ),\n});\n\nexport const MCPOptionsSchema = z.union([\n  StdioOptionsSchema,\n  WebSocketOptionsSchema,\n  SSEOptionsSchema,\n  StreamableHTTPOptionsSchema,\n]);\n\nexport const MCPServersSchema = z.record(z.string(), MCPOptionsSchema);\n\nexport type MCPOptions = z.infer<typeof MCPOptionsSchema>;\n","import { z } from 'zod';\nimport type { ZodError } from 'zod';\nimport type { TModelsConfig } from './types';\nimport { EModelEndpoint, eModelEndpointSchema } from './schemas';\nimport { specsConfigSchema, TSpecsConfig } from './models';\nimport { fileConfigSchema } from './file-config';\nimport { FileSources } from './types/files';\nimport { MCPServersSchema } from './mcp';\n\nexport const defaultSocialLogins = ['google', 'facebook', 'openid', 'github', 'discord', 'saml'];\n\nexport const defaultRetrievalModels = [\n  'gpt-4o',\n  'o1-preview-2024-09-12',\n  'o1-preview',\n  'o1-mini-2024-09-12',\n  'o1-mini',\n  'o3-mini',\n  'chatgpt-4o-latest',\n  'gpt-4o-2024-05-13',\n  'gpt-4o-2024-08-06',\n  'gpt-4o-mini',\n  'gpt-4o-mini-2024-07-18',\n  'gpt-4-turbo-preview',\n  'gpt-3.5-turbo-0125',\n  'gpt-4-0125-preview',\n  'gpt-4-1106-preview',\n  'gpt-3.5-turbo-1106',\n  'gpt-3.5-turbo-0125',\n  'gpt-4-turbo',\n  'gpt-4-0125',\n  'gpt-4-1106',\n];\n\nexport const excludedKeys = new Set([\n  'conversationId',\n  'title',\n  'iconURL',\n  'greeting',\n  'endpoint',\n  'endpointType',\n  'createdAt',\n  'updatedAt',\n  'expiredAt',\n  'messages',\n  'isArchived',\n  'tags',\n  'user',\n  '__v',\n  '_id',\n  'tools',\n  'model',\n  'files',\n  'spec',\n  'disableParams',\n]);\n\nexport enum SettingsViews {\n  default = 'default',\n  advanced = 'advanced',\n}\n\nexport const fileSourceSchema = z.nativeEnum(FileSources);\n\n// Helper type to extract the shape of the Zod object schema\ntype SchemaShape<T> = T extends z.ZodObject<infer U> ? U : never;\n\n// Helper type to determine the default value or undefined based on whether the field has a default\ntype DefaultValue<T> =\n  T extends z.ZodDefault<z.ZodTypeAny> ? ReturnType<T['_def']['defaultValue']> : undefined;\n\n// Extract default values or undefined from the schema shape\ntype ExtractDefaults<T> = {\n  [P in keyof T]: DefaultValue<T[P]>;\n};\n\nexport type SchemaDefaults<T> = ExtractDefaults<SchemaShape<T>>;\n\nexport type TConfigDefaults = SchemaDefaults<typeof configSchema>;\n\nexport function getSchemaDefaults<Schema extends z.AnyZodObject>(\n  schema: Schema,\n): ExtractDefaults<SchemaShape<Schema>> {\n  const shape = schema.shape;\n  const entries = Object.entries(shape).map(([key, value]) => {\n    if (value instanceof z.ZodDefault) {\n      // Extract default value if it exists\n      return [key, value._def.defaultValue()];\n    }\n    return [key, undefined];\n  });\n\n  // Create the object with the right types\n  return Object.fromEntries(entries) as ExtractDefaults<SchemaShape<Schema>>;\n}\n\nexport const modelConfigSchema = z\n  .object({\n    deploymentName: z.string().optional(),\n    version: z.string().optional(),\n    assistants: z.boolean().optional(),\n  })\n  .or(z.boolean());\n\nexport type TAzureModelConfig = z.infer<typeof modelConfigSchema>;\n\nexport const azureBaseSchema = z.object({\n  apiKey: z.string(),\n  serverless: z.boolean().optional(),\n  instanceName: z.string().optional(),\n  deploymentName: z.string().optional(),\n  assistants: z.boolean().optional(),\n  addParams: z.record(z.any()).optional(),\n  dropParams: z.array(z.string()).optional(),\n  forcePrompt: z.boolean().optional(),\n  version: z.string().optional(),\n  baseURL: z.string().optional(),\n  additionalHeaders: z.record(z.any()).optional(),\n});\n\nexport type TAzureBaseSchema = z.infer<typeof azureBaseSchema>;\n\nexport const azureGroupSchema = z\n  .object({\n    group: z.string(),\n    models: z.record(z.string(), modelConfigSchema),\n  })\n  .required()\n  .and(azureBaseSchema);\n\nexport const azureGroupConfigsSchema = z.array(azureGroupSchema).min(1);\nexport type TAzureGroup = z.infer<typeof azureGroupSchema>;\nexport type TAzureGroups = z.infer<typeof azureGroupConfigsSchema>;\nexport type TAzureModelMapSchema = {\n  // deploymentName?: string;\n  // version?: string;\n  group: string;\n};\n\nexport type TAzureModelGroupMap = Record<string, TAzureModelMapSchema | undefined>;\nexport type TAzureGroupMap = Record<\n  string,\n  (TAzureBaseSchema & { models: Record<string, TAzureModelConfig | undefined> }) | undefined\n>;\n\nexport type TValidatedAzureConfig = {\n  modelNames: string[];\n  modelGroupMap: TAzureModelGroupMap;\n  groupMap: TAzureGroupMap;\n};\n\nexport type TAzureConfigValidationResult = TValidatedAzureConfig & {\n  isValid: boolean;\n  errors: (ZodError | string)[];\n};\n\nexport enum Capabilities {\n  code_interpreter = 'code_interpreter',\n  image_vision = 'image_vision',\n  retrieval = 'retrieval',\n  actions = 'actions',\n  tools = 'tools',\n}\n\nexport enum AgentCapabilities {\n  hide_sequential_outputs = 'hide_sequential_outputs',\n  end_after_tools = 'end_after_tools',\n  execute_code = 'execute_code',\n  file_search = 'file_search',\n  web_search = 'web_search',\n  artifacts = 'artifacts',\n  actions = 'actions',\n  tools = 'tools',\n  chain = 'chain',\n  ocr = 'ocr',\n}\n\nexport const defaultAssistantsVersion = {\n  [EModelEndpoint.assistants]: 2,\n  [EModelEndpoint.azureAssistants]: 1,\n};\n\nexport const baseEndpointSchema = z.object({\n  streamRate: z.number().optional(),\n  baseURL: z.string().optional(),\n  titlePrompt: z.string().optional(),\n  titleModel: z.string().optional(),\n});\n\nexport type TBaseEndpoint = z.infer<typeof baseEndpointSchema>;\n\nexport const bedrockEndpointSchema = baseEndpointSchema.merge(\n  z.object({\n    availableRegions: z.array(z.string()).optional(),\n  }),\n);\n\nexport const assistantEndpointSchema = baseEndpointSchema.merge(\n  z.object({\n    /* assistants specific */\n    disableBuilder: z.boolean().optional(),\n    pollIntervalMs: z.number().optional(),\n    timeoutMs: z.number().optional(),\n    version: z.union([z.string(), z.number()]).default(2),\n    supportedIds: z.array(z.string()).min(1).optional(),\n    excludedIds: z.array(z.string()).min(1).optional(),\n    privateAssistants: z.boolean().optional(),\n    retrievalModels: z.array(z.string()).min(1).optional().default(defaultRetrievalModels),\n    capabilities: z\n      .array(z.nativeEnum(Capabilities))\n      .optional()\n      .default([\n        Capabilities.code_interpreter,\n        Capabilities.image_vision,\n        Capabilities.retrieval,\n        Capabilities.actions,\n        Capabilities.tools,\n      ]),\n    /* general */\n    apiKey: z.string().optional(),\n    models: z\n      .object({\n        default: z.array(z.string()).min(1),\n        fetch: z.boolean().optional(),\n        userIdQuery: z.boolean().optional(),\n      })\n      .optional(),\n    titleConvo: z.boolean().optional(),\n    titleMethod: z.union([z.literal('completion'), z.literal('functions')]).optional(),\n    headers: z.record(z.any()).optional(),\n  }),\n);\n\nexport type TAssistantEndpoint = z.infer<typeof assistantEndpointSchema>;\n\nexport const defaultAgentCapabilities = [\n  AgentCapabilities.execute_code,\n  AgentCapabilities.file_search,\n  AgentCapabilities.web_search,\n  AgentCapabilities.artifacts,\n  AgentCapabilities.actions,\n  AgentCapabilities.tools,\n  AgentCapabilities.chain,\n  AgentCapabilities.ocr,\n];\n\nexport const agentsEndpointSchema = baseEndpointSchema\n  .merge(\n    z.object({\n      /* agents specific */\n      recursionLimit: z.number().optional(),\n      disableBuilder: z.boolean().optional().default(false),\n      maxRecursionLimit: z.number().optional(),\n      allowedProviders: z.array(z.union([z.string(), eModelEndpointSchema])).optional(),\n      capabilities: z\n        .array(z.nativeEnum(AgentCapabilities))\n        .optional()\n        .default(defaultAgentCapabilities),\n    }),\n  )\n  .default({\n    disableBuilder: false,\n    capabilities: defaultAgentCapabilities,\n  });\n\nexport type TAgentsEndpoint = z.infer<typeof agentsEndpointSchema>;\n\nexport const endpointSchema = baseEndpointSchema.merge(\n  z.object({\n    name: z.string().refine((value) => !eModelEndpointSchema.safeParse(value).success, {\n      message: `Value cannot be one of the default endpoint (EModelEndpoint) values: ${Object.values(\n        EModelEndpoint,\n      ).join(', ')}`,\n    }),\n    apiKey: z.string(),\n    baseURL: z.string(),\n    models: z.object({\n      default: z.array(z.string()).min(1),\n      fetch: z.boolean().optional(),\n      userIdQuery: z.boolean().optional(),\n    }),\n    titleConvo: z.boolean().optional(),\n    titleMethod: z.union([z.literal('completion'), z.literal('functions')]).optional(),\n    summarize: z.boolean().optional(),\n    summaryModel: z.string().optional(),\n    forcePrompt: z.boolean().optional(),\n    modelDisplayLabel: z.string().optional(),\n    headers: z.record(z.any()).optional(),\n    addParams: z.record(z.any()).optional(),\n    dropParams: z.array(z.string()).optional(),\n    customParams: z\n      .object({\n        defaultParamsEndpoint: z.string().default('custom'),\n        paramDefinitions: z.array(z.record(z.any())).optional(),\n      })\n      .strict(),\n    customOrder: z.number().optional(),\n    directEndpoint: z.boolean().optional(),\n    titleMessageRole: z.string().optional(),\n  }),\n);\n\nexport type TEndpoint = z.infer<typeof endpointSchema>;\n\nexport const azureEndpointSchema = z\n  .object({\n    groups: azureGroupConfigsSchema,\n    plugins: z.boolean().optional(),\n    assistants: z.boolean().optional(),\n  })\n  .and(\n    endpointSchema\n      .pick({\n        streamRate: true,\n        titleConvo: true,\n        titleMethod: true,\n        titleModel: true,\n        summarize: true,\n        summaryModel: true,\n        customOrder: true,\n      })\n      .partial(),\n  );\n\nexport type TAzureConfig = Omit<z.infer<typeof azureEndpointSchema>, 'groups'> &\n  TAzureConfigValidationResult;\n\nconst ttsOpenaiSchema = z.object({\n  url: z.string().optional(),\n  apiKey: z.string(),\n  model: z.string(),\n  voices: z.array(z.string()),\n});\n\nconst ttsAzureOpenAISchema = z.object({\n  instanceName: z.string(),\n  apiKey: z.string(),\n  deploymentName: z.string(),\n  apiVersion: z.string(),\n  model: z.string(),\n  voices: z.array(z.string()),\n});\n\nconst ttsElevenLabsSchema = z.object({\n  url: z.string().optional(),\n  websocketUrl: z.string().optional(),\n  apiKey: z.string(),\n  model: z.string(),\n  voices: z.array(z.string()),\n  voice_settings: z\n    .object({\n      similarity_boost: z.number().optional(),\n      stability: z.number().optional(),\n      style: z.number().optional(),\n      use_speaker_boost: z.boolean().optional(),\n    })\n    .optional(),\n  pronunciation_dictionary_locators: z.array(z.string()).optional(),\n});\n\nconst ttsLocalaiSchema = z.object({\n  url: z.string(),\n  apiKey: z.string().optional(),\n  voices: z.array(z.string()),\n  backend: z.string(),\n});\n\nconst ttsSchema = z.object({\n  openai: ttsOpenaiSchema.optional(),\n  azureOpenAI: ttsAzureOpenAISchema.optional(),\n  elevenlabs: ttsElevenLabsSchema.optional(),\n  localai: ttsLocalaiSchema.optional(),\n});\n\nconst sttOpenaiSchema = z.object({\n  url: z.string().optional(),\n  apiKey: z.string(),\n  model: z.string(),\n});\n\nconst sttAzureOpenAISchema = z.object({\n  instanceName: z.string(),\n  apiKey: z.string(),\n  deploymentName: z.string(),\n  apiVersion: z.string(),\n});\n\nconst sttSchema = z.object({\n  openai: sttOpenaiSchema.optional(),\n  azureOpenAI: sttAzureOpenAISchema.optional(),\n});\n\nconst speechTab = z\n  .object({\n    conversationMode: z.boolean().optional(),\n    advancedMode: z.boolean().optional(),\n    speechToText: z\n      .boolean()\n      .optional()\n      .or(\n        z.object({\n          engineSTT: z.string().optional(),\n          languageSTT: z.string().optional(),\n          autoTranscribeAudio: z.boolean().optional(),\n          decibelValue: z.number().optional(),\n          autoSendText: z.number().optional(),\n        }),\n      )\n      .optional(),\n    textToSpeech: z\n      .boolean()\n      .optional()\n      .or(\n        z.object({\n          engineTTS: z.string().optional(),\n          voice: z.string().optional(),\n          languageTTS: z.string().optional(),\n          automaticPlayback: z.boolean().optional(),\n          playbackRate: z.number().optional(),\n          cacheTTS: z.boolean().optional(),\n        }),\n      )\n      .optional(),\n  })\n  .optional();\n\nexport enum RateLimitPrefix {\n  FILE_UPLOAD = 'FILE_UPLOAD',\n  IMPORT = 'IMPORT',\n  TTS = 'TTS',\n  STT = 'STT',\n}\n\nexport const rateLimitSchema = z.object({\n  fileUploads: z\n    .object({\n      ipMax: z.number().optional(),\n      ipWindowInMinutes: z.number().optional(),\n      userMax: z.number().optional(),\n      userWindowInMinutes: z.number().optional(),\n    })\n    .optional(),\n  conversationsImport: z\n    .object({\n      ipMax: z.number().optional(),\n      ipWindowInMinutes: z.number().optional(),\n      userMax: z.number().optional(),\n      userWindowInMinutes: z.number().optional(),\n    })\n    .optional(),\n  tts: z\n    .object({\n      ipMax: z.number().optional(),\n      ipWindowInMinutes: z.number().optional(),\n      userMax: z.number().optional(),\n      userWindowInMinutes: z.number().optional(),\n    })\n    .optional(),\n  stt: z\n    .object({\n      ipMax: z.number().optional(),\n      ipWindowInMinutes: z.number().optional(),\n      userMax: z.number().optional(),\n      userWindowInMinutes: z.number().optional(),\n    })\n    .optional(),\n});\n\nexport enum EImageOutputType {\n  PNG = 'png',\n  WEBP = 'webp',\n  JPEG = 'jpeg',\n}\n\nconst termsOfServiceSchema = z.object({\n  externalUrl: z.string().optional(),\n  openNewTab: z.boolean().optional(),\n  modalAcceptance: z.boolean().optional(),\n  modalTitle: z.string().optional(),\n  modalContent: z.string().or(z.array(z.string())).optional(),\n});\n\nexport type TTermsOfService = z.infer<typeof termsOfServiceSchema>;\n\nconst mcpServersSchema = z.object({\n  placeholder: z.string().optional(),\n});\n\nexport type TMcpServersConfig = z.infer<typeof mcpServersSchema>;\n\nexport const intefaceSchema = z\n  .object({\n    privacyPolicy: z\n      .object({\n        externalUrl: z.string().optional(),\n        openNewTab: z.boolean().optional(),\n      })\n      .optional(),\n    termsOfService: termsOfServiceSchema.optional(),\n    customWelcome: z.string().optional(),\n    mcpServers: mcpServersSchema.optional(),\n    endpointsMenu: z.boolean().optional(),\n    modelSelect: z.boolean().optional(),\n    parameters: z.boolean().optional(),\n    sidePanel: z.boolean().optional(),\n    multiConvo: z.boolean().optional(),\n    bookmarks: z.boolean().optional(),\n    memories: z.boolean().optional(),\n    presets: z.boolean().optional(),\n    prompts: z.boolean().optional(),\n    agents: z.boolean().optional(),\n    temporaryChat: z.boolean().optional(),\n    temporaryChatRetention: z.number().min(1).max(8760).optional(),\n    runCode: z.boolean().optional(),\n    webSearch: z.boolean().optional(),\n  })\n  .default({\n    endpointsMenu: true,\n    modelSelect: true,\n    parameters: true,\n    sidePanel: true,\n    presets: true,\n    multiConvo: true,\n    bookmarks: true,\n    memories: true,\n    prompts: true,\n    agents: true,\n    temporaryChat: true,\n    runCode: true,\n    webSearch: true,\n  });\n\nexport type TInterfaceConfig = z.infer<typeof intefaceSchema>;\nexport type TBalanceConfig = z.infer<typeof balanceSchema>;\n\nexport const turnstileOptionsSchema = z\n  .object({\n    language: z.string().default('auto'),\n    size: z.enum(['normal', 'compact', 'flexible', 'invisible']).default('normal'),\n  })\n  .default({\n    language: 'auto',\n    size: 'normal',\n  });\n\nexport const turnstileSchema = z.object({\n  siteKey: z.string(),\n  options: turnstileOptionsSchema.optional(),\n});\n\nexport type TTurnstileConfig = z.infer<typeof turnstileSchema>;\n\nexport type TStartupConfig = {\n  appTitle: string;\n  socialLogins?: string[];\n  interface?: TInterfaceConfig;\n  turnstile?: TTurnstileConfig;\n  balance?: TBalanceConfig;\n  discordLoginEnabled: boolean;\n  facebookLoginEnabled: boolean;\n  githubLoginEnabled: boolean;\n  googleLoginEnabled: boolean;\n  openidLoginEnabled: boolean;\n  appleLoginEnabled: boolean;\n  samlLoginEnabled: boolean;\n  openidLabel: string;\n  openidImageUrl: string;\n  openidAutoRedirect: boolean;\n  samlLabel: string;\n  samlImageUrl: string;\n  /** LDAP Auth Configuration */\n  ldap?: {\n    /** LDAP enabled */\n    enabled: boolean;\n    /** Whether LDAP uses username vs. email */\n    username?: boolean;\n  };\n  serverDomain: string;\n  emailLoginEnabled: boolean;\n  registrationEnabled: boolean;\n  socialLoginEnabled: boolean;\n  passwordResetEnabled: boolean;\n  emailEnabled: boolean;\n  showBirthdayIcon: boolean;\n  helpAndFaqURL: string;\n  customFooter?: string;\n  modelSpecs?: TSpecsConfig;\n  sharedLinksEnabled: boolean;\n  publicSharedLinksEnabled: boolean;\n  analyticsGtmId?: string;\n  instanceProjectId: string;\n  bundlerURL?: string;\n  staticBundlerURL?: string;\n  webSearch?: {\n    searchProvider?: SearchProviders;\n    scraperType?: ScraperTypes;\n    rerankerType?: RerankerTypes;\n  };\n  mcpServers?: Record<\n    string,\n    {\n      customUserVars: Record<\n        string,\n        {\n          title: string;\n          description: string;\n        }\n      >;\n    }\n  >;\n  mcpPlaceholder?: string;\n};\n\nexport enum OCRStrategy {\n  MISTRAL_OCR = 'mistral_ocr',\n  CUSTOM_OCR = 'custom_ocr',\n  AZURE_MISTRAL_OCR = 'azure_mistral_ocr',\n}\n\nexport enum SearchCategories {\n  PROVIDERS = 'providers',\n  SCRAPERS = 'scrapers',\n  RERANKERS = 'rerankers',\n}\n\nexport enum SearchProviders {\n  SERPER = 'serper',\n  SEARXNG = 'searxng',\n}\n\nexport enum ScraperTypes {\n  FIRECRAWL = 'firecrawl',\n  SERPER = 'serper',\n}\n\nexport enum RerankerTypes {\n  JINA = 'jina',\n  COHERE = 'cohere',\n}\n\nexport enum SafeSearchTypes {\n  OFF = 0,\n  MODERATE = 1,\n  STRICT = 2,\n}\n\nexport const webSearchSchema = z.object({\n  serperApiKey: z.string().optional().default('${SERPER_API_KEY}'),\n  firecrawlApiKey: z.string().optional().default('${FIRECRAWL_API_KEY}'),\n  firecrawlApiUrl: z.string().optional().default('${FIRECRAWL_API_URL}'),\n  jinaApiKey: z.string().optional().default('${JINA_API_KEY}'),\n  cohereApiKey: z.string().optional().default('${COHERE_API_KEY}'),\n  searchProvider: z.nativeEnum(SearchProviders).optional(),\n  scraperType: z.nativeEnum(ScraperTypes).optional(),\n  rerankerType: z.nativeEnum(RerankerTypes).optional(),\n  scraperTimeout: z.number().optional(),\n  safeSearch: z.nativeEnum(SafeSearchTypes).default(SafeSearchTypes.MODERATE),\n});\n\nexport type TWebSearchConfig = z.infer<typeof webSearchSchema>;\n\nexport const ocrSchema = z.object({\n  mistralModel: z.string().optional(),\n  apiKey: z.string().optional().default('${OCR_API_KEY}'),\n  baseURL: z.string().optional().default('${OCR_BASEURL}'),\n  strategy: z.nativeEnum(OCRStrategy).default(OCRStrategy.MISTRAL_OCR),\n});\n\nexport const balanceSchema = z.object({\n  enabled: z.boolean().optional().default(false),\n  startBalance: z.number().optional().default(20000),\n  autoRefillEnabled: z.boolean().optional().default(false),\n  refillIntervalValue: z.number().optional().default(30),\n  refillIntervalUnit: z\n    .enum(['seconds', 'minutes', 'hours', 'days', 'weeks', 'months'])\n    .optional()\n    .default('days'),\n  refillAmount: z.number().optional().default(10000),\n});\n\nexport const memorySchema = z.object({\n  disabled: z.boolean().optional(),\n  validKeys: z.array(z.string()).optional(),\n  tokenLimit: z.number().optional(),\n  personalize: z.boolean().default(true),\n  messageWindowSize: z.number().optional().default(5),\n  agent: z\n    .union([\n      z.object({\n        id: z.string(),\n      }),\n      z.object({\n        provider: z.string(),\n        model: z.string(),\n        instructions: z.string().optional(),\n        model_parameters: z.record(z.any()).optional(),\n      }),\n    ])\n    .optional(),\n});\n\nexport type TMemoryConfig = z.infer<typeof memorySchema>;\n\nexport const configSchema = z.object({\n  version: z.string(),\n  cache: z.boolean().default(true),\n  ocr: ocrSchema.optional(),\n  webSearch: webSearchSchema.optional(),\n  memory: memorySchema.optional(),\n  secureImageLinks: z.boolean().optional(),\n  imageOutputType: z.nativeEnum(EImageOutputType).default(EImageOutputType.PNG),\n  includedTools: z.array(z.string()).optional(),\n  filteredTools: z.array(z.string()).optional(),\n  mcpServers: MCPServersSchema.optional(),\n  interface: intefaceSchema,\n  turnstile: turnstileSchema.optional(),\n  fileStrategy: fileSourceSchema.default(FileSources.local),\n  actions: z\n    .object({\n      allowedDomains: z.array(z.string()).optional(),\n    })\n    .optional(),\n  registration: z\n    .object({\n      socialLogins: z.array(z.string()).optional(),\n      allowedDomains: z.array(z.string()).optional(),\n    })\n    .default({ socialLogins: defaultSocialLogins }),\n  balance: balanceSchema.optional(),\n  speech: z\n    .object({\n      tts: ttsSchema.optional(),\n      stt: sttSchema.optional(),\n      speechTab: speechTab.optional(),\n    })\n    .optional(),\n  rateLimits: rateLimitSchema.optional(),\n  fileConfig: fileConfigSchema.optional(),\n  modelSpecs: specsConfigSchema.optional(),\n  endpoints: z\n    .object({\n      all: baseEndpointSchema.optional(),\n      [EModelEndpoint.openAI]: baseEndpointSchema.optional(),\n      [EModelEndpoint.google]: baseEndpointSchema.optional(),\n      [EModelEndpoint.anthropic]: baseEndpointSchema.optional(),\n      [EModelEndpoint.gptPlugins]: baseEndpointSchema.optional(),\n      [EModelEndpoint.azureOpenAI]: azureEndpointSchema.optional(),\n      [EModelEndpoint.azureAssistants]: assistantEndpointSchema.optional(),\n      [EModelEndpoint.assistants]: assistantEndpointSchema.optional(),\n      [EModelEndpoint.agents]: agentsEndpointSchema.optional(),\n      [EModelEndpoint.custom]: z.array(endpointSchema.partial()).optional(),\n      [EModelEndpoint.bedrock]: baseEndpointSchema.optional(),\n    })\n    .strict()\n    .refine((data) => Object.keys(data).length > 0, {\n      message: 'At least one `endpoints` field must be provided.',\n    })\n    .optional(),\n});\n\nexport const getConfigDefaults = () => getSchemaDefaults(configSchema);\n\nexport type TCustomConfig = z.infer<typeof configSchema>;\n\nexport type TProviderSchema =\n  | z.infer<typeof ttsOpenaiSchema>\n  | z.infer<typeof ttsElevenLabsSchema>\n  | z.infer<typeof ttsLocalaiSchema>\n  | undefined;\n\nexport enum KnownEndpoints {\n  anyscale = 'anyscale',\n  apipie = 'apipie',\n  cohere = 'cohere',\n  fireworks = 'fireworks',\n  deepseek = 'deepseek',\n  groq = 'groq',\n  huggingface = 'huggingface',\n  mistral = 'mistral',\n  mlx = 'mlx',\n  ollama = 'ollama',\n  openrouter = 'openrouter',\n  perplexity = 'perplexity',\n  shuttleai = 'shuttleai',\n  'together.ai' = 'together.ai',\n  unify = 'unify',\n  xai = 'xai',\n}\n\nexport enum FetchTokenConfig {\n  openrouter = KnownEndpoints.openrouter,\n}\n\nexport const defaultEndpoints: EModelEndpoint[] = [\n  EModelEndpoint.openAI,\n  EModelEndpoint.assistants,\n  EModelEndpoint.azureAssistants,\n  EModelEndpoint.azureOpenAI,\n  EModelEndpoint.agents,\n  EModelEndpoint.chatGPTBrowser,\n  EModelEndpoint.gptPlugins,\n  EModelEndpoint.google,\n  EModelEndpoint.anthropic,\n  EModelEndpoint.custom,\n  EModelEndpoint.bedrock,\n];\n\nexport const alternateName = {\n  [EModelEndpoint.openAI]: 'OpenAI',\n  [EModelEndpoint.assistants]: 'Assistants',\n  [EModelEndpoint.agents]: 'Agents',\n  [EModelEndpoint.azureAssistants]: 'Azure Assistants',\n  [EModelEndpoint.azureOpenAI]: 'Azure OpenAI',\n  [EModelEndpoint.chatGPTBrowser]: 'ChatGPT',\n  [EModelEndpoint.gptPlugins]: 'Plugins',\n  [EModelEndpoint.google]: 'Google',\n  [EModelEndpoint.anthropic]: 'Anthropic',\n  [EModelEndpoint.custom]: 'Custom',\n  [EModelEndpoint.bedrock]: 'AWS Bedrock',\n  [KnownEndpoints.ollama]: 'Ollama',\n  [KnownEndpoints.deepseek]: 'DeepSeek',\n  [KnownEndpoints.xai]: 'xAI',\n};\n\nconst sharedOpenAIModels = [\n  'gpt-4o-mini',\n  'gpt-4o',\n  'gpt-4.5-preview',\n  'gpt-4.5-preview-2025-02-27',\n  'gpt-3.5-turbo',\n  'gpt-3.5-turbo-0125',\n  'gpt-4-turbo',\n  'gpt-4-turbo-2024-04-09',\n  'gpt-4-0125-preview',\n  'gpt-4-turbo-preview',\n  'gpt-4-1106-preview',\n  'gpt-3.5-turbo-1106',\n  'gpt-3.5-turbo-16k-0613',\n  'gpt-3.5-turbo-16k',\n  'gpt-4',\n  'gpt-4-0314',\n  'gpt-4-32k-0314',\n  'gpt-4-0613',\n  'gpt-3.5-turbo-0613',\n];\n\nconst sharedAnthropicModels = ['model-1', 'model-2'];\n\nexport const bedrockModels = [\n  'anthropic.claude-3-5-sonnet-20241022-v2:0',\n  'anthropic.claude-3-5-sonnet-20240620-v1:0',\n  'anthropic.claude-3-5-haiku-20241022-v1:0',\n  'anthropic.claude-3-haiku-20240307-v1:0',\n  'anthropic.claude-3-opus-20240229-v1:0',\n  'anthropic.claude-3-sonnet-20240229-v1:0',\n  'anthropic.claude-v2',\n  'anthropic.claude-v2:1',\n  'anthropic.claude-instant-v1',\n  // 'cohere.command-text-v14', // no conversation history\n  // 'cohere.command-light-text-v14', // no conversation history\n  'cohere.command-r-v1:0',\n  'cohere.command-r-plus-v1:0',\n  'meta.llama2-13b-chat-v1',\n  'meta.llama2-70b-chat-v1',\n  'meta.llama3-8b-instruct-v1:0',\n  'meta.llama3-70b-instruct-v1:0',\n  'meta.llama3-1-8b-instruct-v1:0',\n  'meta.llama3-1-70b-instruct-v1:0',\n  'meta.llama3-1-405b-instruct-v1:0',\n  'mistral.mistral-7b-instruct-v0:2',\n  'mistral.mixtral-8x7b-instruct-v0:1',\n  'mistral.mistral-large-2402-v1:0',\n  'mistral.mistral-large-2407-v1:0',\n  'mistral.mistral-small-2402-v1:0',\n  'ai21.jamba-instruct-v1:0',\n  // 'ai21.j2-mid-v1', // no streaming\n  // 'ai21.j2-ultra-v1', no conversation history\n  'amazon.titan-text-lite-v1',\n  'amazon.titan-text-express-v1',\n  'amazon.titan-text-premier-v1:0',\n];\n\nexport const defaultModels = {\n  [EModelEndpoint.azureAssistants]: sharedOpenAIModels,\n  [EModelEndpoint.assistants]: [...sharedOpenAIModels, 'chatgpt-4o-latest'],\n  [EModelEndpoint.agents]: sharedOpenAIModels, // TODO: Add agent models (agentsModels)\n  [EModelEndpoint.google]: [\n    // Gemini 2.0 Models\n    'gemini-2.0-flash-001',\n    'gemini-2.0-flash-exp',\n    'gemini-2.0-flash-lite',\n    'gemini-2.0-pro-exp-02-05',\n    // Gemini 1.5 Models\n    'gemini-1.5-flash-001',\n    'gemini-1.5-flash-002',\n    'gemini-1.5-pro-001',\n    'gemini-1.5-pro-002',\n    // Gemini 1.0 Models\n    'gemini-1.0-pro-001',\n  ],\n  [EModelEndpoint.anthropic]: sharedAnthropicModels,\n  [EModelEndpoint.openAI]: [\n    ...sharedOpenAIModels,\n    'chatgpt-4o-latest',\n    'gpt-4-vision-preview',\n    'gpt-3.5-turbo-instruct-0914',\n    'gpt-3.5-turbo-instruct',\n  ],\n  [EModelEndpoint.bedrock]: bedrockModels,\n};\n\nconst fitlerAssistantModels = (str: string) => {\n  return /gpt-4|gpt-3\\\\.5/i.test(str) && !/vision|instruct/i.test(str);\n};\n\nconst openAIModels = defaultModels[EModelEndpoint.openAI];\n\nexport const initialModelsConfig: TModelsConfig = {\n  initial: [],\n  [EModelEndpoint.openAI]: openAIModels,\n  [EModelEndpoint.assistants]: openAIModels.filter(fitlerAssistantModels),\n  [EModelEndpoint.agents]: openAIModels, // TODO: Add agent models (agentsModels)\n  [EModelEndpoint.gptPlugins]: openAIModels,\n  [EModelEndpoint.azureOpenAI]: openAIModels,\n  [EModelEndpoint.chatGPTBrowser]: ['text-davinci-002-render-sha'],\n  [EModelEndpoint.google]: defaultModels[EModelEndpoint.google],\n  [EModelEndpoint.anthropic]: defaultModels[EModelEndpoint.anthropic],\n  [EModelEndpoint.bedrock]: defaultModels[EModelEndpoint.bedrock],\n};\n\nexport const EndpointURLs: Record<string, string> = {\n  [EModelEndpoint.assistants]: '/api/assistants/v2/chat',\n  [EModelEndpoint.azureAssistants]: '/api/assistants/v1/chat',\n  [EModelEndpoint.agents]: `/api/${EModelEndpoint.agents}/chat`,\n};\n\nexport const modularEndpoints = new Set<EModelEndpoint | string>([\n  EModelEndpoint.gptPlugins,\n  EModelEndpoint.anthropic,\n  EModelEndpoint.google,\n  EModelEndpoint.openAI,\n  EModelEndpoint.azureOpenAI,\n  EModelEndpoint.custom,\n  EModelEndpoint.agents,\n  EModelEndpoint.bedrock,\n]);\n\nexport const supportsBalanceCheck = {\n  [EModelEndpoint.custom]: true,\n  [EModelEndpoint.openAI]: true,\n  [EModelEndpoint.anthropic]: true,\n  [EModelEndpoint.gptPlugins]: true,\n  [EModelEndpoint.assistants]: true,\n  [EModelEndpoint.agents]: true,\n  [EModelEndpoint.azureAssistants]: true,\n  [EModelEndpoint.azureOpenAI]: true,\n  [EModelEndpoint.bedrock]: true,\n};\n\nexport const visionModels = [\n  'qwen-vl',\n  'grok-vision',\n  'grok-2-vision',\n  'grok-3',\n  'gpt-4o-mini',\n  'gpt-4o',\n  'gpt-4-turbo',\n  'gpt-4-vision',\n  'o4-mini',\n  'o3',\n  'o1',\n  'gpt-4.1',\n  'gpt-4.5',\n  'llava',\n  'llava-13b',\n  'gemini-pro-vision',\n  'claude-3',\n  'gemma',\n  'gemini-exp',\n  'gemini-1.5',\n  'gemini-2',\n  'gemini-3',\n  'moondream',\n  'llama3.2-vision',\n  'llama-3.2-11b-vision',\n  'llama-3-2-11b-vision',\n  'llama-3.2-90b-vision',\n  'llama-3-2-90b-vision',\n  'llama-4',\n  'claude-opus-4',\n  'claude-sonnet-4',\n  'claude-haiku-4',\n];\nexport enum VisionModes {\n  generative = 'generative',\n  agents = 'agents',\n}\n\nexport function validateVisionModel({\n  model,\n  additionalModels = [],\n  availableModels,\n}: {\n  model: string;\n  additionalModels?: string[];\n  availableModels?: string[];\n}) {\n  if (!model) {\n    return false;\n  }\n\n  if (model.includes('gpt-4-turbo-preview') || model.includes('o1-mini')) {\n    return false;\n  }\n\n  if (availableModels && !availableModels.includes(model)) {\n    return false;\n  }\n\n  return visionModels.concat(additionalModels).some((visionModel) => model.includes(visionModel));\n}\n\nexport const imageGenTools = new Set(['dalle', 'dall-e', 'stable-diffusion', 'flux']);\n\n/**\n * Enum for collections using infinite queries\n */\nexport enum InfiniteCollections {\n  /**\n   * Collection for Prompt Groups\n   */\n  PROMPT_GROUPS = 'promptGroups',\n  /**\n   * Collection for Shared Links\n   */\n  SHARED_LINKS = 'sharedLinks',\n}\n\n/**\n * Enum for time intervals\n */\nexport enum Time {\n  ONE_HOUR = 3600000,\n  THIRTY_MINUTES = 1800000,\n  TEN_MINUTES = 600000,\n  FIVE_MINUTES = 300000,\n  TWO_MINUTES = 120000,\n  ONE_MINUTE = 60000,\n  THIRTY_SECONDS = 30000,\n}\n\n/**\n * Enum for cache keys.\n */\nexport enum CacheKeys {\n  /**\n   * Key for the config store namespace.\n   */\n  CONFIG_STORE = 'configStore',\n  /**\n   * Key for the config store namespace.\n   */\n  ROLES = 'roles',\n  /**\n   * Key for the plugins cache.\n   */\n  PLUGINS = 'plugins',\n  /**\n   * Key for the title generation cache.\n   */\n  GEN_TITLE = 'genTitle',\n  /**\n  /**\n   * Key for the tools cache.\n   */\n  TOOLS = 'tools',\n  /**\n   * Key for the model config cache.\n   */\n  MODELS_CONFIG = 'modelsConfig',\n  /**\n   * Key for the model queries cache.\n   */\n  MODEL_QUERIES = 'modelQueries',\n  /**\n   * Key for the default startup config cache.\n   */\n  STARTUP_CONFIG = 'startupConfig',\n  /**\n   * Key for the default endpoint config cache.\n   */\n  ENDPOINT_CONFIG = 'endpointsConfig',\n  /**\n   * Key for accessing the model token config cache.\n   */\n  TOKEN_CONFIG = 'tokenConfig',\n  /**\n   * Key for the custom config cache.\n   */\n  CUSTOM_CONFIG = 'customConfig',\n  /**\n   * Key for accessing Abort Keys\n   */\n  ABORT_KEYS = 'abortKeys',\n  /**\n   * Key for the override config cache.\n   */\n  OVERRIDE_CONFIG = 'overrideConfig',\n  /**\n   * Key for the bans cache.\n   */\n  BANS = 'bans',\n  /**\n   * Key for the encoded domains cache.\n   * Used by Azure OpenAI Assistants.\n   */\n  ENCODED_DOMAINS = 'encoded_domains',\n  /**\n   * Key for the cached audio run Ids.\n   */\n  AUDIO_RUNS = 'audioRuns',\n  /**\n   * Key for in-progress messages.\n   */\n  MESSAGES = 'messages',\n  /**\n   * Key for in-progress flow states.\n   */\n  FLOWS = 'flows',\n  /**\n   * Key for individual MCP Tool Manifests.\n   */\n  MCP_TOOLS = 'mcp_tools',\n  /**\n   * Key for pending chat requests (concurrency check)\n   */\n  PENDING_REQ = 'pending_req',\n  /**\n   * Key for s3 check intervals per user\n   */\n  S3_EXPIRY_INTERVAL = 'S3_EXPIRY_INTERVAL',\n  /**\n   * key for open id exchanged tokens\n   */\n  OPENID_EXCHANGED_TOKENS = 'OPENID_EXCHANGED_TOKENS',\n}\n\n/**\n * Enum for violation types, used to identify, log, and cache violations.\n */\nexport enum ViolationTypes {\n  /**\n   * File Upload Violations (exceeding limit).\n   */\n  FILE_UPLOAD_LIMIT = 'file_upload_limit',\n  /**\n   * Illegal Model Request (not available).\n   */\n  ILLEGAL_MODEL_REQUEST = 'illegal_model_request',\n  /**\n   * Token Limit Violation.\n   */\n  TOKEN_BALANCE = 'token_balance',\n  /**\n   * An issued ban.\n   */\n  BAN = 'ban',\n  /**\n   * TTS Request Limit Violation.\n   */\n  TTS_LIMIT = 'tts_limit',\n  /**\n   * STT Request Limit Violation.\n   */\n  STT_LIMIT = 'stt_limit',\n  /**\n   * Reset Password Limit Violation.\n   */\n  RESET_PASSWORD_LIMIT = 'reset_password_limit',\n  /**\n   * Verify Email Limit Violation.\n   */\n  VERIFY_EMAIL_LIMIT = 'verify_email_limit',\n  /**\n   * Verify Conversation Access violation.\n   */\n  CONVO_ACCESS = 'convo_access',\n  /**\n   * Tool Call Limit Violation.\n   */\n  TOOL_CALL_LIMIT = 'tool_call_limit',\n}\n\n/**\n * Enum for error message types that are not \"violations\" as above, used to identify client-facing errors.\n */\nexport enum ErrorTypes {\n  /**\n   * No User-provided Key.\n   */\n  NO_USER_KEY = 'no_user_key',\n  /**\n   * Expired User-provided Key.\n   */\n  EXPIRED_USER_KEY = 'expired_user_key',\n  /**\n   * Invalid User-provided Key.\n   */\n  INVALID_USER_KEY = 'invalid_user_key',\n  /**\n   * No Base URL Provided.\n   */\n  NO_BASE_URL = 'no_base_url',\n  /**\n   * Moderation error\n   */\n  MODERATION = 'moderation',\n  /**\n   * Prompt exceeds max length\n   */\n  INPUT_LENGTH = 'INPUT_LENGTH',\n  /**\n   * Invalid request error, API rejected request\n   */\n  INVALID_REQUEST = 'invalid_request_error',\n  /**\n   * Invalid action request error, likely not on list of allowed domains\n   */\n  INVALID_ACTION = 'invalid_action_error',\n  /**\n   * Invalid request error, API rejected request\n   */\n  NO_SYSTEM_MESSAGES = 'no_system_messages',\n  /**\n   * Google provider returned an error\n   */\n  GOOGLE_ERROR = 'google_error',\n  /**\n   * Invalid Agent Provider (excluded by Admin)\n   */\n  INVALID_AGENT_PROVIDER = 'invalid_agent_provider',\n}\n\n/**\n * Enum for authentication keys.\n */\nexport enum AuthKeys {\n  /**\n   * Key for the Service Account to use Vertex AI.\n   */\n  GOOGLE_SERVICE_KEY = 'GOOGLE_SERVICE_KEY',\n  /**\n   * API key to use Google Generative AI.\n   *\n   * Note: this is not for Environment Variables, but to access encrypted object values.\n   */\n  GOOGLE_API_KEY = 'GOOGLE_API_KEY',\n}\n\n/**\n * Enum for Image Detail Cost.\n *\n * **Low Res Fixed Cost:** `85`\n *\n * **High Res Calculation:**\n *\n * Number of `512px` Tiles * `170` + `85` (Additional Cost)\n */\nexport enum ImageDetailCost {\n  /**\n   * Low resolution is a fixed value.\n   */\n  LOW = 85,\n  /**\n   * High resolution Cost Per Tile\n   */\n  HIGH = 170,\n  /**\n   * Additional Cost added to High Resolution Total Cost\n   */\n  // eslint-disable-next-line @typescript-eslint/no-duplicate-enum-values\n  ADDITIONAL = 85,\n}\n\n/**\n * Tab values for Settings Dialog\n */\nexport enum SettingsTabValues {\n  /**\n   * Tab for General Settings\n   */\n  GENERAL = 'general',\n  /**\n   * Tab for Chat Settings\n   */\n  CHAT = 'chat',\n  /**\n   * Tab for Speech Settings\n   */\n  SPEECH = 'speech',\n  /**\n   * Tab for Beta Features\n   */\n  BETA = 'beta',\n  /**\n   * Tab for Data Controls\n   */\n  DATA = 'data',\n  /**\n   * Tab for Balance Settings\n   */\n  BALANCE = 'balance',\n  /**\n   * Tab for Account Settings\n   */\n  ACCOUNT = 'account',\n  /**\n   * Chat input commands\n   */\n  COMMANDS = 'commands',\n  /**\n   * Tab for Personalization Settings\n   */\n  PERSONALIZATION = 'personalization',\n}\n\nexport enum STTProviders {\n  /**\n   * Provider for OpenAI STT\n   */\n  OPENAI = 'openai',\n  /**\n   * Provider for Microsoft Azure STT\n   */\n  AZURE_OPENAI = 'azureOpenAI',\n}\n\nexport enum TTSProviders {\n  /**\n   * Provider for OpenAI TTS\n   */\n  OPENAI = 'openai',\n  /**\n   * Provider for Microsoft Azure OpenAI TTS\n   */\n  AZURE_OPENAI = 'azureOpenAI',\n  /**\n   * Provider for ElevenLabs TTS\n   */\n  ELEVENLABS = 'elevenlabs',\n  /**\n   * Provider for LocalAI TTS\n   */\n  LOCALAI = 'localai',\n}\n\n/** Enum for app-wide constants */\nexport enum Constants {\n  /** Key for the app's version. */\n  VERSION = 'v0.7.8',\n  /** Key for the Custom Config's version (chat.yaml). */\n  CONFIG_VERSION = '1.2.8',\n  /** Standard value for the first message's `parentMessageId` value, to indicate no parent exists. */\n  NO_PARENT = '00000000-0000-0000-0000-000000000000',\n  /** Standard value for the initial conversationId before a request is sent */\n  NEW_CONVO = 'new',\n  /** Standard value for the temporary conversationId after a request is sent and before the server responds */\n  PENDING_CONVO = 'PENDING',\n  /** Standard value for the conversationId used for search queries */\n  SEARCH = 'search',\n  /** Fixed, encoded domain length for Azure OpenAI Assistants Function name parsing. */\n  ENCODED_DOMAIN_LENGTH = 10,\n  /** Identifier for using current_model in multi-model requests. */\n  CURRENT_MODEL = 'current_model',\n  /** Common divider for text values */\n  COMMON_DIVIDER = '__',\n  /** Max length for commands */\n  COMMANDS_MAX_LENGTH = 56,\n  /** Default Stream Rate (ms) */\n  DEFAULT_STREAM_RATE = 1,\n  /** Saved Tag */\n  SAVED_TAG = 'Saved',\n  /** Max number of Conversation starters for Agents/Assistants */\n  MAX_CONVO_STARTERS = 4,\n  /** Global/instance Project Name */\n  GLOBAL_PROJECT_NAME = 'instance',\n  /** Delimiter for MCP tools */\n  mcp_delimiter = '_mcp_',\n  /** Prefix for MCP plugins */\n  mcp_prefix = 'mcp_',\n  /** Placeholder Agent ID for Ephemeral Agents */\n  EPHEMERAL_AGENT_ID = 'ephemeral',\n}\n\nexport enum LocalStorageKeys {\n  /** Key for the admin defined App Title */\n  APP_TITLE = 'appTitle',\n  /** Key for the last conversation setup. */\n  LAST_CONVO_SETUP = 'lastConversationSetup',\n  /** Key for the last selected model. */\n  LAST_MODEL = 'lastSelectedModel',\n  /** Key for the last selected tools. */\n  LAST_TOOLS = 'lastSelectedTools',\n  /** Key for the last selected spec by name*/\n  LAST_SPEC = 'lastSelectedSpec',\n  /** Key for temporary files to delete */\n  FILES_TO_DELETE = 'filesToDelete',\n  /** Prefix key for the last selected assistant ID by index */\n  ASST_ID_PREFIX = 'assistant_id__',\n  /** Prefix key for the last selected agent ID by index */\n  AGENT_ID_PREFIX = 'agent_id__',\n  /** Key for the last selected fork setting */\n  FORK_SETTING = 'forkSetting',\n  /** Key for remembering the last selected option, instead of manually selecting */\n  REMEMBER_FORK_OPTION = 'rememberDefaultFork',\n  /** Key for remembering the split at target fork option modifier */\n  FORK_SPLIT_AT_TARGET = 'splitAtTarget',\n  /** Key for saving text drafts */\n  TEXT_DRAFT = 'textDraft_',\n  /** Key for saving file drafts */\n  FILES_DRAFT = 'filesDraft_',\n  /** Key for last Selected Prompt Category */\n  LAST_PROMPT_CATEGORY = 'lastPromptCategory',\n  /** Key for rendering User Messages as Markdown */\n  ENABLE_USER_MSG_MARKDOWN = 'enableUserMsgMarkdown',\n  /** Key for displaying analysis tool code input */\n  SHOW_ANALYSIS_CODE = 'showAnalysisCode',\n  /** Last selected MCP values per conversation ID */\n  LAST_MCP_ = 'LAST_MCP_',\n  /** Last checked toggle for Code Interpreter API per conversation ID */\n  LAST_CODE_TOGGLE_ = 'LAST_CODE_TOGGLE_',\n  /** Last checked toggle for Web Search per conversation ID */\n  LAST_WEB_SEARCH_TOGGLE_ = 'LAST_WEB_SEARCH_TOGGLE_',\n  /** Last checked toggle for File Search per conversation ID */\n  LAST_FILE_SEARCH_TOGGLE_ = 'LAST_FILE_SEARCH_TOGGLE_',\n  /** Key for the last selected agent provider */\n  LAST_AGENT_PROVIDER = 'lastAgentProvider',\n  /** Key for the last selected agent model */\n  LAST_AGENT_MODEL = 'lastAgentModel',\n  /** Pin state for MCP tools per conversation ID */\n  PIN_MCP_ = 'PIN_MCP_',\n  /** Pin state for Web Search per conversation ID */\n  PIN_WEB_SEARCH_ = 'PIN_WEB_SEARCH_',\n  /** Pin state for Code Interpreter per conversation ID */\n  PIN_CODE_INTERPRETER_ = 'PIN_CODE_INTERPRETER_',\n}\n\nexport enum ForkOptions {\n  /** Key for direct path option */\n  DIRECT_PATH = 'directPath',\n  /** Key for including branches */\n  INCLUDE_BRANCHES = 'includeBranches',\n  /** Key for target level fork (default) */\n  TARGET_LEVEL = 'targetLevel',\n  /** Default option */\n  DEFAULT = 'default',\n}\n\n/**\n * Enum for Cohere related constants\n */\nexport enum CohereConstants {\n  /**\n   * Cohere API Endpoint, for special handling\n   */\n  API_URL = 'https://api.cohere.ai/v1',\n  /**\n   * Role for \"USER\" messages\n   */\n  ROLE_USER = 'USER',\n  /**\n   * Role for \"SYSTEM\" messages\n   */\n  ROLE_SYSTEM = 'SYSTEM',\n  /**\n   * Role for \"CHATBOT\" messages\n   */\n  ROLE_CHATBOT = 'CHATBOT',\n  /**\n   * Title message as required by Cohere\n   */\n  TITLE_MESSAGE = 'TITLE:',\n}\n\nexport enum SystemCategories {\n  ALL = 'sys__all__sys',\n  MY_PROMPTS = 'sys__my__prompts__sys',\n  NO_CATEGORY = 'sys__no__category__sys',\n  SHARED_PROMPTS = 'sys__shared__prompts__sys',\n}\n\nexport const providerEndpointMap = {\n  [EModelEndpoint.openAI]: EModelEndpoint.openAI,\n  [EModelEndpoint.bedrock]: EModelEndpoint.bedrock,\n  [EModelEndpoint.anthropic]: EModelEndpoint.anthropic,\n  [EModelEndpoint.azureOpenAI]: EModelEndpoint.azureOpenAI,\n};\n\nexport const specialVariables = {\n  current_date: true,\n  current_user: true,\n  iso_datetime: true,\n  current_datetime: true,\n};\n\nexport type TSpecialVarLabel = `com_ui_special_var_${keyof typeof specialVariables}`;\n","export enum ContentTypes {\n  TEXT = 'text',\n  THINK = 'think',\n  TEXT_DELTA = 'text_delta',\n  TOOL_CALL = 'tool_call',\n  IMAGE_FILE = 'image_file',\n  IMAGE_URL = 'image_url',\n  AGENT_UPDATE = 'agent_update',\n  ERROR = 'error',\n}\n\nexport enum StepTypes {\n  TOOL_CALLS = 'tool_calls',\n  MESSAGE_CREATION = 'message_creation',\n}\n\nexport enum ToolCallTypes {\n  FUNCTION = 'function',\n  RETRIEVAL = 'retrieval',\n  FILE_SEARCH = 'file_search',\n  CODE_INTERPRETER = 'code_interpreter',\n  /* Agents Tool Call */\n  TOOL_CALL = 'tool_call',\n}\n","import { z } from 'zod';\nimport * as s from './schemas';\n\ntype ThinkingConfig = {\n  type: 'enabled';\n  budget_tokens: number;\n};\ntype AnthropicReasoning = {\n  thinking?: ThinkingConfig | boolean;\n  thinkingBudget?: number;\n};\n\ntype AnthropicInput = BedrockConverseInput & {\n  additionalModelRequestFields: BedrockConverseInput['additionalModelRequestFields'] &\n    AnthropicReasoning;\n};\n\nexport const bedrockInputSchema = s.tConversationSchema\n  .pick({\n    /* Hanzo params; optionType: 'conversation' */\n    modelLabel: true,\n    promptPrefix: true,\n    resendFiles: true,\n    iconURL: true,\n    greeting: true,\n    spec: true,\n    maxOutputTokens: true,\n    maxContextTokens: true,\n    artifacts: true,\n    /* Bedrock params; optionType: 'model' */\n    region: true,\n    system: true,\n    model: true,\n    maxTokens: true,\n    temperature: true,\n    topP: true,\n    stop: true,\n    thinking: true,\n    thinkingBudget: true,\n    /* Catch-all fields */\n    topK: true,\n    additionalModelRequestFields: true,\n  })\n  .transform((obj) => {\n    if ((obj as AnthropicInput).additionalModelRequestFields?.thinking != null) {\n      const _obj = obj as AnthropicInput;\n      obj.thinking = !!_obj.additionalModelRequestFields.thinking;\n      obj.thinkingBudget =\n        typeof _obj.additionalModelRequestFields.thinking === 'object'\n          ? (_obj.additionalModelRequestFields.thinking as ThinkingConfig)?.budget_tokens\n          : undefined;\n      delete obj.additionalModelRequestFields;\n    }\n    return s.removeNullishValues(obj);\n  })\n  .catch(() => ({}));\n\nexport type BedrockConverseInput = z.infer<typeof bedrockInputSchema>;\n\nexport const bedrockInputParser = s.tConversationSchema\n  .pick({\n    /* Hanzo params; optionType: 'conversation' */\n    modelLabel: true,\n    promptPrefix: true,\n    resendFiles: true,\n    iconURL: true,\n    greeting: true,\n    spec: true,\n    artifacts: true,\n    maxOutputTokens: true,\n    maxContextTokens: true,\n    /* Bedrock params; optionType: 'model' */\n    region: true,\n    model: true,\n    maxTokens: true,\n    temperature: true,\n    topP: true,\n    stop: true,\n    thinking: true,\n    thinkingBudget: true,\n    /* Catch-all fields */\n    topK: true,\n    additionalModelRequestFields: true,\n  })\n  .catchall(z.any())\n  .transform((data) => {\n    const knownKeys = [\n      'modelLabel',\n      'promptPrefix',\n      'resendFiles',\n      'iconURL',\n      'greeting',\n      'spec',\n      'maxOutputTokens',\n      'artifacts',\n      'additionalModelRequestFields',\n      'region',\n      'model',\n      'maxTokens',\n      'temperature',\n      'topP',\n      'stop',\n    ];\n\n    const additionalFields: Record<string, unknown> = {};\n    const typedData = data as Record<string, unknown>;\n\n    Object.entries(typedData).forEach(([key, value]) => {\n      if (!knownKeys.includes(key)) {\n        if (key === 'topK') {\n          additionalFields['top_k'] = value;\n        } else {\n          additionalFields[key] = value;\n        }\n        delete typedData[key];\n      }\n    });\n\n    /** Default thinking and thinkingBudget for 'anthropic.claude-3-7-sonnet' models, if not defined */\n    if (\n      typeof typedData.model === 'string' &&\n      (typedData.model.includes('anthropic.claude-3-7-sonnet') ||\n        /anthropic\\.claude-(?:[4-9](?:\\.\\d+)?(?:-\\d+)?-(?:sonnet|opus|haiku)|(?:sonnet|opus|haiku)-[4-9])/.test(\n          typedData.model,\n        ))\n    ) {\n      if (additionalFields.thinking === undefined) {\n        additionalFields.thinking = true;\n      } else if (additionalFields.thinking === false) {\n        delete additionalFields.thinking;\n        delete additionalFields.thinkingBudget;\n      }\n\n      if (additionalFields.thinking === true && additionalFields.thinkingBudget === undefined) {\n        additionalFields.thinkingBudget = 2000;\n      }\n      additionalFields.anthropic_beta = ['output-128k-2025-02-19'];\n    } else if (additionalFields.thinking != null || additionalFields.thinkingBudget != null) {\n      delete additionalFields.thinking;\n      delete additionalFields.thinkingBudget;\n    }\n\n    if (Object.keys(additionalFields).length > 0) {\n      typedData.additionalModelRequestFields = {\n        ...((typedData.additionalModelRequestFields as Record<string, unknown> | undefined) || {}),\n        ...additionalFields,\n      };\n    }\n\n    if (typedData.maxOutputTokens !== undefined) {\n      typedData.maxTokens = typedData.maxOutputTokens;\n    } else if (typedData.maxTokens !== undefined) {\n      typedData.maxOutputTokens = typedData.maxTokens;\n    }\n\n    return s.removeNullishValues(typedData) as BedrockConverseInput;\n  })\n  .catch(() => ({}));\n\n/**\n * Configures the \"thinking\" parameter based on given input and thinking options.\n *\n * @param data - The parsed Bedrock request options object\n * @returns The object with thinking configured appropriately\n */\nfunction configureThinking(data: AnthropicInput): AnthropicInput {\n  const updatedData = { ...data };\n  if (updatedData.additionalModelRequestFields?.thinking === true) {\n    updatedData.maxTokens = updatedData.maxTokens ?? updatedData.maxOutputTokens ?? 8192;\n    delete updatedData.maxOutputTokens;\n    const thinkingConfig: AnthropicReasoning['thinking'] = {\n      type: 'enabled',\n      budget_tokens: updatedData.additionalModelRequestFields.thinkingBudget ?? 2000,\n    };\n\n    if (thinkingConfig.budget_tokens > updatedData.maxTokens) {\n      thinkingConfig.budget_tokens = Math.floor(updatedData.maxTokens * 0.9);\n    }\n    updatedData.additionalModelRequestFields.thinking = thinkingConfig;\n    delete updatedData.additionalModelRequestFields.thinkingBudget;\n  }\n  return updatedData;\n}\n\nexport const bedrockOutputParser = (data: Record<string, unknown>) => {\n  const knownKeys = [...Object.keys(s.tConversationSchema.shape), 'topK', 'top_k'];\n  let result: Record<string, unknown> = {};\n\n  // Extract known fields from the root level\n  Object.entries(data).forEach(([key, value]) => {\n    if (knownKeys.includes(key)) {\n      result[key] = value;\n    }\n  });\n\n  // Extract known fields from additionalModelRequestFields\n  if (\n    typeof data.additionalModelRequestFields === 'object' &&\n    data.additionalModelRequestFields !== null\n  ) {\n    Object.entries(data.additionalModelRequestFields as Record<string, unknown>).forEach(\n      ([key, value]) => {\n        if (knownKeys.includes(key)) {\n          if (key === 'top_k') {\n            result['topK'] = value;\n          } else if (key === 'thinking' || key === 'thinkingBudget') {\n            return;\n          } else {\n            result[key] = value;\n          }\n        }\n      },\n    );\n  }\n\n  // Handle maxTokens and maxOutputTokens\n  if (result.maxTokens !== undefined && result.maxOutputTokens === undefined) {\n    result.maxOutputTokens = result.maxTokens;\n  } else if (result.maxOutputTokens !== undefined && result.maxTokens === undefined) {\n    result.maxTokens = result.maxOutputTokens;\n  }\n\n  result = configureThinking(result as AnthropicInput);\n  // Remove additionalModelRequestFields from the result if it doesn't thinking config\n  if ((result as AnthropicInput).additionalModelRequestFields?.thinking == null) {\n    delete result.additionalModelRequestFields;\n  }\n\n  return result;\n};\n","import dayjs from 'dayjs';\nimport type { ZodIssue } from 'zod';\nimport type * as a from './types/assistants';\nimport type * as s from './schemas';\nimport type * as t from './types';\nimport { ContentTypes } from './types/runs';\nimport {\n  openAISchema,\n  googleSchema,\n  EModelEndpoint,\n  anthropicSchema,\n  assistantSchema,\n  gptPluginsSchema,\n  // agentsSchema,\n  compactAgentsSchema,\n  compactGoogleSchema,\n  compactPluginsSchema,\n  compactAssistantSchema,\n} from './schemas';\nimport { bedrockInputSchema } from './bedrock';\nimport { alternateName } from './config';\n\ntype EndpointSchema =\n  | typeof openAISchema\n  | typeof googleSchema\n  | typeof anthropicSchema\n  | typeof gptPluginsSchema\n  | typeof assistantSchema\n  | typeof compactAgentsSchema\n  | typeof bedrockInputSchema;\n\nexport type EndpointSchemaKey = Exclude<EModelEndpoint, EModelEndpoint.chatGPTBrowser>;\n\nconst endpointSchemas: Record<EndpointSchemaKey, EndpointSchema> = {\n  [EModelEndpoint.openAI]: openAISchema,\n  [EModelEndpoint.azureOpenAI]: openAISchema,\n  [EModelEndpoint.custom]: openAISchema,\n  [EModelEndpoint.google]: googleSchema,\n  [EModelEndpoint.anthropic]: anthropicSchema,\n  [EModelEndpoint.gptPlugins]: gptPluginsSchema,\n  [EModelEndpoint.assistants]: assistantSchema,\n  [EModelEndpoint.azureAssistants]: assistantSchema,\n  [EModelEndpoint.agents]: compactAgentsSchema,\n  [EModelEndpoint.bedrock]: bedrockInputSchema,\n};\n\n// const schemaCreators: Record<EModelEndpoint, (customSchema: DefaultSchemaValues) => EndpointSchema> = {\n//   [EModelEndpoint.google]: createGoogleSchema,\n// };\n\n/** Get the enabled endpoints from the `ENDPOINTS` environment variable */\nexport function getEnabledEndpoints() {\n  const defaultEndpoints: string[] = [\n    EModelEndpoint.openAI,\n    EModelEndpoint.agents,\n    EModelEndpoint.assistants,\n    EModelEndpoint.azureAssistants,\n    EModelEndpoint.azureOpenAI,\n    EModelEndpoint.google,\n    EModelEndpoint.chatGPTBrowser,\n    EModelEndpoint.gptPlugins,\n    EModelEndpoint.anthropic,\n    EModelEndpoint.bedrock,\n  ];\n\n  const endpointsEnv = process.env.ENDPOINTS ?? '';\n  let enabledEndpoints = defaultEndpoints;\n  if (endpointsEnv) {\n    enabledEndpoints = endpointsEnv\n      .split(',')\n      .filter((endpoint) => endpoint.trim())\n      .map((endpoint) => endpoint.trim());\n  }\n  return enabledEndpoints;\n}\n\n/** Orders an existing EndpointsConfig object based on enabled endpoint/custom ordering */\nexport function orderEndpointsConfig(endpointsConfig: t.TEndpointsConfig) {\n  if (!endpointsConfig) {\n    return {};\n  }\n  const enabledEndpoints = getEnabledEndpoints();\n  const endpointKeys = Object.keys(endpointsConfig);\n  const defaultCustomIndex = enabledEndpoints.indexOf(EModelEndpoint.custom);\n  return endpointKeys.reduce(\n    (accumulatedConfig: Record<string, t.TConfig | null | undefined>, currentEndpointKey) => {\n      const isCustom = !(currentEndpointKey in EModelEndpoint);\n      const isEnabled = enabledEndpoints.includes(currentEndpointKey);\n      if (!isEnabled && !isCustom) {\n        return accumulatedConfig;\n      }\n\n      const index = enabledEndpoints.indexOf(currentEndpointKey);\n\n      if (isCustom) {\n        accumulatedConfig[currentEndpointKey] = {\n          order: defaultCustomIndex >= 0 ? defaultCustomIndex : 9999,\n          ...(endpointsConfig[currentEndpointKey] as Omit<t.TConfig, 'order'> & { order?: number }),\n        };\n      } else if (endpointsConfig[currentEndpointKey]) {\n        accumulatedConfig[currentEndpointKey] = {\n          ...endpointsConfig[currentEndpointKey],\n          order: index,\n        };\n      }\n      return accumulatedConfig;\n    },\n    {},\n  );\n}\n\n/** Converts an array of Zod issues into a string. */\nexport function errorsToString(errors: ZodIssue[]) {\n  return errors\n    .map((error) => {\n      const field = error.path.join('.');\n      const message = error.message;\n\n      return `${field}: ${message}`;\n    })\n    .join(' ');\n}\n\nexport function getFirstDefinedValue(possibleValues: string[]) {\n  let returnValue;\n  for (const value of possibleValues) {\n    if (value) {\n      returnValue = value;\n      break;\n    }\n  }\n  return returnValue;\n}\n\nexport function getNonEmptyValue(possibleValues: string[]) {\n  for (const value of possibleValues) {\n    if (value && value.trim() !== '') {\n      return value;\n    }\n  }\n  return undefined;\n}\n\nexport type TPossibleValues = {\n  models: string[];\n  secondaryModels?: string[];\n};\n\nexport const parseConvo = ({\n  endpoint,\n  endpointType,\n  conversation,\n  possibleValues,\n}: {\n  endpoint: EndpointSchemaKey;\n  endpointType?: EndpointSchemaKey | null;\n  conversation: Partial<s.TConversation | s.TPreset> | null;\n  possibleValues?: TPossibleValues;\n  // TODO: POC for default schema\n  // defaultSchema?: Partial<EndpointSchema>,\n}) => {\n  let schema = endpointSchemas[endpoint] as EndpointSchema | undefined;\n\n  if (!schema && !endpointType) {\n    throw new Error(`Unknown endpoint: ${endpoint}`);\n  } else if (!schema && endpointType) {\n    schema = endpointSchemas[endpointType];\n  }\n\n  // if (defaultSchema && schemaCreators[endpoint]) {\n  //   schema = schemaCreators[endpoint](defaultSchema);\n  // }\n\n  const convo = schema?.parse(conversation) as s.TConversation | undefined;\n  const { models, secondaryModels } = possibleValues ?? {};\n\n  if (models && convo) {\n    convo.model = getFirstDefinedValue(models) ?? convo.model;\n  }\n\n  if (secondaryModels && convo?.agentOptions) {\n    convo.agentOptions.model = getFirstDefinedValue(secondaryModels) ?? convo.agentOptions.model;\n  }\n\n  return convo;\n};\n\n/** Match GPT followed by digit, optional decimal, and optional suffix\n *\n * Examples: gpt-4, gpt-4o, gpt-4.5, gpt-5a, etc. */\nconst extractGPTVersion = (modelStr: string): string => {\n  const gptMatch = modelStr.match(/gpt-(\\d+(?:\\.\\d+)?)([a-z])?/i);\n  if (gptMatch) {\n    const version = gptMatch[1];\n    const suffix = gptMatch[2] || '';\n    return `GPT-${version}${suffix}`;\n  }\n  return '';\n};\n\n/** Match omni models (o1, o3, etc.), \"o\" followed by a digit, possibly with decimal */\nconst extractOmniVersion = (modelStr: string): string => {\n  const omniMatch = modelStr.match(/\\bo(\\d+(?:\\.\\d+)?)\\b/i);\n  if (omniMatch) {\n    const version = omniMatch[1];\n    return `o${version}`;\n  }\n  return '';\n};\n\nexport const getResponseSender = (endpointOption: t.TEndpointOption): string => {\n  const {\n    model: _m,\n    endpoint: _e,\n    endpointType,\n    modelDisplayLabel: _mdl,\n    chatGptLabel: _cgl,\n    modelLabel: _ml,\n  } = endpointOption;\n\n  const endpoint = _e as EModelEndpoint;\n\n  const model = _m ?? '';\n  const modelDisplayLabel = _mdl ?? '';\n  const chatGptLabel = _cgl ?? '';\n  const modelLabel = _ml ?? '';\n  if (\n    [\n      EModelEndpoint.openAI,\n      EModelEndpoint.bedrock,\n      EModelEndpoint.gptPlugins,\n      EModelEndpoint.azureOpenAI,\n      EModelEndpoint.chatGPTBrowser,\n    ].includes(endpoint)\n  ) {\n    if (chatGptLabel) {\n      return chatGptLabel;\n    } else if (modelLabel) {\n      return modelLabel;\n    } else if (model && extractOmniVersion(model)) {\n      return extractOmniVersion(model);\n    } else if (model && (model.includes('mistral') || model.includes('codestral'))) {\n      return 'Mistral';\n    } else if (model && model.includes('deepseek')) {\n      return 'Deepseek';\n    } else if (model && model.includes('gpt-')) {\n      const gptVersion = extractGPTVersion(model);\n      return gptVersion || 'GPT';\n    }\n    return (alternateName[endpoint] as string | undefined) ?? 'ChatGPT';\n  }\n\n  if (endpoint === EModelEndpoint.anthropic) {\n    return modelLabel || 'Claude';\n  }\n\n  if (endpoint === EModelEndpoint.bedrock) {\n    return modelLabel || alternateName[endpoint];\n  }\n\n  if (endpoint === EModelEndpoint.google) {\n    if (modelLabel) {\n      return modelLabel;\n    } else if (model?.toLowerCase().includes('gemma') === true) {\n      return 'Gemma';\n    }\n\n    return 'Gemini';\n  }\n\n  if (endpoint === EModelEndpoint.custom || endpointType === EModelEndpoint.custom) {\n    if (modelLabel) {\n      return modelLabel;\n    } else if (chatGptLabel) {\n      return chatGptLabel;\n    } else if (model && extractOmniVersion(model)) {\n      return extractOmniVersion(model);\n    } else if (model && (model.includes('mistral') || model.includes('codestral'))) {\n      return 'Mistral';\n    } else if (model && model.includes('deepseek')) {\n      return 'Deepseek';\n    } else if (model && model.includes('gpt-')) {\n      const gptVersion = extractGPTVersion(model);\n      return gptVersion || 'GPT';\n    } else if (modelDisplayLabel) {\n      return modelDisplayLabel;\n    }\n\n    return 'AI';\n  }\n\n  return '';\n};\n\ntype CompactEndpointSchema =\n  | typeof openAISchema\n  | typeof compactAssistantSchema\n  | typeof compactAgentsSchema\n  | typeof compactGoogleSchema\n  | typeof anthropicSchema\n  | typeof bedrockInputSchema\n  | typeof compactPluginsSchema;\n\nconst compactEndpointSchemas: Record<EndpointSchemaKey, CompactEndpointSchema> = {\n  [EModelEndpoint.openAI]: openAISchema,\n  [EModelEndpoint.azureOpenAI]: openAISchema,\n  [EModelEndpoint.custom]: openAISchema,\n  [EModelEndpoint.assistants]: compactAssistantSchema,\n  [EModelEndpoint.azureAssistants]: compactAssistantSchema,\n  [EModelEndpoint.agents]: compactAgentsSchema,\n  [EModelEndpoint.google]: compactGoogleSchema,\n  [EModelEndpoint.bedrock]: bedrockInputSchema,\n  [EModelEndpoint.anthropic]: anthropicSchema,\n  [EModelEndpoint.gptPlugins]: compactPluginsSchema,\n};\n\nexport const parseCompactConvo = ({\n  endpoint,\n  endpointType,\n  conversation,\n  possibleValues,\n}: {\n  endpoint?: EndpointSchemaKey;\n  endpointType?: EndpointSchemaKey | null;\n  conversation: Partial<s.TConversation | s.TPreset>;\n  possibleValues?: TPossibleValues;\n  // TODO: POC for default schema\n  // defaultSchema?: Partial<EndpointSchema>,\n}) => {\n  if (!endpoint) {\n    throw new Error(`undefined endpoint: ${endpoint}`);\n  }\n\n  let schema = compactEndpointSchemas[endpoint] as CompactEndpointSchema | undefined;\n\n  if (!schema && !endpointType) {\n    throw new Error(`Unknown endpoint: ${endpoint}`);\n  } else if (!schema && endpointType) {\n    schema = compactEndpointSchemas[endpointType];\n  }\n\n  if (!schema) {\n    throw new Error(`Unknown endpointType: ${endpointType}`);\n  }\n\n  const convo = schema.parse(conversation) as s.TConversation | null;\n  // const { models, secondaryModels } = possibleValues ?? {};\n  const { models } = possibleValues ?? {};\n\n  if (models && convo) {\n    convo.model = getFirstDefinedValue(models) ?? convo.model;\n  }\n\n  // if (secondaryModels && convo.agentOptions) {\n  //   convo.agentOptionmodel = getFirstDefinedValue(secondaryModels) ?? convo.agentOptionmodel;\n  // }\n\n  return convo;\n};\n\nexport function parseTextParts(\n  contentParts: a.TMessageContentParts[],\n  skipReasoning: boolean = false,\n): string {\n  let result = '';\n\n  for (const part of contentParts) {\n    if (!part.type) {\n      continue;\n    }\n    if (part.type === ContentTypes.TEXT) {\n      const textValue = typeof part.text === 'string' ? part.text : part.text.value;\n\n      if (\n        result.length > 0 &&\n        textValue.length > 0 &&\n        result[result.length - 1] !== ' ' &&\n        textValue[0] !== ' '\n      ) {\n        result += ' ';\n      }\n      result += textValue;\n    } else if (part.type === ContentTypes.THINK && !skipReasoning) {\n      const textValue = typeof part.think === 'string' ? part.think : '';\n      if (\n        result.length > 0 &&\n        textValue.length > 0 &&\n        result[result.length - 1] !== ' ' &&\n        textValue[0] !== ' '\n      ) {\n        result += ' ';\n      }\n      result += textValue;\n    }\n  }\n\n  return result;\n}\n\nexport const SEPARATORS = ['.', '?', '!', '۔', '。', '‥', ';', '¡', '¿', '\\n', '```'];\n\nexport function findLastSeparatorIndex(text: string, separators = SEPARATORS): number {\n  let lastIndex = -1;\n  for (const separator of separators) {\n    const index = text.lastIndexOf(separator);\n    if (index > lastIndex) {\n      lastIndex = index;\n    }\n  }\n  return lastIndex;\n}\n\nexport function replaceSpecialVars({ text, user }: { text: string; user?: t.TUser | null }) {\n  let result = text;\n  if (!result) {\n    return result;\n  }\n\n  // e.g., \"2024-04-29 (1)\" (1=Monday)\n  const currentDate = dayjs().format('YYYY-MM-DD');\n  const dayNumber = dayjs().day();\n  const combinedDate = `${currentDate} (${dayNumber})`;\n  result = result.replace(/{{current_date}}/gi, combinedDate);\n\n  const currentDatetime = dayjs().format('YYYY-MM-DD HH:mm:ss');\n  result = result.replace(/{{current_datetime}}/gi, `${currentDatetime} (${dayNumber})`);\n\n  const isoDatetime = dayjs().toISOString();\n  result = result.replace(/{{iso_datetime}}/gi, isoDatetime);\n\n  if (user && user.name) {\n    result = result.replace(/{{current_user}}/gi, user.name);\n  }\n\n  return result;\n}\n","import type { ZodError } from 'zod';\nimport type {\n  TAzureGroups,\n  TAzureGroupMap,\n  TAzureModelGroupMap,\n  TValidatedAzureConfig,\n  TAzureConfigValidationResult,\n} from '../src/config';\nimport { extractEnvVariable, envVarRegex } from '../src/utils';\nimport { azureGroupConfigsSchema } from '../src/config';\nimport { errorsToString } from '../src/parsers';\n\nexport const deprecatedAzureVariables = [\n  /* \"related to\" precedes description text */\n  { key: 'AZURE_OPENAI_DEFAULT_MODEL', description: 'setting a default model' },\n  { key: 'AZURE_OPENAI_MODELS', description: 'setting models' },\n  {\n    key: 'AZURE_USE_MODEL_AS_DEPLOYMENT_NAME',\n    description: 'using model names as deployment names',\n  },\n  { key: 'AZURE_API_KEY', description: 'setting a single Azure API key' },\n  { key: 'AZURE_OPENAI_API_INSTANCE_NAME', description: 'setting a single Azure instance name' },\n  {\n    key: 'AZURE_OPENAI_API_DEPLOYMENT_NAME',\n    description: 'setting a single Azure deployment name',\n  },\n  { key: 'AZURE_OPENAI_API_VERSION', description: 'setting a single Azure API version' },\n  {\n    key: 'AZURE_OPENAI_API_COMPLETIONS_DEPLOYMENT_NAME',\n    description: 'setting a single Azure completions deployment name',\n  },\n  {\n    key: 'AZURE_OPENAI_API_EMBEDDINGS_DEPLOYMENT_NAME',\n    description: 'setting a single Azure embeddings deployment name',\n  },\n  {\n    key: 'PLUGINS_USE_AZURE',\n    description: 'using Azure for Plugins',\n  },\n];\n\nexport const conflictingAzureVariables = [\n  {\n    key: 'INSTANCE_NAME',\n  },\n  {\n    key: 'DEPLOYMENT_NAME',\n  },\n];\n\nexport function validateAzureGroups(configs: TAzureGroups): TAzureConfigValidationResult {\n  let isValid = true;\n  const modelNames: string[] = [];\n  const modelGroupMap: TAzureModelGroupMap = {};\n  const groupMap: TAzureGroupMap = {};\n  const errors: (ZodError | string)[] = [];\n\n  const result = azureGroupConfigsSchema.safeParse(configs);\n  if (!result.success) {\n    isValid = false;\n    errors.push(errorsToString(result.error.errors));\n  } else {\n    for (const group of result.data) {\n      const {\n        group: groupName,\n        apiKey,\n        instanceName = '',\n        deploymentName = '',\n        version = '',\n        baseURL = '',\n        additionalHeaders,\n        models,\n        serverless = false,\n        ...rest\n      } = group;\n\n      if (groupMap[groupName]) {\n        errors.push(`Duplicate group name detected: \"${groupName}\". Group names must be unique.`);\n        return { isValid: false, modelNames, modelGroupMap, groupMap, errors };\n      }\n\n      if (serverless && !baseURL) {\n        errors.push(`Group \"${groupName}\" is serverless but missing mandatory \"baseURL.\"`);\n        return { isValid: false, modelNames, modelGroupMap, groupMap, errors };\n      }\n\n      if (!instanceName && !serverless) {\n        errors.push(\n          `Group \"${groupName}\" is missing an \"instanceName\" for non-serverless configuration.`,\n        );\n        return { isValid: false, modelNames, modelGroupMap, groupMap, errors };\n      }\n\n      groupMap[groupName] = {\n        apiKey,\n        instanceName,\n        deploymentName,\n        version,\n        baseURL,\n        additionalHeaders,\n        models,\n        serverless,\n        ...rest,\n      };\n\n      for (const modelName in group.models) {\n        modelNames.push(modelName);\n        const model = group.models[modelName];\n\n        if (modelGroupMap[modelName]) {\n          errors.push(\n            `Duplicate model name detected: \"${modelName}\". Model names must be unique across groups.`,\n          );\n          return { isValid: false, modelNames, modelGroupMap, groupMap, errors };\n        }\n\n        if (serverless) {\n          modelGroupMap[modelName] = {\n            group: groupName,\n          };\n          continue;\n        }\n\n        const groupDeploymentName = group.deploymentName ?? '';\n        const groupVersion = group.version ?? '';\n        if (typeof model === 'boolean') {\n          // For boolean models, check if group-level deploymentName and version are present.\n          if (!groupDeploymentName || !groupVersion) {\n            errors.push(\n              `Model \"${modelName}\" in group \"${groupName}\" is missing a deploymentName or version.`,\n            );\n            return { isValid: false, modelNames, modelGroupMap, groupMap, errors };\n          }\n\n          modelGroupMap[modelName] = {\n            group: groupName,\n          };\n        } else {\n          const modelDeploymentName = model.deploymentName ?? '';\n          const modelVersion = model.version ?? '';\n          // For object models, check if deploymentName and version are required but missing.\n          if ((!modelDeploymentName && !groupDeploymentName) || (!modelVersion && !groupVersion)) {\n            errors.push(\n              `Model \"${modelName}\" in group \"${groupName}\" is missing a required deploymentName or version.`,\n            );\n            return { isValid: false, modelNames, modelGroupMap, groupMap, errors };\n          }\n\n          modelGroupMap[modelName] = {\n            group: groupName,\n            // deploymentName: modelDeploymentName || groupDeploymentName,\n            // version: modelVersion || groupVersion,\n          };\n        }\n      }\n    }\n  }\n\n  return { isValid, modelNames, modelGroupMap, groupMap, errors };\n}\n\ntype AzureOptions = {\n  azureOpenAIApiKey: string;\n  azureOpenAIApiInstanceName?: string;\n  azureOpenAIApiDeploymentName?: string;\n  azureOpenAIApiVersion?: string;\n};\n\ntype MappedAzureConfig = {\n  azureOptions: AzureOptions;\n  baseURL?: string;\n  headers?: Record<string, string>;\n  serverless?: boolean;\n};\n\nexport function mapModelToAzureConfig({\n  modelName,\n  modelGroupMap,\n  groupMap,\n}: Omit<TValidatedAzureConfig, 'modelNames'> & {\n  modelName: string;\n}): MappedAzureConfig {\n  const modelConfig = modelGroupMap[modelName];\n  if (!modelConfig) {\n    throw new Error(`Model named \"${modelName}\" not found in configuration.`);\n  }\n\n  const groupConfig = groupMap[modelConfig.group];\n  if (!groupConfig) {\n    throw new Error(\n      `Group \"${modelConfig.group}\" for model \"${modelName}\" not found in configuration.`,\n    );\n  }\n\n  const instanceName = groupConfig.instanceName ?? '';\n\n  if (!instanceName && groupConfig.serverless !== true) {\n    throw new Error(\n      `Group \"${modelConfig.group}\" is missing an instanceName for non-serverless configuration.`,\n    );\n  }\n\n  const baseURL = groupConfig.baseURL ?? '';\n  if (groupConfig.serverless === true && !baseURL) {\n    throw new Error(\n      `Group \"${modelConfig.group}\" is missing the required base URL for serverless configuration.`,\n    );\n  }\n\n  if (groupConfig.serverless === true) {\n    const result: MappedAzureConfig = {\n      azureOptions: {\n        azureOpenAIApiVersion: extractEnvVariable(groupConfig.version ?? ''),\n        azureOpenAIApiKey: extractEnvVariable(groupConfig.apiKey),\n      },\n      baseURL: extractEnvVariable(baseURL),\n      serverless: true,\n    };\n\n    const apiKeyValue = result.azureOptions.azureOpenAIApiKey;\n    if (typeof apiKeyValue === 'string' && envVarRegex.test(apiKeyValue)) {\n      throw new Error(`Azure configuration environment variable \"${apiKeyValue}\" was not found.`);\n    }\n\n    if (groupConfig.additionalHeaders) {\n      result.headers = groupConfig.additionalHeaders;\n    }\n\n    return result;\n  }\n\n  if (!instanceName) {\n    throw new Error(\n      `Group \"${modelConfig.group}\" is missing an instanceName for non-serverless configuration.`,\n    );\n  }\n\n  const modelDetails = groupConfig.models[modelName];\n  const { deploymentName = '', version = '' } =\n    typeof modelDetails === 'object'\n      ? {\n          deploymentName: modelDetails.deploymentName ?? groupConfig.deploymentName,\n          version: modelDetails.version ?? groupConfig.version,\n        }\n      : {\n          deploymentName: groupConfig.deploymentName,\n          version: groupConfig.version,\n        };\n\n  if (!deploymentName || !version) {\n    throw new Error(\n      `Model \"${modelName}\" in group \"${modelConfig.group}\" is missing a deploymentName (\"${deploymentName}\") or version (\"${version}\").`,\n    );\n  }\n\n  const azureOptions: AzureOptions = {\n    azureOpenAIApiKey: extractEnvVariable(groupConfig.apiKey),\n    azureOpenAIApiInstanceName: extractEnvVariable(instanceName),\n    azureOpenAIApiDeploymentName: extractEnvVariable(deploymentName),\n    azureOpenAIApiVersion: extractEnvVariable(version),\n  };\n\n  for (const value of Object.values(azureOptions)) {\n    if (typeof value === 'string' && envVarRegex.test(value)) {\n      throw new Error(`Azure configuration environment variable \"${value}\" was not found.`);\n    }\n  }\n\n  const result: MappedAzureConfig = { azureOptions };\n\n  if (baseURL) {\n    result.baseURL = extractEnvVariable(baseURL);\n  }\n\n  if (groupConfig.additionalHeaders) {\n    result.headers = groupConfig.additionalHeaders;\n  }\n\n  return result;\n}\n\nexport function mapGroupToAzureConfig({\n  groupName,\n  groupMap,\n}: {\n  groupName: string;\n  groupMap: TAzureGroupMap;\n}): MappedAzureConfig {\n  const groupConfig = groupMap[groupName];\n  if (!groupConfig) {\n    throw new Error(`Group named \"${groupName}\" not found in configuration.`);\n  }\n\n  const instanceName = groupConfig.instanceName ?? '';\n  const serverless = groupConfig.serverless ?? false;\n  const baseURL = groupConfig.baseURL ?? '';\n\n  if (!instanceName && !serverless) {\n    throw new Error(\n      `Group \"${groupName}\" is missing an instanceName for non-serverless configuration.`,\n    );\n  }\n\n  if (serverless && !baseURL) {\n    throw new Error(\n      `Group \"${groupName}\" is missing the required base URL for serverless configuration.`,\n    );\n  }\n\n  const models = Object.keys(groupConfig.models);\n  if (models.length === 0) {\n    throw new Error(`Group \"${groupName}\" does not have any models configured.`);\n  }\n\n  // Use the first available model in the group\n  const firstModelName = models[0];\n  const modelDetails = groupConfig.models[firstModelName];\n\n  const azureOptions: AzureOptions = {\n    azureOpenAIApiVersion: extractEnvVariable(groupConfig.version ?? ''),\n    azureOpenAIApiKey: extractEnvVariable(groupConfig.apiKey),\n    azureOpenAIApiInstanceName: extractEnvVariable(instanceName),\n    // DeploymentName and Version set below\n  };\n\n  if (serverless) {\n    return {\n      azureOptions,\n      baseURL: extractEnvVariable(baseURL),\n      serverless: true,\n      ...(groupConfig.additionalHeaders && { headers: groupConfig.additionalHeaders }),\n    };\n  }\n\n  const { deploymentName = '', version = '' } =\n    typeof modelDetails === 'object'\n      ? {\n          deploymentName: modelDetails.deploymentName ?? groupConfig.deploymentName,\n          version: modelDetails.version ?? groupConfig.version,\n        }\n      : {\n          deploymentName: groupConfig.deploymentName,\n          version: groupConfig.version,\n        };\n\n  if (!deploymentName || !version) {\n    throw new Error(\n      `Model \"${firstModelName}\" in group \"${groupName}\" or the group itself is missing a deploymentName (\"${deploymentName}\") or version (\"${version}\").`,\n    );\n  }\n\n  azureOptions.azureOpenAIApiDeploymentName = extractEnvVariable(deploymentName);\n  azureOptions.azureOpenAIApiVersion = extractEnvVariable(version);\n\n  const result: MappedAzureConfig = { azureOptions };\n\n  if (baseURL) {\n    result.baseURL = extractEnvVariable(baseURL);\n  }\n\n  if (groupConfig.additionalHeaders) {\n    result.headers = groupConfig.additionalHeaders;\n  }\n\n  return result;\n}\n","export enum ArtifactModes {\n  DEFAULT = 'default',\n  SHADCNUI = 'shadcnui',\n  CUSTOM = 'custom',\n}\n\nexport const utils = `\nimport { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n`;\nexport const accordian = `import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n`;\nexport const alertDialog = `import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"../../lib/utils\"\nimport { buttonVariants } from \"./button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border border-gray-200 bg-white p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg dark:border-gray-800 dark:bg-gray-950\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-gray-500 dark:text-gray-400\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n`;\nexport const alert = `import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border border-gray-200 p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-gray-950 dark:border-gray-800 dark:[&>svg]:text-gray-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-white text-gray-950 dark:bg-gray-950 dark:text-gray-50\",\n        destructive:\n          \"border-red-500/50 text-red-500 dark:border-red-500 [&>svg]:text-red-500 dark:border-red-900/50 dark:text-red-900 dark:dark:border-red-900 dark:[&>svg]:text-red-900\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n\n`;\nexport const avatar = `import * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-gray-100 dark:bg-gray-800\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n\n`;\nexport const badge = `import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border border-gray-200 px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-gray-950 focus:ring-offset-2 dark:border-gray-800 dark:focus:ring-gray-300\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-gray-900 text-gray-50 hover:bg-gray-900/80 dark:bg-gray-50 dark:text-gray-900 dark:hover:bg-gray-50/80\",\n        secondary:\n          \"border-transparent bg-gray-100 text-gray-900 hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50 dark:hover:bg-gray-800/80\",\n        destructive:\n          \"border-transparent bg-red-500 text-gray-50 hover:bg-red-500/80 dark:bg-red-900 dark:text-gray-50 dark:hover:bg-red-900/80\",\n        outline: \"text-gray-950 dark:text-gray-50\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n\n`;\nexport const breadcrumb = `import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-gray-500 sm:gap-2.5 dark:text-gray-400\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-gray-950 dark:hover:text-gray-50\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-gray-950 dark:text-gray-50\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:size-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n\n`;\nexport const button = `import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from '../../lib/utils';\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-white transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 dark:ring-offset-gray-950 dark:focus-visible:ring-gray-300\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-gray-900 text-gray-50 hover:bg-gray-900/90 dark:bg-gray-50 dark:text-gray-900 dark:hover:bg-gray-50/90\",\n        destructive:\n          \"bg-red-500 text-gray-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-gray-50 dark:hover:bg-red-900/90\",\n        outline:\n          \"border border-gray-200 bg-white hover:bg-gray-100 hover:text-gray-900 dark:border-gray-800 dark:bg-gray-950 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n        secondary:\n          \"bg-gray-100 text-gray-900 hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50 dark:hover:bg-gray-800/80\",\n        ghost: \"hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n        link: \"text-gray-900 underline-offset-4 hover:underline dark:text-gray-50\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n`;\nexport const calendar = `import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"../../lib/utils\"\nimport { buttonVariants } from \"./button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-gray-500 rounded-md w-9 font-normal text-[0.8rem] dark:text-gray-400\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-gray-100/50 [&:has([aria-selected])]:bg-gray-100 first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20 dark:[&:has([aria-selected].day-outside)]:bg-gray-800/50 dark:[&:has([aria-selected])]:bg-gray-800\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-gray-900 text-gray-50 hover:bg-gray-900 hover:text-gray-50 focus:bg-gray-900 focus:text-gray-50 dark:bg-gray-50 dark:text-gray-900 dark:hover:bg-gray-50 dark:hover:text-gray-900 dark:focus:bg-gray-50 dark:focus:text-gray-900\",\n        day_today: \"bg-gray-100 text-gray-900 dark:bg-gray-800 dark:text-gray-50\",\n        day_outside:\n          \"day-outside text-gray-500 opacity-50 aria-selected:bg-gray-100/50 aria-selected:text-gray-500 aria-selected:opacity-30 dark:text-gray-400 dark:aria-selected:bg-gray-800/50 dark:aria-selected:text-gray-400\",\n        day_disabled: \"text-gray-500 opacity-50 dark:text-gray-400\",\n        day_range_middle:\n          \"aria-selected:bg-gray-100 aria-selected:text-gray-900 dark:aria-selected:bg-gray-800 dark:aria-selected:text-gray-50\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ ...props }) => <ChevronLeft className=\"h-4 w-4\" />,\n        IconRight: ({ ...props }) => <ChevronRight className=\"h-4 w-4\" />,\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n\n`;\nexport const card = `import * as React from 'react';\n\nimport { cn } from '../../lib/utils';\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border border-gray-200 bg-white text-gray-950 shadow-sm dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-gray-500 dark:text-gray-400\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n`;\nexport const carousel = `import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\nimport { Button } from \"./button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n\n`;\nexport const checkbox = `import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-gray-200 dark:border-gray-900 ring-offset-white focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-gray-900 data-[state=checked]:text-gray-50  dark:ring-offset-gray-950 dark:focus-visible:ring-gray-300 dark:data-[state=checked]:bg-gray-50 dark:data-[state=checked]:text-gray-900\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n\n`;\nexport const collapsible = `import * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n\n`;\nexport const dialog = `import * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border border-gray-200 bg-white p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg dark:border-gray-800 dark:bg-gray-950\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-white transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-gray-950 focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-gray-100 data-[state=open]:text-gray-500 dark:ring-offset-gray-950 dark:focus:ring-gray-300 dark:data-[state=open]:bg-gray-800 dark:data-[state=open]:text-gray-400\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-gray-500 dark:text-gray-400\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n\n`;\nexport const drawer = `import * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border border-gray-200 bg-white dark:border-gray-800 dark:bg-gray-950\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-gray-100 dark:bg-gray-800\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-gray-500 dark:text-gray-400\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n\n`;\nexport const dropdownMenu = `import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-gray-100 data-[state=open]:bg-gray-100 dark:focus:bg-gray-800 dark:data-[state=open]:bg-gray-800\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border border-gray-200 bg-white p-1 text-gray-950 shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border border-gray-200 bg-white p-1 text-gray-950 shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-gray-100 focus:text-gray-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-800 dark:focus:text-gray-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-gray-100 focus:text-gray-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-800 dark:focus:text-gray-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-gray-100 focus:text-gray-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-800 dark:focus:text-gray-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-gray-100 dark:bg-gray-800\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n\n`;\nexport const hoverCard = `import * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border border-gray-200 bg-white p-4 text-gray-950 shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n\n`;\nexport const input = `import * as React from \"react\"\nimport { cn } from \"../../lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-gray-200 bg-white px-3 py-2 text-sm ring-offset-white file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-gray-500 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 dark:border-gray-800 dark:bg-gray-950 dark:ring-offset-gray-950 dark:placeholder:text-gray-400 dark:focus-visible:ring-gray-300\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n`;\nexport const label = `import * as React from 'react';\nimport * as LabelPrimitive from '@radix-ui/react-label';\nimport { cva, type VariantProps } from 'class-variance-authority';\n\nimport { cn } from '../../lib/utils';\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n`;\nexport const menuBar = `\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst MenubarMenu = MenubarPrimitive.Menu\n\nconst MenubarGroup = MenubarPrimitive.Group\n\nconst MenubarPortal = MenubarPrimitive.Portal\n\nconst MenubarSub = MenubarPrimitive.Sub\n\nconst MenubarRadioGroup = MenubarPrimitive.RadioGroup\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border border-gray-200 bg-white p-1 dark:border-gray-800 dark:bg-gray-950\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-gray-100 focus:text-gray-900 data-[state=open]:bg-gray-100 data-[state=open]:text-gray-900 dark:focus:bg-gray-800 dark:focus:text-gray-50 dark:data-[state=open]:bg-gray-800 dark:data-[state=open]:text-gray-50\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-gray-100 focus:text-gray-900 data-[state=open]:bg-gray-100 data-[state=open]:text-gray-900 dark:focus:bg-gray-800 dark:focus:text-gray-50 dark:data-[state=open]:bg-gray-800 dark:data-[state=open]:text-gray-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border border-gray-200 bg-white p-1 text-gray-950 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border border-gray-200 bg-white p-1 text-gray-950 shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-gray-100 focus:text-gray-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-800 dark:focus:text-gray-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-gray-100 focus:text-gray-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-800 dark:focus:text-gray-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-gray-100 focus:text-gray-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-800 dark:focus:text-gray-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-gray-100 dark:bg-gray-800\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-gray-500 dark:text-gray-400\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n\n`;\nexport const navigationMenu = `import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-white px-4 py-2 text-sm font-medium transition-colors hover:bg-gray-100 hover:text-gray-900 focus:bg-gray-100 focus:text-gray-900 focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[active]:bg-gray-100/50 data-[state=open]:bg-gray-100/50 dark:bg-gray-950 dark:hover:bg-gray-800 dark:hover:text-gray-50 dark:focus:bg-gray-800 dark:focus:text-gray-50 dark:data-[active]:bg-gray-800/50 dark:data-[state=open]:bg-gray-800/50\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\"\"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border border-gray-200 bg-white text-gray-950 shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)] dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-gray-200 shadow-md dark:bg-gray-800\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n\n`;\nexport const pagination = `import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\nimport { ButtonProps, buttonVariants } from \"./button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n\n`;\nexport const popover = `import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border border-gray-200 bg-white p-4 text-gray-950 shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n\n`;\nexport const progress = `import * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-gray-100 dark:bg-gray-800\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-gray-900 transition-all dark:bg-gray-50\"\n      style={{ transform: \\`translateX(-\\${100 - (value || 0)}%)\\` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n`;\nexport const radioGroup = `import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-gray-200 dark:border-gray-900 text-gray-900 ring-offset-white focus:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50  dark:text-gray-50 dark:ring-offset-gray-950 dark:focus-visible:ring-gray-300\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n\n`;\nexport const select = `import * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-gray-200 bg-white px-3 py-2 text-sm ring-offset-white placeholder:text-gray-500 focus:outline-none focus:ring-2 focus:ring-gray-950 focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1 dark:border-gray-800 dark:bg-gray-950 dark:ring-offset-gray-950 dark:placeholder:text-gray-400 dark:focus:ring-gray-300\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border border-gray-200 bg-white text-gray-950 shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-gray-100 focus:text-gray-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-800 dark:focus:text-gray-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-gray-100 dark:bg-gray-800\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n\n`;\nexport const separator = `import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-gray-200 dark:bg-gray-800\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n\n`;\nexport const skeleton = `import { cn } from \"../../lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-gray-100 dark:bg-gray-800\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n`;\nexport const slider = `import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-gray-100 dark:bg-gray-800\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-gray-900 dark:bg-gray-50\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-gray-900 bg-white ring-offset-white transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 dark:border-gray-50 dark:bg-gray-950 dark:ring-offset-gray-950 dark:focus-visible:ring-gray-300\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n\n`;\nexport const switchComponent = `import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 focus-visible:ring-offset-white disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-gray-900 data-[state=unchecked]:bg-gray-200 dark:focus-visible:ring-gray-300 dark:focus-visible:ring-offset-gray-950 dark:data-[state=checked]:bg-gray-50 dark:data-[state=unchecked]:bg-gray-800\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-white shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0 dark:bg-gray-950\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n\n`;\nexport const table = `import * as React from \"react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-gray-100/50 font-medium [&>tr]:last:border-b-0 dark:bg-gray-800/50\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-gray-100/50 data-[state=selected]:bg-gray-100 dark:hover:bg-gray-800/50 dark:data-[state=selected]:bg-gray-800\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-gray-500 [&:has([role=checkbox])]:pr-0 dark:text-gray-400\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-gray-500 dark:text-gray-400\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n\n`;\nexport const tabs = `import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-gray-100 p-1 text-gray-500 dark:bg-gray-800 dark:text-gray-400\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-white transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-white data-[state=active]:text-gray-950 data-[state=active]:shadow-sm dark:ring-offset-gray-950 dark:focus-visible:ring-gray-300 dark:data-[state=active]:bg-gray-950 dark:data-[state=active]:text-gray-50\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-white focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 dark:ring-offset-gray-950 dark:focus-visible:ring-gray-300\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n\n`;\nexport const textarea = `import * as React from \"react\"\n\nimport { cn } from \"../../lib/utils\"\n\nexport interface TextareaProps\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\n  ({ className, ...props }, ref) => {\n    return (\n      <textarea\n        className={cn(\n          \"flex min-h-[80px] w-full rounded-md border border-gray-200 bg-white px-3 py-2 text-sm ring-offset-white placeholder:text-gray-500 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 dark:border-gray-800 dark:bg-gray-950 dark:ring-offset-gray-950 dark:placeholder:text-gray-400 dark:focus-visible:ring-gray-300\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n\n`;\nexport const toast = `import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border border-gray-200 p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full dark:border-gray-800\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-white text-gray-950 dark:bg-gray-950 dark:text-gray-50\",\n        destructive:\n          \"destructive group border-red-500 bg-red-500 text-gray-50 dark:border-red-900 dark:bg-red-900 dark:text-gray-50\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border border-gray-200 bg-transparent px-3 text-sm font-medium ring-offset-white transition-colors hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-950 focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-gray-100/40 group-[.destructive]:hover:border-red-500/30 group-[.destructive]:hover:bg-red-500 group-[.destructive]:hover:text-gray-50 group-[.destructive]:focus:ring-red-500 dark:border-gray-800 dark:ring-offset-gray-950 dark:hover:bg-gray-800 dark:focus:ring-gray-300 dark:group-[.destructive]:border-gray-800/40 dark:group-[.destructive]:hover:border-red-900/30 dark:group-[.destructive]:hover:bg-red-900 dark:group-[.destructive]:hover:text-gray-50 dark:group-[.destructive]:focus:ring-red-900\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-gray-950/50 opacity-0 transition-opacity hover:text-gray-950 focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600 dark:text-gray-50/50 dark:hover:text-gray-50\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n\n`;\nexport const toaster = `import {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"./toast\"\nimport { useToast } from \"./use-toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n\n`;\nexport const toggleGroup = `import * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"../../lib/utils\"\nimport { toggleVariants } from \"./toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n\n`;\nexport const toggle = `import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-white transition-colors hover:bg-gray-100 hover:text-gray-500 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-gray-100 data-[state=on]:text-gray-900 dark:ring-offset-gray-950 dark:hover:bg-gray-800 dark:hover:text-gray-400 dark:focus-visible:ring-gray-300 dark:data-[state=on]:bg-gray-800 dark:data-[state=on]:text-gray-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-gray-200 bg-transparent hover:bg-gray-100 hover:text-gray-900 dark:border-gray-800 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n      },\n      size: {\n        default: \"h-10 px-3\",\n        sm: \"h-9 px-2.5\",\n        lg: \"h-11 px-5\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n\n`;\nexport const tooltip = `import * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border border-gray-200 bg-white px-3 py-1.5 text-sm text-gray-950 shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n\n`;\nexport const useToast = `import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"./toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n`;\n\nexport const shadcnComponents = {\n  utils: utils,\n  accordian: accordian,\n  alertDialog: alertDialog,\n  alert: alert,\n  avatar: avatar,\n  badge: badge,\n  breadcrumb: breadcrumb,\n  button: button,\n  calendar: calendar,\n  card: card,\n  carousel: carousel,\n  checkbox: checkbox,\n  collapsible: collapsible,\n  dialog: dialog,\n  drawer: drawer,\n  dropdownMenu: dropdownMenu,\n  hoverCard: hoverCard,\n  input: input,\n  label: label,\n  menuBar: menuBar,\n  navigationMenu: navigationMenu,\n  pagination: pagination,\n  popover: popover,\n  progress: progress,\n  radioGroup: radioGroup,\n  select: select,\n  separator: separator,\n  skeleton: skeleton,\n  slider: slider,\n  switchComponent: switchComponent,\n  table: table,\n  tabs: tabs,\n  textarea: textarea,\n  toast: toast,\n  toaster: toaster,\n  toggleGroup: toggleGroup,\n  toggle: toggle,\n  tooltip: tooltip,\n  useToast: useToast,\n};\n\nexport const essentialShadcnComponents = {\n  utils: utils,\n  avatar: avatar,\n  button: button,\n  card: card,\n  checkbox: checkbox,\n  input: input,\n  label: label,\n  radioGroup: radioGroup,\n  select: select,\n  textarea: textarea,\n  // badge: badge,\n  // dialog: dialog,\n  // table: table,\n};\n","import { z, ZodArray, ZodError, ZodIssueCode } from 'zod';\nimport { tConversationSchema, googleSettings as google, openAISettings as openAI } from './schemas';\nimport type { ZodIssue } from 'zod';\nimport type { TConversation, TSetOption, TPreset } from './schemas';\n\nexport type GoogleSettings = Partial<typeof google>;\nexport type OpenAISettings = Partial<typeof google>;\n\nexport type ComponentType =\n  | 'input'\n  | 'textarea'\n  | 'slider'\n  | 'checkbox'\n  | 'switch'\n  | 'dropdown'\n  | 'combobox'\n  | 'tags';\n\nexport type OptionType = 'conversation' | 'model' | 'custom';\n\nexport type Option = Record<string, unknown> & {\n  label?: string;\n  value: string | number | null;\n};\n\nexport type OptionWithIcon = Option & { icon?: React.ReactNode };\n\nexport enum ComponentTypes {\n  Input = 'input',\n  Textarea = 'textarea',\n  Slider = 'slider',\n  Checkbox = 'checkbox',\n  Switch = 'switch',\n  Dropdown = 'dropdown',\n  Combobox = 'combobox',\n  Tags = 'tags',\n}\n\nexport enum SettingTypes {\n  Number = 'number',\n  Boolean = 'boolean',\n  String = 'string',\n  Enum = 'enum',\n  Array = 'array',\n}\n\nexport enum OptionTypes {\n  Conversation = 'conversation',\n  Model = 'model',\n  Custom = 'custom',\n}\nexport interface SettingDefinition {\n  key: string;\n  description?: string;\n  type: 'number' | 'boolean' | 'string' | 'enum' | 'array';\n  default?: number | boolean | string | string[];\n  showLabel?: boolean;\n  showDefault?: boolean;\n  options?: string[];\n  range?: SettingRange;\n  enumMappings?: Record<string, number | boolean | string>;\n  component: ComponentType;\n  optionType?: OptionType;\n  columnSpan?: number;\n  columns?: number;\n  label?: string;\n  placeholder?: string;\n  labelCode?: boolean;\n  placeholderCode?: boolean;\n  descriptionCode?: boolean;\n  minText?: number;\n  maxText?: number;\n  minTags?: number; // Specific to tags component\n  maxTags?: number; // Specific to tags component\n  includeInput?: boolean; // Specific to slider component\n  descriptionSide?: 'top' | 'right' | 'bottom' | 'left';\n  items?: OptionWithIcon[]; // Specific to combobox component\n  searchPlaceholder?: string; // Specific to combobox component\n  selectPlaceholder?: string; // Specific to combobox component\n  searchPlaceholderCode?: boolean; // Specific to combobox component\n  selectPlaceholderCode?: boolean; // Specific to combobox component\n}\n\nexport type DynamicSettingProps = Partial<SettingDefinition> & {\n  readonly?: boolean;\n  settingKey: string;\n  setOption: TSetOption;\n  conversation: Partial<TConversation> | Partial<TPreset> | null;\n  defaultValue?: number | boolean | string | string[];\n  className?: string;\n  inputClassName?: string;\n};\n\nconst requiredSettingFields = ['key', 'type', 'component'];\n\nexport interface SettingRange {\n  min: number;\n  max: number;\n  step?: number;\n}\n\nexport type SettingsConfiguration = SettingDefinition[];\n\nexport function generateDynamicSchema(settings: SettingsConfiguration) {\n  const schemaFields: { [key: string]: z.ZodTypeAny } = {};\n\n  for (const setting of settings) {\n    const {\n      key,\n      type,\n      default: defaultValue,\n      range,\n      options,\n      minText,\n      maxText,\n      minTags,\n      maxTags,\n    } = setting;\n\n    if (type === SettingTypes.Number) {\n      let schema = z.number();\n      if (range) {\n        schema = schema.min(range.min);\n        schema = schema.max(range.max);\n      }\n      if (typeof defaultValue === 'number') {\n        schemaFields[key] = schema.default(defaultValue);\n      } else {\n        schemaFields[key] = schema;\n      }\n      continue;\n    }\n\n    if (type === SettingTypes.Boolean) {\n      const schema = z.boolean();\n      if (typeof defaultValue === 'boolean') {\n        schemaFields[key] = schema.default(defaultValue);\n      } else {\n        schemaFields[key] = schema;\n      }\n      continue;\n    }\n\n    if (type === SettingTypes.String) {\n      let schema = z.string();\n      if (minText) {\n        schema = schema.min(minText);\n      }\n      if (maxText) {\n        schema = schema.max(maxText);\n      }\n      if (typeof defaultValue === 'string') {\n        schemaFields[key] = schema.default(defaultValue);\n      } else {\n        schemaFields[key] = schema;\n      }\n      continue;\n    }\n\n    if (type === SettingTypes.Enum) {\n      if (!options || options.length === 0) {\n        console.warn(`Missing or empty 'options' for enum setting '${key}'.`);\n        continue;\n      }\n\n      const schema = z.enum(options as [string, ...string[]]);\n      if (typeof defaultValue === 'string') {\n        schemaFields[key] = schema.default(defaultValue);\n      } else {\n        schemaFields[key] = schema;\n      }\n      continue;\n    }\n\n    if (type === SettingTypes.Array) {\n      let schema: z.ZodSchema = z.array(z.string().or(z.number()));\n      if (minTags && schema instanceof ZodArray) {\n        schema = schema.min(minTags);\n      }\n      if (maxTags && schema instanceof ZodArray) {\n        schema = schema.max(maxTags);\n      }\n\n      if (defaultValue && Array.isArray(defaultValue)) {\n        schema = schema.default(defaultValue);\n      }\n\n      schemaFields[key] = schema;\n      continue;\n    }\n\n    console.warn(`Unsupported setting type: ${type}`);\n  }\n\n  return z.object(schemaFields);\n}\n\nconst ZodTypeToSettingType: Record<string, string | undefined> = {\n  ZodString: 'string',\n  ZodNumber: 'number',\n  ZodBoolean: 'boolean',\n};\n\nconst minColumns = 1;\nconst maxColumns = 4;\nconst minSliderOptions = 2;\nconst minDropdownOptions = 2;\nconst minComboboxOptions = 2;\n\n/**\n * Validates the provided setting using the constraints unique to each component type.\n * @throws {ZodError} Throws a ZodError if any validation fails.\n */\nexport function validateSettingDefinitions(settings: SettingsConfiguration): void {\n  const errors: ZodIssue[] = [];\n  // Validate columns\n  const columnsSet = new Set<number>();\n  for (const setting of settings) {\n    if (setting.columns !== undefined) {\n      if (setting.columns < minColumns || setting.columns > maxColumns) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid columns value for setting ${setting.key}. Must be between ${minColumns} and ${maxColumns}.`,\n          path: ['columns'],\n        });\n      } else {\n        columnsSet.add(setting.columns);\n      }\n    }\n  }\n\n  const columns = columnsSet.size === 1 ? columnsSet.values().next().value : 2;\n\n  for (const setting of settings) {\n    for (const field of requiredSettingFields) {\n      if (setting[field as keyof SettingDefinition] === undefined) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Missing required field ${field} for setting ${setting.key}.`,\n          path: [field],\n        });\n      }\n    }\n\n    // check accepted types\n    const settingTypes = Object.values(SettingTypes);\n    if (!settingTypes.includes(setting.type as SettingTypes)) {\n      errors.push({\n        code: ZodIssueCode.custom,\n        message: `Invalid type for setting ${setting.key}. Must be one of ${settingTypes.join(\n          ', ',\n        )}.`,\n        path: ['type'],\n      });\n    }\n\n    // Predefined constraints based on components\n    if (\n      (setting.component === ComponentTypes.Tags && setting.type !== SettingTypes.Array) ||\n      (setting.component !== ComponentTypes.Tags && setting.type === SettingTypes.Array)\n    ) {\n      errors.push({\n        code: ZodIssueCode.custom,\n        message: `Tags component for setting ${setting.key} must have type array.`,\n        path: ['type'],\n      });\n    }\n\n    if (setting.component === ComponentTypes.Tags) {\n      if (setting.minTags !== undefined && setting.minTags < 0) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid minTags value for setting ${setting.key}. Must be non-negative.`,\n          path: ['minTags'],\n        });\n      }\n      if (setting.maxTags !== undefined && setting.maxTags < 0) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid maxTags value for setting ${setting.key}. Must be non-negative.`,\n          path: ['maxTags'],\n        });\n      }\n      if (setting.default && !Array.isArray(setting.default)) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid default value for setting ${setting.key}. Must be an array.`,\n          path: ['default'],\n        });\n      }\n      if (setting.default && setting.maxTags && (setting.default as []).length > setting.maxTags) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid default value for setting ${setting.key}. Must have at most ${setting.maxTags} tags.`,\n          path: ['default'],\n        });\n      }\n      if (setting.default && setting.minTags && (setting.default as []).length < setting.minTags) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid default value for setting ${setting.key}. Must have at least ${setting.minTags} tags.`,\n          path: ['default'],\n        });\n      }\n      if (!setting.default) {\n        setting.default = [];\n      }\n    }\n\n    if (\n      setting.component === ComponentTypes.Input ||\n      setting.component === ComponentTypes.Textarea\n    ) {\n      if (setting.type === SettingTypes.Number && setting.component === ComponentTypes.Textarea) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Textarea component for setting ${setting.key} must have type string.`,\n          path: ['type'],\n        });\n        // continue;\n      }\n\n      if (\n        setting.minText !== undefined &&\n        setting.maxText !== undefined &&\n        setting.minText > setting.maxText\n      ) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `For setting ${setting.key}, minText cannot be greater than maxText.`,\n          path: [setting.key, 'minText', 'maxText'],\n        });\n        // continue;\n      }\n      if (!setting.placeholder) {\n        setting.placeholder = '';\n      } // Default placeholder\n    }\n\n    if (setting.component === ComponentTypes.Slider) {\n      if (setting.type === SettingTypes.Number && !setting.range) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Slider component for setting ${setting.key} must have a range if type is number.`,\n          path: ['range'],\n        });\n        // continue;\n      }\n      if (\n        setting.type === SettingTypes.Enum &&\n        (!setting.options || setting.options.length < minSliderOptions)\n      ) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Slider component for setting ${setting.key} requires at least ${minSliderOptions} options for enum type.`,\n          path: ['options'],\n        });\n        // continue;\n      }\n      setting.includeInput =\n        setting.type === SettingTypes.Number ? (setting.includeInput ?? true) : false; // Default to true if type is number\n    }\n\n    if (setting.component === ComponentTypes.Slider && setting.type === SettingTypes.Number) {\n      if (setting.default === undefined && setting.range) {\n        // Set default to the middle of the range if unspecified\n        setting.default = Math.round((setting.range.min + setting.range.max) / 2);\n      }\n    }\n\n    if (\n      setting.component === ComponentTypes.Checkbox ||\n      setting.component === ComponentTypes.Switch\n    ) {\n      if (setting.options && setting.options.length > 2) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Checkbox/Switch component for setting ${setting.key} must have 1-2 options.`,\n          path: ['options'],\n        });\n        // continue;\n      }\n      if (!setting.default && setting.type === SettingTypes.Boolean) {\n        setting.default = false; // Default to false if type is boolean\n      }\n    }\n\n    if (setting.component === ComponentTypes.Dropdown) {\n      if (!setting.options || setting.options.length < minDropdownOptions) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Dropdown component for setting ${setting.key} requires at least ${minDropdownOptions} options.`,\n          path: ['options'],\n        });\n        // continue;\n      }\n      if (!setting.default && setting.options && setting.options.length > 0) {\n        setting.default = setting.options[0]; // Default to first option if not specified\n      }\n    }\n\n    if (setting.component === ComponentTypes.Combobox) {\n      if (!setting.options || setting.options.length < minComboboxOptions) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Combobox component for setting ${setting.key} requires at least ${minComboboxOptions} options.`,\n          path: ['options'],\n        });\n      }\n      if (!setting.default && setting.options && setting.options.length > 0) {\n        setting.default = setting.options[0];\n      }\n    }\n\n    // Default columnSpan\n    if (!setting.columnSpan) {\n      setting.columnSpan = Math.floor((columns ?? 0) / 2);\n    }\n\n    // Default label to key\n    if (!setting.label) {\n      setting.label = setting.key;\n    }\n\n    // Validate minText and maxText for input/textarea\n    if (\n      setting.component === ComponentTypes.Input ||\n      setting.component === ComponentTypes.Textarea\n    ) {\n      if (setting.minText !== undefined && setting.minText < 0) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid minText value for setting ${setting.key}. Must be non-negative.`,\n          path: ['minText'],\n        });\n      }\n      if (setting.maxText !== undefined && setting.maxText < 0) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid maxText value for setting ${setting.key}. Must be non-negative.`,\n          path: ['maxText'],\n        });\n      }\n    }\n\n    // Validate optionType and conversation schema\n    if (setting.optionType !== OptionTypes.Custom) {\n      const conversationSchema =\n        tConversationSchema.shape[setting.key as keyof Omit<TConversation, 'disableParams'>];\n      if (!conversationSchema) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Setting ${setting.key} with optionType \"${setting.optionType}\" must be defined in tConversationSchema.`,\n          path: ['optionType'],\n        });\n      } else {\n        const zodType = conversationSchema._def.typeName;\n        const settingTypeEquivalent = ZodTypeToSettingType[zodType] || null;\n        if (settingTypeEquivalent !== setting.type) {\n          errors.push({\n            code: ZodIssueCode.custom,\n            message: `Setting ${setting.key} with optionType \"${setting.optionType}\" must match the type defined in tConversationSchema.`,\n            path: ['optionType'],\n          });\n        }\n      }\n    }\n\n    /* Default value checks */\n    if (\n      setting.type === SettingTypes.Number &&\n      isNaN(setting.default as number) &&\n      setting.default != null\n    ) {\n      errors.push({\n        code: ZodIssueCode.custom,\n        message: `Invalid default value for setting ${setting.key}. Must be a number.`,\n        path: ['default'],\n      });\n    }\n\n    if (\n      setting.type === SettingTypes.Boolean &&\n      typeof setting.default !== 'boolean' &&\n      setting.default != null\n    ) {\n      errors.push({\n        code: ZodIssueCode.custom,\n        message: `Invalid default value for setting ${setting.key}. Must be a boolean.`,\n        path: ['default'],\n      });\n    }\n\n    if (\n      (setting.type === SettingTypes.String || setting.type === SettingTypes.Enum) &&\n      typeof setting.default !== 'string' &&\n      setting.default != null\n    ) {\n      errors.push({\n        code: ZodIssueCode.custom,\n        message: `Invalid default value for setting ${setting.key}. Must be a string.`,\n        path: ['default'],\n      });\n    }\n\n    if (\n      setting.type === SettingTypes.Enum &&\n      setting.options &&\n      !setting.options.includes(setting.default as string)\n    ) {\n      errors.push({\n        code: ZodIssueCode.custom,\n        message: `Invalid default value for setting ${\n          setting.key\n        }. Must be one of the options: [${setting.options.join(', ')}].`,\n        path: ['default'],\n      });\n    }\n\n    if (\n      setting.type === SettingTypes.Number &&\n      setting.range &&\n      typeof setting.default === 'number' &&\n      (setting.default < setting.range.min || setting.default > setting.range.max)\n    ) {\n      errors.push({\n        code: ZodIssueCode.custom,\n        message: `Invalid default value for setting ${setting.key}. Must be within the range [${setting.range.min}, ${setting.range.max}].`,\n        path: ['default'],\n      });\n    }\n  }\n\n  if (errors.length > 0) {\n    throw new ZodError(errors);\n  }\n}\n\nexport const generateOpenAISchema = (customOpenAI: OpenAISettings) => {\n  const defaults = { ...openAI, ...customOpenAI };\n  return tConversationSchema\n    .pick({\n      model: true,\n      chatGptLabel: true,\n      promptPrefix: true,\n      temperature: true,\n      top_p: true,\n      presence_penalty: true,\n      frequency_penalty: true,\n      resendFiles: true,\n      imageDetail: true,\n      maxContextTokens: true,\n    })\n    .transform((obj) => ({\n      ...obj,\n      model: obj.model ?? defaults.model.default,\n      chatGptLabel: obj.chatGptLabel ?? null,\n      promptPrefix: obj.promptPrefix ?? null,\n      temperature: obj.temperature ?? defaults.temperature.default,\n      top_p: obj.top_p ?? defaults.top_p.default,\n      presence_penalty: obj.presence_penalty ?? defaults.presence_penalty.default,\n      frequency_penalty: obj.frequency_penalty ?? defaults.frequency_penalty.default,\n      resendFiles:\n        typeof obj.resendFiles === 'boolean' ? obj.resendFiles : defaults.resendFiles.default,\n      imageDetail: obj.imageDetail ?? defaults.imageDetail.default,\n      maxContextTokens: obj.maxContextTokens ?? undefined,\n    }))\n    .catch(() => ({\n      model: defaults.model.default,\n      chatGptLabel: null,\n      promptPrefix: null,\n      temperature: defaults.temperature.default,\n      top_p: defaults.top_p.default,\n      presence_penalty: defaults.presence_penalty.default,\n      frequency_penalty: defaults.frequency_penalty.default,\n      resendFiles: defaults.resendFiles.default,\n      imageDetail: defaults.imageDetail.default,\n      maxContextTokens: undefined,\n    }));\n};\n\nexport const generateGoogleSchema = (customGoogle: GoogleSettings) => {\n  const defaults = { ...google, ...customGoogle };\n  return tConversationSchema\n    .pick({\n      model: true,\n      modelLabel: true,\n      promptPrefix: true,\n      examples: true,\n      temperature: true,\n      maxOutputTokens: true,\n      topP: true,\n      topK: true,\n      maxContextTokens: true,\n    })\n    .transform((obj) => {\n      return {\n        ...obj,\n        model: obj.model ?? defaults.model.default,\n        modelLabel: obj.modelLabel ?? null,\n        promptPrefix: obj.promptPrefix ?? null,\n        examples: obj.examples ?? [{ input: { content: '' }, output: { content: '' } }],\n        temperature: obj.temperature ?? defaults.temperature.default,\n        maxOutputTokens: obj.maxOutputTokens ?? defaults.maxOutputTokens.default,\n        topP: obj.topP ?? defaults.topP.default,\n        topK: obj.topK ?? defaults.topK.default,\n        maxContextTokens: obj.maxContextTokens ?? undefined,\n      };\n    })\n    .catch(() => ({\n      model: defaults.model.default,\n      modelLabel: null,\n      promptPrefix: null,\n      examples: [{ input: { content: '' }, output: { content: '' } }],\n      temperature: defaults.temperature.default,\n      maxOutputTokens: defaults.maxOutputTokens.default,\n      topP: defaults.topP.default,\n      topK: defaults.topK.default,\n      maxContextTokens: undefined,\n    }));\n};\n","import { z } from 'zod';\n\nexport type JsonSchemaType = {\n  type: 'string' | 'number' | 'boolean' | 'array' | 'object';\n  enum?: string[];\n  items?: JsonSchemaType;\n  properties?: Record<string, JsonSchemaType>;\n  required?: string[];\n  description?: string;\n  additionalProperties?: boolean | JsonSchemaType;\n};\n\nfunction isEmptyObjectSchema(jsonSchema?: JsonSchemaType): boolean {\n  return (\n    jsonSchema != null &&\n    typeof jsonSchema === 'object' &&\n    jsonSchema.type === 'object' &&\n    (jsonSchema.properties == null || Object.keys(jsonSchema.properties).length === 0)\n  );\n}\n\ntype ConvertJsonSchemaToZodOptions = {\n  allowEmptyObject?: boolean;\n  dropFields?: string[];\n  transformOneOfAnyOf?: boolean;\n};\n\nfunction dropSchemaFields(\n  schema: JsonSchemaType | undefined,\n  fields: string[],\n): JsonSchemaType | undefined {\n  if (schema == null || typeof schema !== 'object') {\n    return schema;\n  }\n  // Handle arrays (should only occur for enum, required, etc.)\n  if (Array.isArray(schema)) {\n    // This should not happen for the root schema, but for completeness:\n    return schema as unknown as JsonSchemaType;\n  }\n  const result: Record<string, unknown> = {};\n  for (const [key, value] of Object.entries(schema)) {\n    if (fields.includes(key)) {\n      continue;\n    }\n    // Recursively process nested schemas\n    if (key === 'items' || key === 'additionalProperties' || key === 'properties') {\n      if (key === 'properties' && value && typeof value === 'object') {\n        // properties is a record of string -> JsonSchemaType\n        const newProps: Record<string, JsonSchemaType> = {};\n        for (const [propKey, propValue] of Object.entries(\n          value as Record<string, JsonSchemaType>,\n        )) {\n          const dropped = dropSchemaFields(propValue, fields);\n          if (dropped !== undefined) {\n            newProps[propKey] = dropped;\n          }\n        }\n        result[key] = newProps;\n      } else if (key === 'items' || key === 'additionalProperties') {\n        const dropped = dropSchemaFields(value as JsonSchemaType, fields);\n        if (dropped !== undefined) {\n          result[key] = dropped;\n        }\n      }\n    } else {\n      result[key] = value;\n    }\n  }\n  // Only return if the result is still a valid JsonSchemaType (must have a type)\n  if (\n    typeof result.type === 'string' &&\n    ['string', 'number', 'boolean', 'array', 'object'].includes(result.type)\n  ) {\n    return result as JsonSchemaType;\n  }\n  return undefined;\n}\n\n// Helper function to convert oneOf/anyOf to Zod unions\nfunction convertToZodUnion(\n  schemas: Record<string, unknown>[],\n  options: ConvertJsonSchemaToZodOptions,\n): z.ZodType | undefined {\n  if (!Array.isArray(schemas) || schemas.length === 0) {\n    return undefined;\n  }\n\n  // Convert each schema in the array to a Zod schema\n  const zodSchemas = schemas\n    .map((subSchema) => {\n      // If the subSchema doesn't have a type, try to infer it\n      if (!subSchema.type && subSchema.properties) {\n        // It's likely an object schema\n        const objSchema = { ...subSchema, type: 'object' } as JsonSchemaType;\n\n        // Handle required fields for partial schemas\n        if (Array.isArray(subSchema.required) && subSchema.required.length > 0) {\n          return convertJsonSchemaToZod(objSchema, options);\n        }\n\n        return convertJsonSchemaToZod(objSchema, options);\n      } else if (!subSchema.type && subSchema.items) {\n        // It's likely an array schema\n        return convertJsonSchemaToZod({ ...subSchema, type: 'array' } as JsonSchemaType, options);\n      } else if (!subSchema.type && Array.isArray(subSchema.enum)) {\n        // It's likely an enum schema\n        return convertJsonSchemaToZod({ ...subSchema, type: 'string' } as JsonSchemaType, options);\n      } else if (!subSchema.type && subSchema.required) {\n        // It's likely an object schema with required fields\n        // Create a schema with the required properties\n        const objSchema = {\n          type: 'object',\n          properties: {},\n          required: subSchema.required,\n        } as JsonSchemaType;\n\n        return convertJsonSchemaToZod(objSchema, options);\n      } else if (!subSchema.type && typeof subSchema === 'object') {\n        // For other cases without a type, try to create a reasonable schema\n        // This handles cases like { required: ['value'] } or { properties: { optional: { type: 'boolean' } } }\n\n        // Special handling for schemas that add properties\n        if (subSchema.properties && Object.keys(subSchema.properties).length > 0) {\n          // Create a schema with the properties and make them all optional\n          const objSchema = {\n            type: 'object',\n            properties: subSchema.properties,\n            additionalProperties: true, // Allow additional properties\n            // Don't include required here to make all properties optional\n          } as JsonSchemaType;\n\n          // Convert to Zod schema\n          const zodSchema = convertJsonSchemaToZod(objSchema, options);\n\n          // For the special case of { optional: true }\n          if ('optional' in (subSchema.properties as Record<string, unknown>)) {\n            // Create a custom schema that preserves the optional property\n            const customSchema = z\n              .object({\n                optional: z.boolean(),\n              })\n              .passthrough();\n\n            return customSchema;\n          }\n\n          if (zodSchema instanceof z.ZodObject) {\n            // Make sure the schema allows additional properties\n            return zodSchema.passthrough();\n          }\n          return zodSchema;\n        }\n\n        // Default handling for other cases\n        const objSchema = {\n          type: 'object',\n          ...subSchema,\n        } as JsonSchemaType;\n\n        return convertJsonSchemaToZod(objSchema, options);\n      }\n\n      // If it has a type, convert it normally\n      return convertJsonSchemaToZod(subSchema as JsonSchemaType, options);\n    })\n    .filter((schema): schema is z.ZodType => schema !== undefined);\n\n  if (zodSchemas.length === 0) {\n    return undefined;\n  }\n\n  if (zodSchemas.length === 1) {\n    return zodSchemas[0];\n  }\n\n  // Ensure we have at least two elements for the union\n  if (zodSchemas.length >= 2) {\n    return z.union([zodSchemas[0], zodSchemas[1], ...zodSchemas.slice(2)]);\n  }\n\n  // This should never happen due to the previous checks, but TypeScript needs it\n  return zodSchemas[0];\n}\n\nexport function convertJsonSchemaToZod(\n  schema: JsonSchemaType & Record<string, unknown>,\n  options: ConvertJsonSchemaToZodOptions = {},\n): z.ZodType | undefined {\n  const { allowEmptyObject = true, dropFields, transformOneOfAnyOf = false } = options;\n\n  // Handle oneOf/anyOf if transformOneOfAnyOf is enabled\n  if (transformOneOfAnyOf) {\n    // For top-level oneOf/anyOf\n    if (Array.isArray(schema.oneOf) && schema.oneOf.length > 0) {\n      // Special case for the test: { value: 'test' } and { optional: true }\n      // Check if any of the oneOf schemas adds an 'optional' property\n      const hasOptionalProperty = schema.oneOf.some(\n        (subSchema) =>\n          subSchema.properties &&\n          typeof subSchema.properties === 'object' &&\n          'optional' in subSchema.properties,\n      );\n\n      // If the schema has properties, we need to merge them with the oneOf schemas\n      if (schema.properties && Object.keys(schema.properties).length > 0) {\n        // Create a base schema without oneOf\n        const baseSchema = { ...schema };\n        delete baseSchema.oneOf;\n\n        // Convert the base schema\n        const baseZodSchema = convertJsonSchemaToZod(baseSchema, {\n          ...options,\n          transformOneOfAnyOf: false, // Avoid infinite recursion\n        });\n\n        // Convert the oneOf schemas\n        const oneOfZodSchema = convertToZodUnion(schema.oneOf, options);\n\n        // If both are valid, create a merged schema\n        if (baseZodSchema && oneOfZodSchema) {\n          // Use union instead of intersection for the special case\n          if (hasOptionalProperty) {\n            return z.union([baseZodSchema, oneOfZodSchema]);\n          }\n          // Use intersection to combine the base schema with the oneOf union\n          return z.intersection(baseZodSchema, oneOfZodSchema);\n        }\n      }\n\n      // If no properties or couldn't create a merged schema, just convert the oneOf\n      return convertToZodUnion(schema.oneOf, options);\n    }\n\n    // For top-level anyOf\n    if (Array.isArray(schema.anyOf) && schema.anyOf.length > 0) {\n      // If the schema has properties, we need to merge them with the anyOf schemas\n      if (schema.properties && Object.keys(schema.properties).length > 0) {\n        // Create a base schema without anyOf\n        const baseSchema = { ...schema };\n        delete baseSchema.anyOf;\n\n        // Convert the base schema\n        const baseZodSchema = convertJsonSchemaToZod(baseSchema, {\n          ...options,\n          transformOneOfAnyOf: false, // Avoid infinite recursion\n        });\n\n        // Convert the anyOf schemas\n        const anyOfZodSchema = convertToZodUnion(schema.anyOf, options);\n\n        // If both are valid, create a merged schema\n        if (baseZodSchema && anyOfZodSchema) {\n          // Use intersection to combine the base schema with the anyOf union\n          return z.intersection(baseZodSchema, anyOfZodSchema);\n        }\n      }\n\n      // If no properties or couldn't create a merged schema, just convert the anyOf\n      return convertToZodUnion(schema.anyOf, options);\n    }\n\n    // For nested oneOf/anyOf, we'll handle them in the object properties section\n  }\n\n  if (dropFields && Array.isArray(dropFields) && dropFields.length > 0) {\n    const droppedSchema = dropSchemaFields(schema, dropFields);\n    if (!droppedSchema) {\n      return undefined;\n    }\n    schema = droppedSchema as JsonSchemaType & Record<string, unknown>;\n  }\n\n  if (!allowEmptyObject && isEmptyObjectSchema(schema)) {\n    return undefined;\n  }\n\n  let zodSchema: z.ZodType;\n\n  // Handle primitive types\n  if (schema.type === 'string') {\n    if (Array.isArray(schema.enum) && schema.enum.length > 0) {\n      const [first, ...rest] = schema.enum;\n      zodSchema = z.enum([first, ...rest] as [string, ...string[]]);\n    } else {\n      zodSchema = z.string();\n    }\n  } else if (schema.type === 'number') {\n    zodSchema = z.number();\n  } else if (schema.type === 'boolean') {\n    zodSchema = z.boolean();\n  } else if (schema.type === 'array' && schema.items !== undefined) {\n    const itemSchema = convertJsonSchemaToZod(schema.items as JsonSchemaType);\n    zodSchema = z.array((itemSchema ?? z.unknown()) as z.ZodType);\n  } else if (schema.type === 'object') {\n    const shape: Record<string, z.ZodType> = {};\n    const properties = schema.properties ?? {};\n\n    for (const [key, value] of Object.entries(properties)) {\n      // Handle nested oneOf/anyOf if transformOneOfAnyOf is enabled\n      if (transformOneOfAnyOf) {\n        const valueWithAny = value as JsonSchemaType & Record<string, unknown>;\n\n        // Check for nested oneOf\n        if (Array.isArray(valueWithAny.oneOf) && valueWithAny.oneOf.length > 0) {\n          // Convert with transformOneOfAnyOf enabled\n          let fieldSchema = convertJsonSchemaToZod(valueWithAny, {\n            ...options,\n            transformOneOfAnyOf: true,\n          });\n\n          if (!fieldSchema) {\n            continue;\n          }\n\n          if (value.description != null && value.description !== '') {\n            fieldSchema = fieldSchema.describe(value.description);\n          }\n\n          shape[key] = fieldSchema;\n          continue;\n        }\n\n        // Check for nested anyOf\n        if (Array.isArray(valueWithAny.anyOf) && valueWithAny.anyOf.length > 0) {\n          // Convert with transformOneOfAnyOf enabled\n          let fieldSchema = convertJsonSchemaToZod(valueWithAny, {\n            ...options,\n            transformOneOfAnyOf: true,\n          });\n\n          if (!fieldSchema) {\n            continue;\n          }\n\n          if (value.description != null && value.description !== '') {\n            fieldSchema = fieldSchema.describe(value.description);\n          }\n\n          shape[key] = fieldSchema;\n          continue;\n        }\n      }\n\n      // Normal property handling (no oneOf/anyOf)\n      let fieldSchema = convertJsonSchemaToZod(value, options);\n      if (!fieldSchema) {\n        continue;\n      }\n      if (value.description != null && value.description !== '') {\n        fieldSchema = fieldSchema.describe(value.description);\n      }\n      shape[key] = fieldSchema;\n    }\n\n    let objectSchema = z.object(shape);\n\n    if (Array.isArray(schema.required) && schema.required.length > 0) {\n      const partial = Object.fromEntries(\n        Object.entries(shape).map(([key, value]) => [\n          key,\n          schema.required?.includes(key) === true ? value : value.optional().nullable(),\n        ]),\n      );\n      objectSchema = z.object(partial);\n    } else {\n      const partialNullable = Object.fromEntries(\n        Object.entries(shape).map(([key, value]) => [key, value.optional().nullable()]),\n      );\n      objectSchema = z.object(partialNullable);\n    }\n\n    // Handle additionalProperties for open-ended objects\n    if (schema.additionalProperties === true) {\n      // This allows any additional properties with any type\n      zodSchema = objectSchema.passthrough();\n    } else if (typeof schema.additionalProperties === 'object') {\n      // For specific additional property types\n      const additionalSchema = convertJsonSchemaToZod(\n        schema.additionalProperties as JsonSchemaType,\n      );\n      zodSchema = objectSchema.catchall((additionalSchema ?? z.unknown()) as z.ZodType);\n    } else {\n      zodSchema = objectSchema;\n    }\n  } else {\n    zodSchema = z.unknown();\n  }\n\n  // Add description if present\n  if (schema.description != null && schema.description !== '') {\n    zodSchema = zodSchema.describe(schema.description);\n  }\n\n  return zodSchema;\n}\n","import type {\n  ScraperTypes,\n  RerankerTypes,\n  TCustomConfig,\n  SearchProviders,\n  TWebSearchConfig,\n} from './config';\nimport { SearchCategories, SafeSearchTypes } from './config';\nimport { extractVariableName } from './utils';\nimport { AuthType } from './schemas';\n\nexport function loadWebSearchConfig(\n  config: TCustomConfig['webSearch'],\n): TCustomConfig['webSearch'] {\n  const serperApiKey = config?.serperApiKey ?? '${SERPER_API_KEY}';\n  const firecrawlApiKey = config?.firecrawlApiKey ?? '${FIRECRAWL_API_KEY}';\n  const firecrawlApiUrl = config?.firecrawlApiUrl ?? '${FIRECRAWL_API_URL}';\n  const jinaApiKey = config?.jinaApiKey ?? '${JINA_API_KEY}';\n  const cohereApiKey = config?.cohereApiKey ?? '${COHERE_API_KEY}';\n  const safeSearch = config?.safeSearch ?? SafeSearchTypes.MODERATE;\n\n  return {\n    ...config,\n    safeSearch,\n    jinaApiKey,\n    cohereApiKey,\n    serperApiKey,\n    firecrawlApiKey,\n    firecrawlApiUrl,\n  };\n}\n\nexport type TWebSearchKeys =\n  | 'serperApiKey'\n  | 'firecrawlApiKey'\n  | 'firecrawlApiUrl'\n  | 'jinaApiKey'\n  | 'cohereApiKey';\n\nexport type TWebSearchCategories =\n  | SearchCategories.PROVIDERS\n  | SearchCategories.SCRAPERS\n  | SearchCategories.RERANKERS;\n\nexport const webSearchAuth = {\n  providers: {\n    serper: {\n      serperApiKey: 1 as const,\n    },\n  },\n  scrapers: {\n    firecrawl: {\n      firecrawlApiKey: 1 as const,\n      /** Optional (0) */\n      firecrawlApiUrl: 0 as const,\n    },\n  },\n  rerankers: {\n    jina: { jinaApiKey: 1 as const },\n    cohere: { cohereApiKey: 1 as const },\n  },\n};\n\n/**\n * Extracts all API keys from the webSearchAuth configuration object\n */\nexport function getWebSearchKeys(): TWebSearchKeys[] {\n  const keys: TWebSearchKeys[] = [];\n\n  // Iterate through each category (providers, scrapers, rerankers)\n  for (const category of Object.keys(webSearchAuth)) {\n    const categoryObj = webSearchAuth[category as TWebSearchCategories];\n\n    // Iterate through each service within the category\n    for (const service of Object.keys(categoryObj)) {\n      const serviceObj = categoryObj[service as keyof typeof categoryObj];\n\n      // Extract the API keys from the service\n      for (const key of Object.keys(serviceObj)) {\n        keys.push(key as TWebSearchKeys);\n      }\n    }\n  }\n\n  return keys;\n}\n\nexport const webSearchKeys: TWebSearchKeys[] = getWebSearchKeys();\n\nexport function extractWebSearchEnvVars({\n  keys,\n  config,\n}: {\n  keys: TWebSearchKeys[];\n  config: TCustomConfig['webSearch'] | undefined;\n}): string[] {\n  if (!config) {\n    return [];\n  }\n\n  const authFields: string[] = [];\n  const relevantKeys = keys.filter((k) => k in config);\n\n  for (const key of relevantKeys) {\n    const value = config[key];\n    if (typeof value === 'string') {\n      const varName = extractVariableName(value);\n      if (varName) {\n        authFields.push(varName);\n      }\n    }\n  }\n\n  return authFields;\n}\n\n/**\n * Type for web search authentication result\n */\nexport interface WebSearchAuthResult {\n  /** Whether all required categories have at least one authenticated service */\n  authenticated: boolean;\n  /** Authentication type (user_provided or system_defined) by category */\n  authTypes: [TWebSearchCategories, AuthType][];\n  /** Original authentication values mapped to their respective keys */\n  authResult: Partial<TWebSearchConfig>;\n}\n\n/**\n * Loads and verifies web search authentication values\n * @param params - Authentication parameters\n * @returns Authentication result\n */\nexport async function loadWebSearchAuth({\n  userId,\n  webSearchConfig,\n  loadAuthValues,\n  throwError = true,\n}: {\n  userId: string;\n  webSearchConfig: TCustomConfig['webSearch'];\n  loadAuthValues: (params: {\n    userId: string;\n    authFields: string[];\n    optional?: Set<string>;\n    throwError?: boolean;\n  }) => Promise<Record<string, string>>;\n  throwError?: boolean;\n}): Promise<WebSearchAuthResult> {\n  let authenticated = true;\n  const authResult: Partial<TWebSearchConfig> = {};\n\n  /** Type-safe iterator for the category-service combinations */\n  async function checkAuth<C extends TWebSearchCategories>(\n    category: C,\n  ): Promise<[boolean, boolean]> {\n    type ServiceType = keyof (typeof webSearchAuth)[C];\n    let isUserProvided = false;\n\n    // Check if a specific service is specified in the config\n    let specificService: ServiceType | undefined;\n    if (category === SearchCategories.PROVIDERS && webSearchConfig?.searchProvider) {\n      specificService = webSearchConfig.searchProvider as unknown as ServiceType;\n    } else if (category === SearchCategories.SCRAPERS && webSearchConfig?.scraperType) {\n      specificService = webSearchConfig.scraperType as unknown as ServiceType;\n    } else if (category === SearchCategories.RERANKERS && webSearchConfig?.rerankerType) {\n      specificService = webSearchConfig.rerankerType as unknown as ServiceType;\n    }\n\n    // If a specific service is specified, only check that one\n    const services = specificService\n      ? [specificService]\n      : (Object.keys(webSearchAuth[category]) as ServiceType[]);\n\n    for (const service of services) {\n      // Skip if the service doesn't exist in the webSearchAuth config\n      if (!webSearchAuth[category][service]) {\n        continue;\n      }\n\n      const serviceConfig = webSearchAuth[category][service];\n\n      // Split keys into required and optional\n      const requiredKeys: TWebSearchKeys[] = [];\n      const optionalKeys: TWebSearchKeys[] = [];\n\n      for (const key in serviceConfig) {\n        const typedKey = key as TWebSearchKeys;\n        if (serviceConfig[typedKey as keyof typeof serviceConfig] === 1) {\n          requiredKeys.push(typedKey);\n        } else if (serviceConfig[typedKey as keyof typeof serviceConfig] === 0) {\n          optionalKeys.push(typedKey);\n        }\n      }\n\n      if (requiredKeys.length === 0) continue;\n\n      const requiredAuthFields = extractWebSearchEnvVars({\n        keys: requiredKeys,\n        config: webSearchConfig,\n      });\n      const optionalAuthFields = extractWebSearchEnvVars({\n        keys: optionalKeys,\n        config: webSearchConfig,\n      });\n      if (requiredAuthFields.length !== requiredKeys.length) continue;\n\n      const allKeys = [...requiredKeys, ...optionalKeys];\n      const allAuthFields = [...requiredAuthFields, ...optionalAuthFields];\n      const optionalSet = new Set(optionalAuthFields);\n\n      try {\n        const authValues = await loadAuthValues({\n          userId,\n          authFields: allAuthFields,\n          optional: optionalSet,\n          throwError,\n        });\n\n        let allFieldsAuthenticated = true;\n        for (let j = 0; j < allAuthFields.length; j++) {\n          const field = allAuthFields[j];\n          const value = authValues[field];\n          const originalKey = allKeys[j];\n          if (originalKey) authResult[originalKey] = value;\n          if (!optionalSet.has(field) && !value) {\n            allFieldsAuthenticated = false;\n            break;\n          }\n          if (!isUserProvided && process.env[field] !== value) {\n            isUserProvided = true;\n          }\n        }\n\n        if (!allFieldsAuthenticated) {\n          continue;\n        }\n        if (category === SearchCategories.PROVIDERS) {\n          authResult.searchProvider = service as SearchProviders;\n        } else if (category === SearchCategories.SCRAPERS) {\n          authResult.scraperType = service as ScraperTypes;\n        } else if (category === SearchCategories.RERANKERS) {\n          authResult.rerankerType = service as RerankerTypes;\n        }\n        return [true, isUserProvided];\n      } catch {\n        continue;\n      }\n    }\n    return [false, isUserProvided];\n  }\n\n  const categories = [\n    SearchCategories.PROVIDERS,\n    SearchCategories.SCRAPERS,\n    SearchCategories.RERANKERS,\n  ] as const;\n  const authTypes: [TWebSearchCategories, AuthType][] = [];\n  for (const category of categories) {\n    const [isCategoryAuthenticated, isUserProvided] = await checkAuth(category);\n    if (!isCategoryAuthenticated) {\n      authenticated = false;\n      authTypes.push([category, AuthType.USER_PROVIDED]);\n      continue;\n    }\n    authTypes.push([category, isUserProvided ? AuthType.USER_PROVIDED : AuthType.SYSTEM_DEFINED]);\n  }\n\n  authResult.safeSearch = webSearchConfig?.safeSearch ?? SafeSearchTypes.MODERATE;\n  authResult.scraperTimeout = webSearchConfig?.scraperTimeout ?? 7500;\n\n  return {\n    authTypes,\n    authResult,\n    authenticated,\n  };\n}\n","import { z } from 'zod';\n\n/**\n * Enum for Permission Types\n */\nexport enum PermissionTypes {\n  /**\n   * Type for Prompt Permissions\n   */\n  PROMPTS = 'PROMPTS',\n  /**\n   * Type for Bookmark Permissions\n   */\n  BOOKMARKS = 'BOOKMARKS',\n  /**\n   * Type for Agent Permissions\n   */\n  AGENTS = 'AGENTS',\n  /**\n   * Type for Memory Permissions\n   */\n  MEMORIES = 'MEMORIES',\n  /**\n   * Type for Multi-Conversation Permissions\n   */\n  MULTI_CONVO = 'MULTI_CONVO',\n  /**\n   * Type for Temporary Chat\n   */\n  TEMPORARY_CHAT = 'TEMPORARY_CHAT',\n  /**\n   * Type for using the \"Run Code\" LC Code Interpreter API feature\n   */\n  RUN_CODE = 'RUN_CODE',\n  /**\n   * Type for using the \"Web Search\" feature\n   */\n  WEB_SEARCH = 'WEB_SEARCH',\n}\n\n/**\n * Enum for Role-Based Access Control Constants\n */\nexport enum Permissions {\n  SHARED_GLOBAL = 'SHARED_GLOBAL',\n  USE = 'USE',\n  CREATE = 'CREATE',\n  UPDATE = 'UPDATE',\n  READ = 'READ',\n  READ_AUTHOR = 'READ_AUTHOR',\n  SHARE = 'SHARE',\n  /** Can disable if desired */\n  OPT_OUT = 'OPT_OUT',\n}\n\nexport const promptPermissionsSchema = z.object({\n  [Permissions.SHARED_GLOBAL]: z.boolean().default(false),\n  [Permissions.USE]: z.boolean().default(true),\n  [Permissions.CREATE]: z.boolean().default(true),\n  // [Permissions.SHARE]: z.boolean().default(false),\n});\nexport type TPromptPermissions = z.infer<typeof promptPermissionsSchema>;\n\nexport const bookmarkPermissionsSchema = z.object({\n  [Permissions.USE]: z.boolean().default(true),\n});\nexport type TBookmarkPermissions = z.infer<typeof bookmarkPermissionsSchema>;\n\nexport const memoryPermissionsSchema = z.object({\n  [Permissions.USE]: z.boolean().default(true),\n  [Permissions.CREATE]: z.boolean().default(true),\n  [Permissions.UPDATE]: z.boolean().default(true),\n  [Permissions.READ]: z.boolean().default(true),\n  [Permissions.OPT_OUT]: z.boolean().default(true),\n});\nexport type TMemoryPermissions = z.infer<typeof memoryPermissionsSchema>;\n\nexport const agentPermissionsSchema = z.object({\n  [Permissions.SHARED_GLOBAL]: z.boolean().default(false),\n  [Permissions.USE]: z.boolean().default(true),\n  [Permissions.CREATE]: z.boolean().default(true),\n  // [Permissions.SHARE]: z.boolean().default(false),\n});\nexport type TAgentPermissions = z.infer<typeof agentPermissionsSchema>;\n\nexport const multiConvoPermissionsSchema = z.object({\n  [Permissions.USE]: z.boolean().default(true),\n});\nexport type TMultiConvoPermissions = z.infer<typeof multiConvoPermissionsSchema>;\n\nexport const temporaryChatPermissionsSchema = z.object({\n  [Permissions.USE]: z.boolean().default(true),\n});\nexport type TTemporaryChatPermissions = z.infer<typeof temporaryChatPermissionsSchema>;\n\nexport const runCodePermissionsSchema = z.object({\n  [Permissions.USE]: z.boolean().default(true),\n});\nexport type TRunCodePermissions = z.infer<typeof runCodePermissionsSchema>;\n\nexport const webSearchPermissionsSchema = z.object({\n  [Permissions.USE]: z.boolean().default(true),\n});\nexport type TWebSearchPermissions = z.infer<typeof webSearchPermissionsSchema>;\n\n// Define a single permissions schema that holds all permission types.\nexport const permissionsSchema = z.object({\n  [PermissionTypes.PROMPTS]: promptPermissionsSchema,\n  [PermissionTypes.BOOKMARKS]: bookmarkPermissionsSchema,\n  [PermissionTypes.MEMORIES]: memoryPermissionsSchema,\n  [PermissionTypes.AGENTS]: agentPermissionsSchema,\n  [PermissionTypes.MULTI_CONVO]: multiConvoPermissionsSchema,\n  [PermissionTypes.TEMPORARY_CHAT]: temporaryChatPermissionsSchema,\n  [PermissionTypes.RUN_CODE]: runCodePermissionsSchema,\n  [PermissionTypes.WEB_SEARCH]: webSearchPermissionsSchema,\n});\n","import { z } from 'zod';\nimport {\n  Permissions,\n  PermissionTypes,\n  permissionsSchema,\n  agentPermissionsSchema,\n  promptPermissionsSchema,\n  memoryPermissionsSchema,\n  runCodePermissionsSchema,\n  webSearchPermissionsSchema,\n  bookmarkPermissionsSchema,\n  multiConvoPermissionsSchema,\n  temporaryChatPermissionsSchema,\n} from './permissions';\n\n/**\n * Enum for System Defined Roles\n */\nexport enum SystemRoles {\n  /**\n   * The Admin role\n   */\n  ADMIN = 'ADMIN',\n  /**\n   * The default user role\n   */\n  USER = 'USER',\n}\n\n// The role schema now only needs to reference the permissions schema.\nexport const roleSchema = z.object({\n  name: z.string(),\n  permissions: permissionsSchema,\n});\n\nexport type TRole = z.infer<typeof roleSchema>;\n\n// Define default roles using the new structure.\nconst defaultRolesSchema = z.object({\n  [SystemRoles.ADMIN]: roleSchema.extend({\n    name: z.literal(SystemRoles.ADMIN),\n    permissions: permissionsSchema.extend({\n      [PermissionTypes.PROMPTS]: promptPermissionsSchema.extend({\n        [Permissions.SHARED_GLOBAL]: z.boolean().default(true),\n        [Permissions.USE]: z.boolean().default(true),\n        [Permissions.CREATE]: z.boolean().default(true),\n        // [Permissions.SHARE]: z.boolean().default(true),\n      }),\n      [PermissionTypes.BOOKMARKS]: bookmarkPermissionsSchema.extend({\n        [Permissions.USE]: z.boolean().default(true),\n      }),\n      [PermissionTypes.MEMORIES]: memoryPermissionsSchema.extend({\n        [Permissions.USE]: z.boolean().default(true),\n        [Permissions.CREATE]: z.boolean().default(true),\n        [Permissions.UPDATE]: z.boolean().default(true),\n        [Permissions.READ]: z.boolean().default(true),\n        [Permissions.OPT_OUT]: z.boolean().default(true),\n      }),\n      [PermissionTypes.AGENTS]: agentPermissionsSchema.extend({\n        [Permissions.SHARED_GLOBAL]: z.boolean().default(true),\n        [Permissions.USE]: z.boolean().default(true),\n        [Permissions.CREATE]: z.boolean().default(true),\n        // [Permissions.SHARE]: z.boolean().default(true),\n      }),\n      [PermissionTypes.MULTI_CONVO]: multiConvoPermissionsSchema.extend({\n        [Permissions.USE]: z.boolean().default(true),\n      }),\n      [PermissionTypes.TEMPORARY_CHAT]: temporaryChatPermissionsSchema.extend({\n        [Permissions.USE]: z.boolean().default(true),\n      }),\n      [PermissionTypes.RUN_CODE]: runCodePermissionsSchema.extend({\n        [Permissions.USE]: z.boolean().default(true),\n      }),\n      [PermissionTypes.WEB_SEARCH]: webSearchPermissionsSchema.extend({\n        [Permissions.USE]: z.boolean().default(true),\n      }),\n    }),\n  }),\n  [SystemRoles.USER]: roleSchema.extend({\n    name: z.literal(SystemRoles.USER),\n    permissions: permissionsSchema,\n  }),\n});\n\nexport const roleDefaults = defaultRolesSchema.parse({\n  [SystemRoles.ADMIN]: {\n    name: SystemRoles.ADMIN,\n    permissions: {\n      [PermissionTypes.PROMPTS]: {\n        [Permissions.SHARED_GLOBAL]: true,\n        [Permissions.USE]: true,\n        [Permissions.CREATE]: true,\n      },\n      [PermissionTypes.BOOKMARKS]: {\n        [Permissions.USE]: true,\n      },\n      [PermissionTypes.MEMORIES]: {\n        [Permissions.USE]: true,\n        [Permissions.CREATE]: true,\n        [Permissions.UPDATE]: true,\n        [Permissions.READ]: true,\n        [Permissions.OPT_OUT]: true,\n      },\n      [PermissionTypes.AGENTS]: {\n        [Permissions.SHARED_GLOBAL]: true,\n        [Permissions.USE]: true,\n        [Permissions.CREATE]: true,\n      },\n      [PermissionTypes.MULTI_CONVO]: {\n        [Permissions.USE]: true,\n      },\n      [PermissionTypes.TEMPORARY_CHAT]: {\n        [Permissions.USE]: true,\n      },\n      [PermissionTypes.RUN_CODE]: {\n        [Permissions.USE]: true,\n      },\n      [PermissionTypes.WEB_SEARCH]: {\n        [Permissions.USE]: true,\n      },\n    },\n  },\n  [SystemRoles.USER]: {\n    name: SystemRoles.USER,\n    permissions: {\n      [PermissionTypes.PROMPTS]: {},\n      [PermissionTypes.BOOKMARKS]: {},\n      [PermissionTypes.MEMORIES]: {},\n      [PermissionTypes.AGENTS]: {},\n      [PermissionTypes.MULTI_CONVO]: {},\n      [PermissionTypes.TEMPORARY_CHAT]: {},\n      [PermissionTypes.RUN_CODE]: {},\n      [PermissionTypes.WEB_SEARCH]: {},\n    },\n  },\n});\n","import type { Logger as WinstonLogger } from 'winston';\nimport type { RunnableConfig } from '@langchain/core/runnables';\n\nexport type SearchRefType = 'search' | 'image' | 'news' | 'video' | 'ref';\n\nexport enum DATE_RANGE {\n  PAST_HOUR = 'h',\n  PAST_24_HOURS = 'd',\n  PAST_WEEK = 'w',\n  PAST_MONTH = 'm',\n  PAST_YEAR = 'y',\n}\n\nexport type SearchProvider = 'serper' | 'searxng';\nexport type RerankerType = 'infinity' | 'jina' | 'cohere' | 'none';\n\nexport interface Highlight {\n  score: number;\n  text: string;\n  references?: UsedReferences;\n}\n\nexport type ProcessedSource = {\n  content?: string;\n  attribution?: string;\n  references?: References;\n  highlights?: Highlight[];\n  processed?: boolean;\n};\n\nexport type ProcessedOrganic = OrganicResult & ProcessedSource;\nexport type ProcessedTopStory = TopStoryResult & ProcessedSource;\nexport type ValidSource = ProcessedOrganic | ProcessedTopStory;\n\nexport type ResultReference = {\n  link: string;\n  type: 'link' | 'image' | 'video';\n  title?: string;\n  attribution?: string;\n};\nexport interface SearchResultData {\n  turn?: number;\n  organic?: ProcessedOrganic[];\n  topStories?: ProcessedTopStory[];\n  images?: ImageResult[];\n  videos?: VideoResult[];\n  places?: PlaceResult[];\n  news?: NewsResult[];\n  shopping?: ShoppingResult[];\n  knowledgeGraph?: KnowledgeGraphResult;\n  answerBox?: AnswerBoxResult;\n  peopleAlsoAsk?: PeopleAlsoAskResult[];\n  relatedSearches?: Array<{ query: string }>;\n  references?: ResultReference[];\n  error?: string;\n}\n\nexport interface SearchResult {\n  data?: SearchResultData;\n  error?: string;\n  success: boolean;\n}\n\nexport interface Source {\n  link: string;\n  html?: string;\n  title?: string;\n  snippet?: string;\n  date?: string;\n}\n\nexport interface SearchConfig {\n  searchProvider?: SearchProvider;\n  serperApiKey?: string;\n  searxngInstanceUrl?: string;\n  searxngApiKey?: string;\n}\n\nexport type References = {\n  links: MediaReference[];\n  images: MediaReference[];\n  videos: MediaReference[];\n};\nexport interface ScrapeResult {\n  url: string;\n  error?: boolean;\n  content: string;\n  attribution?: string;\n  references?: References;\n  highlights?: Highlight[];\n}\n\nexport interface ProcessSourcesConfig {\n  topResults?: number;\n  strategies?: string[];\n  filterContent?: boolean;\n  reranker?: unknown;\n  logger?: Logger;\n}\n\nexport interface FirecrawlConfig {\n  firecrawlApiKey?: string;\n  firecrawlApiUrl?: string;\n  firecrawlFormats?: string[];\n}\n\nexport interface ScraperContentResult {\n  content: string;\n}\n\nexport interface ScraperExtractionResult {\n  no_extraction: ScraperContentResult;\n}\n\nexport interface JinaRerankerResult {\n  index: number;\n  relevance_score: number;\n  document?: string | { text: string };\n}\n\nexport interface JinaRerankerResponse {\n  model: string;\n  usage: {\n    total_tokens: number;\n  };\n  results: JinaRerankerResult[];\n}\n\nexport interface CohereRerankerResult {\n  index: number;\n  relevance_score: number;\n}\n\nexport interface CohereRerankerResponse {\n  results: CohereRerankerResult[];\n  id: string;\n  meta: {\n    api_version: {\n      version: string;\n      is_experimental: boolean;\n    };\n    billed_units: {\n      search_units: number;\n    };\n  };\n}\n\nexport type SafeSearchLevel = 0 | 1 | 2;\n\nexport type Logger = WinstonLogger;\nexport interface SearchToolConfig extends SearchConfig, ProcessSourcesConfig, FirecrawlConfig {\n  logger?: Logger;\n  safeSearch?: SafeSearchLevel;\n  jinaApiKey?: string;\n  cohereApiKey?: string;\n  rerankerType?: RerankerType;\n  onSearchResults?: (results: SearchResult, runnableConfig?: RunnableConfig) => void;\n  onGetHighlights?: (link: string) => void;\n}\nexport interface MediaReference {\n  originalUrl: string;\n  title?: string;\n  text?: string;\n}\n\nexport type UsedReferences = {\n  type: 'link' | 'image' | 'video';\n  originalIndex: number;\n  reference: MediaReference;\n}[];\n\n/** Firecrawl */\n\nexport interface FirecrawlScrapeOptions {\n  formats?: string[];\n  includeTags?: string[];\n  excludeTags?: string[];\n  headers?: Record<string, string>;\n  waitFor?: number;\n  timeout?: number;\n}\n\nexport interface ScrapeMetadata {\n  // Core source information\n  sourceURL?: string;\n  url?: string;\n  scrapeId?: string;\n  statusCode?: number;\n  // Basic metadata\n  title?: string;\n  description?: string;\n  language?: string;\n  favicon?: string;\n  viewport?: string;\n  robots?: string;\n  'theme-color'?: string;\n  // Open Graph metadata\n  'og:url'?: string;\n  'og:title'?: string;\n  'og:description'?: string;\n  'og:type'?: string;\n  'og:image'?: string;\n  'og:image:width'?: string;\n  'og:image:height'?: string;\n  'og:site_name'?: string;\n  ogUrl?: string;\n  ogTitle?: string;\n  ogDescription?: string;\n  ogImage?: string;\n  ogSiteName?: string;\n  // Article metadata\n  'article:author'?: string;\n  'article:published_time'?: string;\n  'article:modified_time'?: string;\n  'article:section'?: string;\n  'article:tag'?: string;\n  'article:publisher'?: string;\n  publishedTime?: string;\n  modifiedTime?: string;\n  // Twitter metadata\n  'twitter:site'?: string | boolean | number | null;\n  'twitter:creator'?: string;\n  'twitter:card'?: string;\n  'twitter:image'?: string;\n  'twitter:dnt'?: string;\n  'twitter:app:name:iphone'?: string;\n  'twitter:app:id:iphone'?: string;\n  'twitter:app:url:iphone'?: string;\n  'twitter:app:name:ipad'?: string;\n  'twitter:app:id:ipad'?: string;\n  'twitter:app:url:ipad'?: string;\n  'twitter:app:name:googleplay'?: string;\n  'twitter:app:id:googleplay'?: string;\n  'twitter:app:url:googleplay'?: string;\n  // Facebook metadata\n  'fb:app_id'?: string;\n  // App links\n  'al:ios:url'?: string;\n  'al:ios:app_name'?: string;\n  'al:ios:app_store_id'?: string;\n  // Allow for additional properties that might be present\n  [key: string]: string | number | boolean | null | undefined;\n}\n\nexport interface FirecrawlScrapeResponse {\n  success: boolean;\n  data?: {\n    markdown?: string;\n    html?: string;\n    rawHtml?: string;\n    screenshot?: string;\n    links?: string[];\n    metadata?: ScrapeMetadata;\n  };\n  error?: string;\n}\n\nexport interface FirecrawlScraperConfig {\n  apiKey?: string;\n  apiUrl?: string;\n  formats?: string[];\n  timeout?: number;\n  logger?: Logger;\n}\n\nexport type GetSourcesParams = {\n  query: string;\n  date?: DATE_RANGE;\n  country?: string;\n  numResults?: number;\n  safeSearch?: SearchToolConfig['safeSearch'];\n  images?: boolean;\n  videos?: boolean;\n  news?: boolean;\n  type?: 'search' | 'images' | 'videos' | 'news';\n};\n\n/** Serper API */\nexport interface VideoResult {\n  title?: string;\n  link?: string;\n  snippet?: string;\n  imageUrl?: string;\n  duration?: string;\n  source?: string;\n  channel?: string;\n  date?: string;\n  position?: number;\n}\n\nexport interface PlaceResult {\n  position?: number;\n  name?: string;\n  address?: string;\n  latitude?: number;\n  longitude?: number;\n  rating?: number;\n  ratingCount?: number;\n  category?: string;\n  identifier?: string;\n}\n\nexport interface NewsResult {\n  title?: string;\n  link?: string;\n  snippet?: string;\n  date?: string;\n  source?: string;\n  imageUrl?: string;\n  position?: number;\n}\n\nexport interface ShoppingResult {\n  title?: string;\n  source?: string;\n  link?: string;\n  price?: string;\n  delivery?: string;\n  imageUrl?: string;\n  rating?: number;\n  ratingCount?: number;\n  offers?: string;\n  productId?: string;\n  position?: number;\n}\n\nexport interface ScholarResult {\n  title?: string;\n  link?: string;\n  publicationInfo?: string;\n  snippet?: string;\n  year?: number;\n  citedBy?: number;\n}\n\nexport interface ImageResult {\n  title?: string;\n  imageUrl?: string;\n  imageWidth?: number;\n  imageHeight?: number;\n  thumbnailUrl?: string;\n  thumbnailWidth?: number;\n  thumbnailHeight?: number;\n  source?: string;\n  domain?: string;\n  link?: string;\n  googleUrl?: string;\n  position?: number;\n}\n\nexport interface SerperSearchPayload extends SerperSearchInput {\n  /**\n   * Search type/vertical\n   * Options: \"search\" (web), \"images\", \"news\", \"places\", \"videos\"\n   */\n  type?: 'search' | 'images' | 'news' | 'places' | 'videos';\n\n  /**\n   * Starting index for search results pagination (used instead of page)\n   */\n  start?: number;\n\n  /**\n   * Filtering for safe search\n   * Options: \"off\", \"moderate\", \"active\"\n   */\n  safe?: 'off' | 'moderate' | 'active';\n}\n\nexport type SerperSearchParameters = Pick<SerperSearchPayload, 'q' | 'type'> & {\n  engine: 'google';\n};\n\nexport interface OrganicResult {\n  position?: number;\n  title?: string;\n  link: string;\n  snippet?: string;\n  date?: string;\n  sitelinks?: Array<{\n    title: string;\n    link: string;\n  }>;\n}\n\nexport interface TopStoryResult {\n  title?: string;\n  link: string;\n  source?: string;\n  date?: string;\n  imageUrl?: string;\n}\nexport interface KnowledgeGraphResult {\n  title?: string;\n  type?: string;\n  imageUrl?: string;\n  description?: string;\n  descriptionSource?: string;\n  descriptionLink?: string;\n  attributes?: Record<string, string>;\n  website?: string;\n}\n\nexport interface AnswerBoxResult {\n  title?: string;\n  snippet?: string;\n  snippetHighlighted?: string[];\n  link?: string;\n  date?: string;\n}\n\nexport interface PeopleAlsoAskResult {\n  question?: string;\n  snippet?: string;\n  title?: string;\n  link?: string;\n}\n\nexport type RelatedSearches = Array<{ query: string }>;\n\nexport interface SerperSearchInput {\n  /**\n   * The search query string\n   */\n  q: string;\n\n  /**\n   * Country code for localized results\n   * Examples: \"us\", \"uk\", \"ca\", \"de\", etc.\n   */\n  gl?: string;\n\n  /**\n   * Interface language\n   * Examples: \"en\", \"fr\", \"de\", etc.\n   */\n  hl?: string;\n\n  /**\n   * Number of results to return (up to 100)\n   */\n  num?: number;\n  /**\n   * Specific location for contextual results\n   * Example: \"New York, NY\"\n   */\n  location?: string;\n\n  /**\n   * Search autocorrection setting\n   */\n  autocorrect?: boolean;\n  page?: number;\n  /**\n   * Date range for search results\n   * Options: \"h\" (past hour), \"d\" (past 24 hours), \"w\" (past week),\n   * \"m\" (past month), \"y\" (past year)\n   * `qdr:${DATE_RANGE}`\n   */\n  tbs?: string;\n}\n\nexport type SerperResultData = {\n  searchParameters: SerperSearchPayload;\n  organic?: OrganicResult[];\n  topStories?: TopStoryResult[];\n  images?: ImageResult[];\n  videos?: VideoResult[];\n  places?: PlaceResult[];\n  news?: NewsResult[];\n  shopping?: ShoppingResult[];\n  peopleAlsoAsk?: PeopleAlsoAskResult[];\n  relatedSearches?: RelatedSearches;\n  knowledgeGraph?: KnowledgeGraphResult;\n  answerBox?: AnswerBoxResult;\n  credits?: number;\n};\n\n/** SearXNG */\n\nexport interface SearxNGSearchPayload {\n  /**\n   * The search query string\n   * Supports syntax specific to different search engines\n   * Example: \"site:github.com SearXNG\"\n   */\n  q: string;\n\n  /**\n   * Comma-separated list of search categories\n   * Example: \"general,images,news\"\n   */\n  categories?: string;\n\n  /**\n   * Comma-separated list of search engines to use\n   * Example: \"google,bing,duckduckgo\"\n   */\n  engines?: string;\n\n  /**\n   * Code of the language for search results\n   * Example: \"en\", \"fr\", \"de\", \"es\"\n   */\n  language?: string;\n\n  /**\n   * Search page number\n   * Default: 1\n   */\n  pageno?: number;\n\n  /**\n   * Time range filter for search results\n   * Options: \"day\", \"month\", \"year\"\n   */\n  time_range?: 'day' | 'month' | 'year';\n\n  /**\n   * Output format of results\n   * Options: \"json\", \"csv\", \"rss\"\n   */\n  format?: 'json' | 'csv' | 'rss';\n\n  /**\n   * Open search results on new tab\n   * Options: `0` (off), `1` (on)\n   */\n  results_on_new_tab?: 0 | 1;\n\n  /**\n   * Proxy image results through SearxNG\n   * Options: true, false\n   */\n  image_proxy?: boolean;\n\n  /**\n   * Service for autocomplete suggestions\n   * Options: \"google\", \"dbpedia\", \"duckduckgo\", \"mwmbl\",\n   *          \"startpage\", \"wikipedia\", \"stract\", \"swisscows\", \"qwant\"\n   */\n  autocomplete?: string;\n\n  /**\n   * Safe search filtering level\n   * Options: \"0\" (off), \"1\" (moderate), \"2\" (strict)\n   */\n  safesearch?: 0 | 1 | 2;\n\n  /**\n   * Theme to use for results page\n   * Default: \"simple\" (other themes may be available per instance)\n   */\n  theme?: string;\n\n  /**\n   * List of enabled plugins\n   * Default: \"Hash_plugin,Self_Information,Tracker_URL_remover,Ahmia_blacklist\"\n   */\n  enabled_plugins?: string;\n\n  /**\n   * List of disabled plugins\n   */\n  disabled_plugins?: string;\n\n  /**\n   * List of enabled engines\n   */\n  enabled_engines?: string;\n\n  /**\n   * List of disabled engines\n   */\n  disabled_engines?: string;\n}\n\nexport interface SearXNGResult {\n  title?: string;\n  url?: string;\n  content?: string;\n  publishedDate?: string;\n  img_src?: string;\n}\n\nexport type ProcessSourcesFields = {\n  result: SearchResult;\n  numElements: number;\n  query: string;\n  news: boolean;\n  proMode: boolean;\n  onGetHighlights: SearchToolConfig['onGetHighlights'];\n};\n","export enum QueryKeys {\n  messages = 'messages',\n  sharedMessages = 'sharedMessages',\n  sharedLinks = 'sharedLinks',\n  allConversations = 'allConversations',\n  archivedConversations = 'archivedConversations',\n  searchConversations = 'searchConversations',\n  conversation = 'conversation',\n  searchEnabled = 'searchEnabled',\n  user = 'user',\n  name = 'name', // user key name\n  models = 'models',\n  balance = 'balance',\n  endpoints = 'endpoints',\n  presets = 'presets',\n  searchResults = 'searchResults',\n  tokenCount = 'tokenCount',\n  availablePlugins = 'availablePlugins',\n  startupConfig = 'startupConfig',\n  assistants = 'assistants',\n  assistant = 'assistant',\n  agents = 'agents',\n  agent = 'agent',\n  endpointsConfigOverride = 'endpointsConfigOverride',\n  files = 'files',\n  fileConfig = 'fileConfig',\n  tools = 'tools',\n  toolAuth = 'toolAuth',\n  toolCalls = 'toolCalls',\n  agentTools = 'agentTools',\n  actions = 'actions',\n  assistantDocs = 'assistantDocs',\n  agentDocs = 'agentDocs',\n  fileDownload = 'fileDownload',\n  voices = 'voices',\n  customConfigSpeech = 'customConfigSpeech',\n  prompts = 'prompts',\n  prompt = 'prompt',\n  promptGroups = 'promptGroups',\n  allPromptGroups = 'allPromptGroups',\n  promptGroup = 'promptGroup',\n  categories = 'categories',\n  randomPrompts = 'randomPrompts',\n  roles = 'roles',\n  conversationTags = 'conversationTags',\n  health = 'health',\n  userTerms = 'userTerms',\n  banner = 'banner',\n  /* Memories */\n  memories = 'memories',\n  /* Brand Mode */\n  brandConfig = 'brandConfig',\n}\n\nexport enum MutationKeys {\n  fileUpload = 'fileUpload',\n  fileDelete = 'fileDelete',\n  updatePreset = 'updatePreset',\n  deletePreset = 'deletePreset',\n  loginUser = 'loginUser',\n  logoutUser = 'logoutUser',\n  refreshToken = 'refreshToken',\n  avatarUpload = 'avatarUpload',\n  speechToText = 'speechToText',\n  textToSpeech = 'textToSpeech',\n  assistantAvatarUpload = 'assistantAvatarUpload',\n  agentAvatarUpload = 'agentAvatarUpload',\n  updateAction = 'updateAction',\n  updateAgentAction = 'updateAgentAction',\n  deleteAction = 'deleteAction',\n  deleteAgentAction = 'deleteAgentAction',\n  revertAgentVersion = 'revertAgentVersion',\n  deleteUser = 'deleteUser',\n  updateRole = 'updateRole',\n  enableTwoFactor = 'enableTwoFactor',\n  verifyTwoFactor = 'verifyTwoFactor',\n  updateMemoryPreferences = 'updateMemoryPreferences',\n}\n","import axios from 'axios';\n\nexport function setAcceptLanguageHeader(value: string): void {\n  axios.defaults.headers.common['Accept-Language'] = value;\n}\n\nexport function setTokenHeader(token: string) {\n  axios.defaults.headers.common['Authorization'] = 'Bearer ' + token;\n}\n","import type { AssistantsEndpoint } from './schemas';\nimport * as q from './types/queries';\n\n// Testing this buildQuery function\nconst buildQuery = (params: Record<string, unknown>): string => {\n  const query = Object.entries(params)\n    .filter(([, value]) => {\n      if (Array.isArray(value)) {\n        return value.length > 0;\n      }\n      return value !== undefined && value !== null && value !== '';\n    })\n    .map(([key, value]) => {\n      if (Array.isArray(value)) {\n        return value.map((v) => `${key}=${encodeURIComponent(v)}`).join('&');\n      }\n      return `${key}=${encodeURIComponent(String(value))}`;\n    })\n    .join('&');\n  return query ? `?${query}` : '';\n};\n\nexport const health = () => '/health';\nexport const user = () => '/api/user';\n\nexport const balance = () => '/api/balance';\n\nexport const userPlugins = () => '/api/user/plugins';\n\nexport const deleteUser = () => '/api/user/delete';\n\nexport const messages = (params: q.MessagesListParams) => {\n  const { conversationId, messageId, ...rest } = params;\n\n  if (conversationId && messageId) {\n    return `/api/messages/${conversationId}/${messageId}`;\n  }\n\n  if (conversationId) {\n    return `/api/messages/${conversationId}`;\n  }\n\n  return `/api/messages${buildQuery(rest)}`;\n};\n\nconst shareRoot = '/api/share';\nexport const shareMessages = (shareId: string) => `${shareRoot}/${shareId}`;\nexport const getSharedLink = (conversationId: string) => `${shareRoot}/link/${conversationId}`;\nexport const getSharedLinks = (\n  pageSize: number,\n  isPublic: boolean,\n  sortBy: 'title' | 'createdAt',\n  sortDirection: 'asc' | 'desc',\n  search?: string,\n  cursor?: string,\n) =>\n  `${shareRoot}?pageSize=${pageSize}&isPublic=${isPublic}&sortBy=${sortBy}&sortDirection=${sortDirection}${\n    search ? `&search=${search}` : ''\n  }${cursor ? `&cursor=${cursor}` : ''}`;\nexport const createSharedLink = (conversationId: string) => `${shareRoot}/${conversationId}`;\nexport const updateSharedLink = (shareId: string) => `${shareRoot}/${shareId}`;\n\nconst keysEndpoint = '/api/keys';\n\nexport const keys = () => keysEndpoint;\n\nexport const userKeyQuery = (name: string) => `${keysEndpoint}?name=${name}`;\n\nexport const revokeUserKey = (name: string) => `${keysEndpoint}/${name}`;\n\nexport const revokeAllUserKeys = () => `${keysEndpoint}?all=true`;\n\nexport const conversationsRoot = '/api/convos';\n\nexport const conversations = (params: q.ConversationListParams) => {\n  return `${conversationsRoot}${buildQuery(params)}`;\n};\n\nexport const conversationById = (id: string) => `${conversationsRoot}/${id}`;\n\nexport const genTitle = () => `${conversationsRoot}/gen_title`;\n\nexport const updateConversation = () => `${conversationsRoot}/update`;\n\nexport const deleteConversation = () => `${conversationsRoot}`;\n\nexport const deleteAllConversation = () => `${conversationsRoot}/all`;\n\nexport const importConversation = () => `${conversationsRoot}/import`;\n\nexport const forkConversation = () => `${conversationsRoot}/fork`;\n\nexport const duplicateConversation = () => `${conversationsRoot}/duplicate`;\n\nexport const search = (q: string, cursor?: string | null) =>\n  `/api/search?q=${q}${cursor ? `&cursor=${cursor}` : ''}`;\n\nexport const searchEnabled = () => '/api/search/enable';\n\nexport const presets = () => '/api/presets';\n\nexport const deletePreset = () => '/api/presets/delete';\n\nexport const aiEndpoints = () => '/api/endpoints';\n\nexport const endpointsConfigOverride = () => '/api/endpoints/config/override';\n\nexport const models = () => '/api/models';\n\nexport const tokenizer = () => '/api/tokenizer';\n\nexport const login = () => '/api/auth/login';\n\nexport const logout = () => '/api/auth/logout';\n\nexport const register = () => '/api/auth/register';\n\nexport const loginFacebook = () => '/api/auth/facebook';\n\nexport const loginGoogle = () => '/api/auth/google';\n\nexport const refreshToken = (retry?: boolean) =>\n  `/api/auth/refresh${retry === true ? '?retry=true' : ''}`;\n\nexport const requestPasswordReset = () => '/api/auth/requestPasswordReset';\n\nexport const resetPassword = () => '/api/auth/resetPassword';\n\nexport const verifyEmail = () => '/api/user/verify';\n\nexport const resendVerificationEmail = () => '/api/user/verify/resend';\n\nexport const plugins = () => '/api/plugins';\n\nexport const config = () => '/api/config';\n\nexport const prompts = () => '/api/prompts';\n\nexport const assistants = ({\n  path = '',\n  options,\n  version,\n  endpoint,\n  isAvatar,\n}: {\n  path?: string;\n  options?: object;\n  endpoint?: AssistantsEndpoint;\n  version: number | string;\n  isAvatar?: boolean;\n}) => {\n  let url = isAvatar === true ? `${images()}/assistants` : `/api/assistants/v${version}`;\n\n  if (path && path !== '') {\n    url += `/${path}`;\n  }\n\n  if (endpoint) {\n    options = {\n      ...(options ?? {}),\n      endpoint,\n    };\n  }\n\n  if (options && Object.keys(options).length > 0) {\n    const queryParams = new URLSearchParams(options as Record<string, string>).toString();\n    url += `?${queryParams}`;\n  }\n\n  return url;\n};\n\nexport const agents = ({ path = '', options }: { path?: string; options?: object }) => {\n  let url = '/api/agents';\n\n  if (path && path !== '') {\n    url += `/${path}`;\n  }\n\n  if (options && Object.keys(options).length > 0) {\n    const queryParams = new URLSearchParams(options as Record<string, string>).toString();\n    url += `?${queryParams}`;\n  }\n\n  return url;\n};\n\nexport const revertAgentVersion = (agent_id: string) => `${agents({ path: `${agent_id}/revert` })}`;\n\nexport const files = () => '/api/files';\n\nexport const images = () => `${files()}/images`;\n\nexport const avatar = () => `${images()}/avatar`;\n\nexport const speech = () => `${files()}/speech`;\n\nexport const speechToText = () => `${speech()}/stt`;\n\nexport const textToSpeech = () => `${speech()}/tts`;\n\nexport const textToSpeechManual = () => `${textToSpeech()}/manual`;\n\nexport const textToSpeechVoices = () => `${textToSpeech()}/voices`;\n\nexport const getCustomConfigSpeech = () => `${speech()}/config/get`;\n\nexport const getPromptGroup = (_id: string) => `${prompts()}/groups/${_id}`;\n\nexport const getPromptGroupsWithFilters = (filter: object) => {\n  let url = `${prompts()}/groups`;\n  if (Object.keys(filter).length > 0) {\n    const queryParams = new URLSearchParams(filter as Record<string, string>).toString();\n    url += `?${queryParams}`;\n  }\n  return url;\n};\n\nexport const getPromptsWithFilters = (filter: object) => {\n  let url = prompts();\n  if (Object.keys(filter).length > 0) {\n    const queryParams = new URLSearchParams(filter as Record<string, string>).toString();\n    url += `?${queryParams}`;\n  }\n  return url;\n};\n\nexport const getPrompt = (_id: string) => `${prompts()}/${_id}`;\n\nexport const getRandomPrompts = (limit: number, skip: number) =>\n  `${prompts()}/random?limit=${limit}&skip=${skip}`;\n\nexport const postPrompt = prompts;\n\nexport const updatePromptGroup = getPromptGroup;\n\nexport const updatePromptLabels = (_id: string) => `${getPrompt(_id)}/labels`;\n\nexport const updatePromptTag = (_id: string) => `${getPrompt(_id)}/tags/production`;\n\nexport const deletePromptGroup = getPromptGroup;\n\nexport const deletePrompt = ({ _id, groupId }: { _id: string; groupId: string }) => {\n  return `${prompts()}/${_id}?groupId=${groupId}`;\n};\n\nexport const getCategories = () => '/api/categories';\n\nexport const getAllPromptGroups = () => `${prompts()}/all`;\n\n/* Roles */\nexport const roles = () => '/api/roles';\nexport const getRole = (roleName: string) => `${roles()}/${roleName.toLowerCase()}`;\nexport const updatePromptPermissions = (roleName: string) => `${getRole(roleName)}/prompts`;\nexport const updateMemoryPermissions = (roleName: string) => `${getRole(roleName)}/memories`;\nexport const updateAgentPermissions = (roleName: string) => `${getRole(roleName)}/agents`;\n\n/* Conversation Tags */\nexport const conversationTags = (tag?: string) =>\n  `/api/tags${tag != null && tag ? `/${encodeURIComponent(tag)}` : ''}`;\n\nexport const conversationTagsList = (pageNumber: string, sort?: string, order?: string) =>\n  `${conversationTags()}/list?pageNumber=${pageNumber}${sort ? `&sort=${sort}` : ''}${\n    order ? `&order=${order}` : ''\n  }`;\n\nexport const addTagToConversation = (conversationId: string) =>\n  `${conversationTags()}/convo/${conversationId}`;\n\nexport const userTerms = () => '/api/user/terms';\nexport const acceptUserTerms = () => '/api/user/terms/accept';\nexport const banner = () => '/api/banner';\n\n// Message Feedback\nexport const feedback = (conversationId: string, messageId: string) =>\n  `/api/messages/${conversationId}/${messageId}/feedback`;\n\n// Two-Factor Endpoints\nexport const enableTwoFactor = () => '/api/auth/2fa/enable';\nexport const verifyTwoFactor = () => '/api/auth/2fa/verify';\nexport const confirmTwoFactor = () => '/api/auth/2fa/confirm';\nexport const disableTwoFactor = () => '/api/auth/2fa/disable';\nexport const regenerateBackupCodes = () => '/api/auth/2fa/backup/regenerate';\nexport const verifyTwoFactorTemp = () => '/api/auth/2fa/verify-temp';\n\n/* Memories */\nexport const memories = () => '/api/memories';\nexport const memory = (key: string) => `${memories()}/${encodeURIComponent(key)}`;\nexport const memoryPreferences = () => `${memories()}/preferences`;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport axios, { AxiosError, AxiosRequestConfig } from 'axios';\nimport * as endpoints from './api-endpoints';\nimport { setTokenHeader } from './headers-helpers';\nimport type * as t from './types';\n\nasync function _get<T>(url: string, options?: AxiosRequestConfig): Promise<T> {\n  const response = await axios.get(url, { ...options });\n  return response.data;\n}\n\nasync function _getResponse<T>(url: string, options?: AxiosRequestConfig): Promise<T> {\n  return await axios.get(url, { ...options });\n}\n\nasync function _post(url: string, data?: any) {\n  const response = await axios.post(url, JSON.stringify(data), {\n    headers: { 'Content-Type': 'application/json' },\n  });\n  return response.data;\n}\n\nasync function _postMultiPart(url: string, formData: FormData, options?: AxiosRequestConfig) {\n  const response = await axios.post(url, formData, {\n    ...options,\n    headers: { 'Content-Type': 'multipart/form-data' },\n  });\n  return response.data;\n}\n\nasync function _postTTS(url: string, formData: FormData, options?: AxiosRequestConfig) {\n  const response = await axios.post(url, formData, {\n    ...options,\n    headers: { 'Content-Type': 'multipart/form-data' },\n    responseType: 'arraybuffer',\n  });\n  return response.data;\n}\n\nasync function _put(url: string, data?: any) {\n  const response = await axios.put(url, JSON.stringify(data), {\n    headers: { 'Content-Type': 'application/json' },\n  });\n  return response.data;\n}\n\nasync function _delete<T>(url: string): Promise<T> {\n  const response = await axios.delete(url);\n  return response.data;\n}\n\nasync function _deleteWithOptions<T>(url: string, options?: AxiosRequestConfig): Promise<T> {\n  const response = await axios.delete(url, { ...options });\n  return response.data;\n}\n\nasync function _patch(url: string, data?: any) {\n  const response = await axios.patch(url, JSON.stringify(data), {\n    headers: { 'Content-Type': 'application/json' },\n  });\n  return response.data;\n}\n\nlet isRefreshing = false;\nlet failedQueue: { resolve: (value?: any) => void; reject: (reason?: any) => void }[] = [];\n\nconst refreshToken = (retry?: boolean): Promise<t.TRefreshTokenResponse | undefined> =>\n  _post(endpoints.refreshToken(retry));\n\nconst dispatchTokenUpdatedEvent = (token: string) => {\n  setTokenHeader(token);\n  window.dispatchEvent(new CustomEvent('tokenUpdated', { detail: token }));\n};\n\nconst processQueue = (error: AxiosError | null, token: string | null = null) => {\n  failedQueue.forEach((prom) => {\n    if (error) {\n      prom.reject(error);\n    } else {\n      prom.resolve(token);\n    }\n  });\n  failedQueue = [];\n};\n\naxios.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    const originalRequest = error.config;\n    if (!error.response) {\n      return Promise.reject(error);\n    }\n\n    if (originalRequest.url?.includes('/api/auth/2fa') === true) {\n      return Promise.reject(error);\n    }\n    if (originalRequest.url?.includes('/api/auth/logout') === true) {\n      return Promise.reject(error);\n    }\n\n    if (error.response.status === 401 && !originalRequest._retry) {\n      console.warn('401 error, refreshing token');\n      originalRequest._retry = true;\n\n      if (isRefreshing) {\n        try {\n          const token = await new Promise((resolve, reject) => {\n            failedQueue.push({ resolve, reject });\n          });\n          originalRequest.headers['Authorization'] = 'Bearer ' + token;\n          return await axios(originalRequest);\n        } catch (err) {\n          return Promise.reject(err);\n        }\n      }\n\n      isRefreshing = true;\n\n      try {\n        const response = await refreshToken(\n          // Handle edge case where we get a blank screen if the initial 401 error is from a refresh token request\n          originalRequest.url?.includes('api/auth/refresh') === true ? true : false,\n        );\n\n        const token = response?.token ?? '';\n\n        if (token) {\n          originalRequest.headers['Authorization'] = 'Bearer ' + token;\n          dispatchTokenUpdatedEvent(token);\n          processQueue(null, token);\n          return await axios(originalRequest);\n        } else if (window.location.href.includes('share/')) {\n          console.log(\n            `Refresh token failed from shared link, attempting request to ${originalRequest.url}`,\n          );\n        } else {\n          window.location.href = '/login';\n        }\n      } catch (err) {\n        processQueue(err as AxiosError, null);\n        return Promise.reject(err);\n      } finally {\n        isRefreshing = false;\n      }\n    }\n\n    return Promise.reject(error);\n  },\n);\n\nexport default {\n  get: _get,\n  getResponse: _getResponse,\n  post: _post,\n  postMultiPart: _postMultiPart,\n  postTTS: _postTTS,\n  put: _put,\n  delete: _delete,\n  deleteWithOptions: _deleteWithOptions,\n  patch: _patch,\n  refreshToken,\n  dispatchTokenUpdatedEvent,\n};\n","import type { AxiosResponse } from 'axios';\nimport type * as t from './types';\nimport * as endpoints from './api-endpoints';\nimport * as a from './types/assistants';\nimport * as ag from './types/agents';\nimport * as m from './types/mutations';\nimport * as q from './types/queries';\nimport * as f from './types/files';\nimport * as config from './config';\nimport request from './request';\nimport * as s from './schemas';\nimport * as r from './roles';\n\nexport function revokeUserKey(name: string): Promise<unknown> {\n  return request.delete(endpoints.revokeUserKey(name));\n}\n\nexport function revokeAllUserKeys(): Promise<unknown> {\n  return request.delete(endpoints.revokeAllUserKeys());\n}\n\nexport function deleteUser(): Promise<s.TPreset> {\n  return request.delete(endpoints.deleteUser());\n}\n\nexport function getSharedMessages(shareId: string): Promise<t.TSharedMessagesResponse> {\n  return request.get(endpoints.shareMessages(shareId));\n}\n\nexport const listSharedLinks = async (\n  params: q.SharedLinksListParams,\n): Promise<q.SharedLinksResponse> => {\n  const { pageSize, isPublic, sortBy, sortDirection, search, cursor } = params;\n\n  return request.get(\n    endpoints.getSharedLinks(pageSize, isPublic, sortBy, sortDirection, search, cursor),\n  );\n};\n\nexport function getSharedLink(conversationId: string): Promise<t.TSharedLinkGetResponse> {\n  return request.get(endpoints.getSharedLink(conversationId));\n}\n\nexport function createSharedLink(conversationId: string): Promise<t.TSharedLinkResponse> {\n  return request.post(endpoints.createSharedLink(conversationId));\n}\n\nexport function updateSharedLink(shareId: string): Promise<t.TSharedLinkResponse> {\n  return request.patch(endpoints.updateSharedLink(shareId));\n}\n\nexport function deleteSharedLink(shareId: string): Promise<m.TDeleteSharedLinkResponse> {\n  return request.delete(endpoints.shareMessages(shareId));\n}\n\nexport function updateUserKey(payload: t.TUpdateUserKeyRequest) {\n  const { value } = payload;\n  if (!value) {\n    throw new Error('value is required');\n  }\n\n  return request.put(endpoints.keys(), payload);\n}\n\nexport function getPresets(): Promise<s.TPreset[]> {\n  return request.get(endpoints.presets());\n}\n\nexport function createPreset(payload: s.TPreset): Promise<s.TPreset> {\n  return request.post(endpoints.presets(), payload);\n}\n\nexport function updatePreset(payload: s.TPreset): Promise<s.TPreset> {\n  return request.post(endpoints.presets(), payload);\n}\n\nexport function deletePreset(arg: s.TPreset | undefined): Promise<m.PresetDeleteResponse> {\n  return request.post(endpoints.deletePreset(), arg);\n}\n\nexport function getSearchEnabled(): Promise<boolean> {\n  return request.get(endpoints.searchEnabled());\n}\n\nexport function getUser(): Promise<t.TUser> {\n  return request.get(endpoints.user());\n}\n\nexport function getUserBalance(): Promise<t.TBalanceResponse> {\n  return request.get(endpoints.balance());\n}\n\nexport const updateTokenCount = (text: string) => {\n  return request.post(endpoints.tokenizer(), { arg: text });\n};\n\nexport const login = (payload: t.TLoginUser): Promise<t.TLoginResponse> => {\n  return request.post(endpoints.login(), payload);\n};\n\nexport const logout = (): Promise<m.TLogoutResponse> => {\n  return request.post(endpoints.logout());\n};\n\nexport const register = (payload: t.TRegisterUser) => {\n  return request.post(endpoints.register(), payload);\n};\n\nexport const userKeyQuery = (name: string): Promise<t.TCheckUserKeyResponse> =>\n  request.get(endpoints.userKeyQuery(name));\n\nexport const getLoginGoogle = () => {\n  return request.get(endpoints.loginGoogle());\n};\n\nexport const requestPasswordReset = (\n  payload: t.TRequestPasswordReset,\n): Promise<t.TRequestPasswordResetResponse> => {\n  return request.post(endpoints.requestPasswordReset(), payload);\n};\n\nexport const resetPassword = (payload: t.TResetPassword) => {\n  return request.post(endpoints.resetPassword(), payload);\n};\n\nexport const verifyEmail = (payload: t.TVerifyEmail): Promise<t.VerifyEmailResponse> => {\n  return request.post(endpoints.verifyEmail(), payload);\n};\n\nexport const resendVerificationEmail = (\n  payload: t.TResendVerificationEmail,\n): Promise<t.VerifyEmailResponse> => {\n  return request.post(endpoints.resendVerificationEmail(), payload);\n};\n\nexport const getAvailablePlugins = (): Promise<s.TPlugin[]> => {\n  return request.get(endpoints.plugins());\n};\n\nexport const updateUserPlugins = (payload: t.TUpdateUserPlugins) => {\n  return request.post(endpoints.userPlugins(), payload);\n};\n\n/* Config */\n\nexport const getStartupConfig = (): Promise<\n  config.TStartupConfig & {\n    mcpCustomUserVars?: Record<string, { title: string; description: string }>;\n  }\n> => {\n  return request.get(endpoints.config());\n};\n\nexport const getAIEndpoints = (): Promise<t.TEndpointsConfig> => {\n  return request.get(endpoints.aiEndpoints());\n};\n\nexport const getModels = async (): Promise<t.TModelsConfig> => {\n  return request.get(endpoints.models());\n};\n\nexport const getEndpointsConfigOverride = (): Promise<unknown | boolean> => {\n  return request.get(endpoints.endpointsConfigOverride());\n};\n\n/* Assistants */\n\nexport const createAssistant = ({\n  version,\n  ...data\n}: a.AssistantCreateParams): Promise<a.Assistant> => {\n  return request.post(endpoints.assistants({ version }), data);\n};\n\nexport const getAssistantById = ({\n  endpoint,\n  assistant_id,\n  version,\n}: {\n  endpoint: s.AssistantsEndpoint;\n  assistant_id: string;\n  version: number | string | number;\n}): Promise<a.Assistant> => {\n  return request.get(\n    endpoints.assistants({\n      path: assistant_id,\n      endpoint,\n      version,\n    }),\n  );\n};\n\nexport const updateAssistant = ({\n  assistant_id,\n  data,\n  version,\n}: {\n  assistant_id: string;\n  data: a.AssistantUpdateParams;\n  version: number | string;\n}): Promise<a.Assistant> => {\n  return request.patch(\n    endpoints.assistants({\n      path: assistant_id,\n      version,\n    }),\n    data,\n  );\n};\n\nexport const deleteAssistant = ({\n  assistant_id,\n  model,\n  endpoint,\n  version,\n}: m.DeleteAssistantBody & { version: number | string }): Promise<void> => {\n  return request.delete(\n    endpoints.assistants({\n      path: assistant_id,\n      options: { model, endpoint },\n      version,\n    }),\n  );\n};\n\nexport const listAssistants = (\n  params: a.AssistantListParams,\n  version: number | string,\n): Promise<a.AssistantListResponse> => {\n  return request.get(\n    endpoints.assistants({\n      version,\n      options: params,\n    }),\n  );\n};\n\nexport function getAssistantDocs({\n  endpoint,\n  version,\n}: {\n  endpoint: s.AssistantsEndpoint | string;\n  version: number | string;\n}): Promise<a.AssistantDocument[]> {\n  if (!s.isAssistantsEndpoint(endpoint)) {\n    return Promise.resolve([]);\n  }\n  return request.get(\n    endpoints.assistants({\n      path: 'documents',\n      version,\n      options: { endpoint },\n      endpoint: endpoint as s.AssistantsEndpoint,\n    }),\n  );\n}\n\n/* Tools */\n\nexport const getAvailableTools = (\n  _endpoint: s.AssistantsEndpoint | s.EModelEndpoint.agents,\n  version?: number | string,\n): Promise<s.TPlugin[]> => {\n  let path = '';\n  if (s.isAssistantsEndpoint(_endpoint)) {\n    const endpoint = _endpoint as s.AssistantsEndpoint;\n    path = endpoints.assistants({\n      path: 'tools',\n      endpoint: endpoint,\n      version: version ?? config.defaultAssistantsVersion[endpoint],\n    });\n  } else {\n    path = endpoints.agents({\n      path: 'tools',\n    });\n  }\n\n  return request.get(path);\n};\n\nexport const getVerifyAgentToolAuth = (\n  params: q.VerifyToolAuthParams,\n): Promise<q.VerifyToolAuthResponse> => {\n  return request.get(\n    endpoints.agents({\n      path: `tools/${params.toolId}/auth`,\n    }),\n  );\n};\n\nexport const callTool = <T extends m.ToolId>({\n  toolId,\n  toolParams,\n}: {\n  toolId: T;\n  toolParams: m.ToolParams<T>;\n}): Promise<m.ToolCallResponse> => {\n  return request.post(\n    endpoints.agents({\n      path: `tools/${toolId}/call`,\n    }),\n    toolParams,\n  );\n};\n\nexport const getToolCalls = (params: q.GetToolCallParams): Promise<q.ToolCallResults> => {\n  return request.get(\n    endpoints.agents({\n      path: 'tools/calls',\n      options: params,\n    }),\n  );\n};\n\n/* Files */\n\nexport const getFiles = (): Promise<f.TFile[]> => {\n  return request.get(endpoints.files());\n};\n\nexport const getFileConfig = (): Promise<f.FileConfig> => {\n  return request.get(`${endpoints.files()}/config`);\n};\n\nexport const uploadImage = (\n  data: FormData,\n  signal?: AbortSignal | null,\n): Promise<f.TFileUpload> => {\n  const requestConfig = signal ? { signal } : undefined;\n  return request.postMultiPart(endpoints.images(), data, requestConfig);\n};\n\nexport const uploadFile = (data: FormData, signal?: AbortSignal | null): Promise<f.TFileUpload> => {\n  const requestConfig = signal ? { signal } : undefined;\n  return request.postMultiPart(endpoints.files(), data, requestConfig);\n};\n\n/* actions */\n\nexport const updateAction = (data: m.UpdateActionVariables): Promise<m.UpdateActionResponse> => {\n  const { assistant_id, version, ...body } = data;\n  return request.post(\n    endpoints.assistants({\n      path: `actions/${assistant_id}`,\n      version,\n    }),\n    body,\n  );\n};\n\nexport function getActions(): Promise<ag.Action[]> {\n  return request.get(\n    endpoints.agents({\n      path: 'actions',\n    }),\n  );\n}\n\nexport const deleteAction = async ({\n  assistant_id,\n  action_id,\n  model,\n  version,\n  endpoint,\n}: m.DeleteActionVariables & { version: number | string }): Promise<void> =>\n  request.delete(\n    endpoints.assistants({\n      path: `actions/${assistant_id}/${action_id}/${model}`,\n      version,\n      endpoint,\n    }),\n  );\n\n/**\n * Agents\n */\n\nexport const createAgent = ({ ...data }: a.AgentCreateParams): Promise<a.Agent> => {\n  return request.post(endpoints.agents({}), data);\n};\n\nexport const getAgentById = ({ agent_id }: { agent_id: string }): Promise<a.Agent> => {\n  return request.get(\n    endpoints.agents({\n      path: agent_id,\n    }),\n  );\n};\n\nexport const updateAgent = ({\n  agent_id,\n  data,\n}: {\n  agent_id: string;\n  data: a.AgentUpdateParams;\n}): Promise<a.Agent> => {\n  return request.patch(\n    endpoints.agents({\n      path: agent_id,\n    }),\n    data,\n  );\n};\n\nexport const duplicateAgent = ({\n  agent_id,\n}: m.DuplicateAgentBody): Promise<{ agent: a.Agent; actions: ag.Action[] }> => {\n  return request.post(\n    endpoints.agents({\n      path: `${agent_id}/duplicate`,\n    }),\n  );\n};\n\nexport const deleteAgent = ({ agent_id }: m.DeleteAgentBody): Promise<void> => {\n  return request.delete(\n    endpoints.agents({\n      path: agent_id,\n    }),\n  );\n};\n\nexport const listAgents = (params: a.AgentListParams): Promise<a.AgentListResponse> => {\n  return request.get(\n    endpoints.agents({\n      options: params,\n    }),\n  );\n};\n\nexport const revertAgentVersion = ({\n  agent_id,\n  version_index,\n}: {\n  agent_id: string;\n  version_index: number;\n}): Promise<a.Agent> => request.post(endpoints.revertAgentVersion(agent_id), { version_index });\n\n/* Tools */\n\nexport const getAvailableAgentTools = (): Promise<s.TPlugin[]> => {\n  return request.get(\n    endpoints.agents({\n      path: 'tools',\n    }),\n  );\n};\n\n/* Actions */\n\nexport const updateAgentAction = (\n  data: m.UpdateAgentActionVariables,\n): Promise<m.UpdateAgentActionResponse> => {\n  const { agent_id, ...body } = data;\n  return request.post(\n    endpoints.agents({\n      path: `actions/${agent_id}`,\n    }),\n    body,\n  );\n};\n\nexport const deleteAgentAction = async ({\n  agent_id,\n  action_id,\n}: m.DeleteAgentActionVariables): Promise<void> =>\n  request.delete(\n    endpoints.agents({\n      path: `actions/${agent_id}/${action_id}`,\n    }),\n  );\n\n/**\n * Imports a conversations file.\n *\n * @param data - The FormData containing the file to import.\n * @returns A Promise that resolves to the import start response.\n */\nexport const importConversationsFile = (data: FormData): Promise<t.TImportResponse> => {\n  return request.postMultiPart(endpoints.importConversation(), data);\n};\n\nexport const uploadAvatar = (data: FormData): Promise<f.AvatarUploadResponse> => {\n  return request.postMultiPart(endpoints.avatar(), data);\n};\n\nexport const uploadAssistantAvatar = (data: m.AssistantAvatarVariables): Promise<a.Assistant> => {\n  return request.postMultiPart(\n    endpoints.assistants({\n      isAvatar: true,\n      path: `${data.assistant_id}/avatar`,\n      options: { model: data.model, endpoint: data.endpoint },\n      version: data.version,\n    }),\n    data.formData,\n  );\n};\n\nexport const uploadAgentAvatar = (data: m.AgentAvatarVariables): Promise<a.Agent> => {\n  return request.postMultiPart(\n    `${endpoints.images()}/agents/${data.agent_id}/avatar`,\n    data.formData,\n  );\n};\n\nexport const getFileDownload = async (userId: string, file_id: string): Promise<AxiosResponse> => {\n  return request.getResponse(`${endpoints.files()}/download/${userId}/${file_id}`, {\n    responseType: 'blob',\n    headers: {\n      Accept: 'application/octet-stream',\n    },\n  });\n};\n\nexport const getCodeOutputDownload = async (url: string): Promise<AxiosResponse> => {\n  return request.getResponse(url, {\n    responseType: 'blob',\n    headers: {\n      Accept: 'application/octet-stream',\n    },\n  });\n};\n\nexport const deleteFiles = async (payload: {\n  files: f.BatchFile[];\n  agent_id?: string;\n  assistant_id?: string;\n  tool_resource?: a.EToolResources;\n}): Promise<f.DeleteFilesResponse> =>\n  request.deleteWithOptions(endpoints.files(), {\n    data: payload,\n  });\n\n/* Speech */\n\nexport const speechToText = (data: FormData): Promise<f.SpeechToTextResponse> => {\n  return request.postMultiPart(endpoints.speechToText(), data);\n};\n\nexport const textToSpeech = (data: FormData): Promise<ArrayBuffer> => {\n  return request.postTTS(endpoints.textToSpeechManual(), data);\n};\n\nexport const getVoices = (): Promise<f.VoiceResponse> => {\n  return request.get(endpoints.textToSpeechVoices());\n};\n\nexport const getCustomConfigSpeech = (): Promise<t.TCustomConfigSpeechResponse> => {\n  return request.get(endpoints.getCustomConfigSpeech());\n};\n\n/* conversations */\n\nexport function duplicateConversation(\n  payload: t.TDuplicateConvoRequest,\n): Promise<t.TDuplicateConvoResponse> {\n  return request.post(endpoints.duplicateConversation(), payload);\n}\n\nexport function forkConversation(payload: t.TForkConvoRequest): Promise<t.TForkConvoResponse> {\n  return request.post(endpoints.forkConversation(), payload);\n}\n\nexport function deleteConversation(payload: t.TDeleteConversationRequest) {\n  return request.deleteWithOptions(endpoints.deleteConversation(), { data: { arg: payload } });\n}\n\nexport function clearAllConversations(): Promise<unknown> {\n  return request.delete(endpoints.deleteAllConversation());\n}\n\nexport const listConversations = (\n  params?: q.ConversationListParams,\n): Promise<q.ConversationListResponse> => {\n  return request.get(endpoints.conversations(params ?? {}));\n};\n\nexport function getConversations(cursor: string): Promise<t.TGetConversationsResponse> {\n  return request.get(endpoints.conversations({ cursor }));\n}\n\nexport function getConversationById(id: string): Promise<s.TConversation> {\n  return request.get(endpoints.conversationById(id));\n}\n\nexport function updateConversation(\n  payload: t.TUpdateConversationRequest,\n): Promise<t.TUpdateConversationResponse> {\n  return request.post(endpoints.updateConversation(), { arg: payload });\n}\n\nexport function archiveConversation(\n  payload: t.TArchiveConversationRequest,\n): Promise<t.TArchiveConversationResponse> {\n  return request.post(endpoints.updateConversation(), { arg: payload });\n}\n\nexport function genTitle(payload: m.TGenTitleRequest): Promise<m.TGenTitleResponse> {\n  return request.post(endpoints.genTitle(), payload);\n}\n\nexport const listMessages = (params?: q.MessagesListParams): Promise<q.MessagesListResponse> => {\n  return request.get(endpoints.messages(params ?? {}));\n};\n\nexport function updateMessage(payload: t.TUpdateMessageRequest): Promise<unknown> {\n  const { conversationId, messageId, text } = payload;\n  if (!conversationId) {\n    throw new Error('conversationId is required');\n  }\n\n  return request.put(endpoints.messages({ conversationId, messageId }), { text });\n}\n\nexport function updateMessageContent(payload: t.TUpdateMessageContent): Promise<unknown> {\n  const { conversationId, messageId, index, text } = payload;\n  if (!conversationId) {\n    throw new Error('conversationId is required');\n  }\n\n  return request.put(endpoints.messages({ conversationId, messageId }), { text, index });\n}\n\nexport const editArtifact = async ({\n  messageId,\n  ...params\n}: m.TEditArtifactRequest): Promise<m.TEditArtifactResponse> => {\n  return request.post(`/api/messages/artifact/${messageId}`, params);\n};\n\nexport function getMessagesByConvoId(conversationId: string): Promise<s.TMessage[]> {\n  if (\n    conversationId === config.Constants.NEW_CONVO ||\n    conversationId === config.Constants.PENDING_CONVO\n  ) {\n    return Promise.resolve([]);\n  }\n  return request.get(endpoints.messages({ conversationId }));\n}\n\nexport function getPrompt(id: string): Promise<{ prompt: t.TPrompt }> {\n  return request.get(endpoints.getPrompt(id));\n}\n\nexport function getPrompts(filter: t.TPromptsWithFilterRequest): Promise<t.TPrompt[]> {\n  return request.get(endpoints.getPromptsWithFilters(filter));\n}\n\nexport function getAllPromptGroups(): Promise<q.AllPromptGroupsResponse> {\n  return request.get(endpoints.getAllPromptGroups());\n}\n\nexport function getPromptGroups(\n  filter: t.TPromptGroupsWithFilterRequest,\n): Promise<t.PromptGroupListResponse> {\n  return request.get(endpoints.getPromptGroupsWithFilters(filter));\n}\n\nexport function getPromptGroup(id: string): Promise<t.TPromptGroup> {\n  return request.get(endpoints.getPromptGroup(id));\n}\n\nexport function createPrompt(payload: t.TCreatePrompt): Promise<t.TCreatePromptResponse> {\n  return request.post(endpoints.postPrompt(), payload);\n}\n\nexport function updatePromptGroup(\n  variables: t.TUpdatePromptGroupVariables,\n): Promise<t.TUpdatePromptGroupResponse> {\n  return request.patch(endpoints.updatePromptGroup(variables.id), variables.payload);\n}\n\nexport function deletePrompt(payload: t.TDeletePromptVariables): Promise<t.TDeletePromptResponse> {\n  return request.delete(endpoints.deletePrompt(payload));\n}\n\nexport function makePromptProduction(id: string): Promise<t.TMakePromptProductionResponse> {\n  return request.patch(endpoints.updatePromptTag(id));\n}\n\nexport function updatePromptLabels(\n  variables: t.TUpdatePromptLabelsRequest,\n): Promise<t.TUpdatePromptLabelsResponse> {\n  return request.patch(endpoints.updatePromptLabels(variables.id), variables.payload);\n}\n\nexport function deletePromptGroup(id: string): Promise<t.TDeletePromptGroupResponse> {\n  return request.delete(endpoints.deletePromptGroup(id));\n}\n\nexport function getCategories(): Promise<t.TGetCategoriesResponse> {\n  return request.get(endpoints.getCategories());\n}\n\nexport function getRandomPrompts(\n  variables: t.TGetRandomPromptsRequest,\n): Promise<t.TGetRandomPromptsResponse> {\n  return request.get(endpoints.getRandomPrompts(variables.limit, variables.skip));\n}\n\n/* Roles */\nexport function getRole(roleName: string): Promise<r.TRole> {\n  return request.get(endpoints.getRole(roleName));\n}\n\nexport function updatePromptPermissions(\n  variables: m.UpdatePromptPermVars,\n): Promise<m.UpdatePermResponse> {\n  return request.put(endpoints.updatePromptPermissions(variables.roleName), variables.updates);\n}\n\nexport function updateAgentPermissions(\n  variables: m.UpdateAgentPermVars,\n): Promise<m.UpdatePermResponse> {\n  return request.put(endpoints.updateAgentPermissions(variables.roleName), variables.updates);\n}\n\nexport function updateMemoryPermissions(\n  variables: m.UpdateMemoryPermVars,\n): Promise<m.UpdatePermResponse> {\n  return request.put(endpoints.updateMemoryPermissions(variables.roleName), variables.updates);\n}\n\n/* Tags */\nexport function getConversationTags(): Promise<t.TConversationTagsResponse> {\n  return request.get(endpoints.conversationTags());\n}\n\nexport function createConversationTag(\n  payload: t.TConversationTagRequest,\n): Promise<t.TConversationTagResponse> {\n  return request.post(endpoints.conversationTags(), payload);\n}\n\nexport function updateConversationTag(\n  tag: string,\n  payload: t.TConversationTagRequest,\n): Promise<t.TConversationTagResponse> {\n  return request.put(endpoints.conversationTags(tag), payload);\n}\nexport function deleteConversationTag(tag: string): Promise<t.TConversationTagResponse> {\n  return request.delete(endpoints.conversationTags(tag));\n}\n\nexport function addTagToConversation(\n  conversationId: string,\n  payload: t.TTagConversationRequest,\n): Promise<t.TTagConversationResponse> {\n  return request.put(endpoints.addTagToConversation(conversationId), payload);\n}\nexport function rebuildConversationTags(): Promise<t.TConversationTagsResponse> {\n  return request.post(endpoints.conversationTags('rebuild'));\n}\n\nexport function healthCheck(): Promise<string> {\n  return request.get(endpoints.health());\n}\n\nexport function getUserTerms(): Promise<t.TUserTermsResponse> {\n  return request.get(endpoints.userTerms());\n}\n\nexport function acceptTerms(): Promise<t.TAcceptTermsResponse> {\n  return request.post(endpoints.acceptUserTerms());\n}\n\nexport function getBanner(): Promise<t.TBannerResponse> {\n  return request.get(endpoints.banner());\n}\n\nexport function updateFeedback(\n  conversationId: string,\n  messageId: string,\n  payload: t.TUpdateFeedbackRequest,\n): Promise<t.TUpdateFeedbackResponse> {\n  return request.put(endpoints.feedback(conversationId, messageId), payload);\n}\n\n// 2FA\nexport function enableTwoFactor(): Promise<t.TEnable2FAResponse> {\n  return request.get(endpoints.enableTwoFactor());\n}\n\nexport function verifyTwoFactor(payload: t.TVerify2FARequest): Promise<t.TVerify2FAResponse> {\n  return request.post(endpoints.verifyTwoFactor(), payload);\n}\n\nexport function confirmTwoFactor(payload: t.TVerify2FARequest): Promise<t.TVerify2FAResponse> {\n  return request.post(endpoints.confirmTwoFactor(), payload);\n}\n\nexport function disableTwoFactor(): Promise<t.TDisable2FAResponse> {\n  return request.post(endpoints.disableTwoFactor());\n}\n\nexport function regenerateBackupCodes(): Promise<t.TRegenerateBackupCodesResponse> {\n  return request.post(endpoints.regenerateBackupCodes());\n}\n\nexport function verifyTwoFactorTemp(\n  payload: t.TVerify2FATempRequest,\n): Promise<t.TVerify2FATempResponse> {\n  return request.post(endpoints.verifyTwoFactorTemp(), payload);\n}\n\n/* Memories */\nexport const getMemories = (): Promise<q.MemoriesResponse> => {\n  return request.get(endpoints.memories());\n};\n\nexport const deleteMemory = (key: string): Promise<void> => {\n  return request.delete(endpoints.memory(key));\n};\n\nexport const updateMemory = (\n  key: string,\n  value: string,\n  originalKey?: string,\n): Promise<q.TUserMemory> => {\n  return request.patch(endpoints.memory(originalKey || key), { key, value });\n};\n\nexport const updateMemoryPreferences = (preferences: {\n  memories: boolean;\n}): Promise<{ updated: boolean; preferences: { memories: boolean } }> => {\n  return request.patch(endpoints.memoryPreferences(), preferences);\n};\n\nexport const createMemory = (data: {\n  key: string;\n  value: string;\n}): Promise<{ created: boolean; memory: q.TUserMemory }> => {\n  return request.post(endpoints.memories(), data);\n};\n","import { z } from 'zod';\nimport _axios from 'axios';\nimport { URL } from 'url';\nimport crypto from 'crypto';\nimport { load } from 'js-yaml';\nimport type { ActionMetadata, ActionMetadataRuntime } from './types/agents';\nimport type { FunctionTool, Schema, Reference } from './types/assistants';\nimport { AuthTypeEnum, AuthorizationTypeEnum } from './types/agents';\nimport type { OpenAPIV3 } from 'openapi-types';\nimport { Tools } from './types/assistants';\n\nexport type ParametersSchema = {\n  type: string;\n  properties: Record<string, Reference | Schema>;\n  required: string[];\n  additionalProperties?: boolean;\n};\n\nexport type OpenAPISchema = OpenAPIV3.SchemaObject &\n  ParametersSchema & {\n    items?: OpenAPIV3.ReferenceObject | OpenAPIV3.SchemaObject;\n  };\n\nexport type ApiKeyCredentials = {\n  api_key: string;\n  custom_auth_header?: string;\n  authorization_type?: AuthorizationTypeEnum;\n};\n\nexport type OAuthCredentials = {\n  tokenUrl: string;\n  clientId: string;\n  clientSecret: string;\n  scope: string;\n};\n\nexport type Credentials = ApiKeyCredentials | OAuthCredentials;\n\ntype MediaTypeObject =\n  | undefined\n  | {\n      [media: string]: OpenAPIV3.MediaTypeObject | undefined;\n    };\n\ntype RequestBodyObject = Omit<OpenAPIV3.RequestBodyObject, 'content'> & {\n  content: MediaTypeObject;\n};\n\nexport function sha1(input: string) {\n  return crypto.createHash('sha1').update(input).digest('hex');\n}\n\nexport function createURL(domain: string, path: string) {\n  const cleanDomain = domain.replace(/\\/$/, '');\n  const cleanPath = path.replace(/^\\//, '');\n  const fullURL = `${cleanDomain}/${cleanPath}`;\n  return new URL(fullURL).toString();\n}\n\nconst schemaTypeHandlers: Record<string, (schema: OpenAPISchema) => z.ZodTypeAny> = {\n  string: (schema) => {\n    if (schema.enum) {\n      return z.enum(schema.enum as [string, ...string[]]);\n    }\n\n    let stringSchema = z.string();\n    if (schema.minLength !== undefined) {\n      stringSchema = stringSchema.min(schema.minLength);\n    }\n    if (schema.maxLength !== undefined) {\n      stringSchema = stringSchema.max(schema.maxLength);\n    }\n    return stringSchema;\n  },\n  number: (schema) => {\n    let numberSchema = z.number();\n    if (schema.minimum !== undefined) {\n      numberSchema = numberSchema.min(schema.minimum);\n    }\n    if (schema.maximum !== undefined) {\n      numberSchema = numberSchema.max(schema.maximum);\n    }\n    return numberSchema;\n  },\n  integer: (schema) => (schemaTypeHandlers.number(schema) as z.ZodNumber).int(),\n  boolean: () => z.boolean(),\n  array: (schema) => {\n    if (schema.items) {\n      const zodSchema = openAPISchemaToZod(schema.items as OpenAPISchema);\n      if (zodSchema) {\n        return z.array(zodSchema);\n      }\n\n      return z.array(z.unknown());\n    }\n    return z.array(z.unknown());\n  },\n  object: (schema) => {\n    const shape: { [key: string]: z.ZodTypeAny } = {};\n    if (schema.properties) {\n      Object.entries(schema.properties).forEach(([key, value]) => {\n        const zodSchema = openAPISchemaToZod(value as OpenAPISchema);\n        shape[key] = zodSchema || z.unknown();\n        if (schema.required && schema.required.includes(key)) {\n          shape[key] = shape[key].describe(value.description || '');\n        } else {\n          shape[key] = shape[key].optional().describe(value.description || '');\n        }\n      });\n    }\n    return z.object(shape);\n  },\n};\n\nfunction openAPISchemaToZod(schema: OpenAPISchema): z.ZodTypeAny | undefined {\n  if (schema.type === 'object' && Object.keys(schema.properties || {}).length === 0) {\n    return undefined;\n  }\n\n  const handler = schemaTypeHandlers[schema.type as string] || (() => z.unknown());\n  return handler(schema);\n}\n\n/**\n * Class representing a function signature.\n */\nexport class FunctionSignature {\n  name: string;\n  description: string;\n  parameters: ParametersSchema;\n  strict: boolean;\n\n  constructor(name: string, description: string, parameters: ParametersSchema, strict?: boolean) {\n    this.name = name;\n    this.description = description;\n    this.parameters = parameters;\n    this.strict = strict ?? false;\n  }\n\n  toObjectTool(): FunctionTool {\n    const parameters = {\n      ...this.parameters,\n      additionalProperties: this.strict ? false : undefined,\n    };\n\n    return {\n      type: Tools.function,\n      function: {\n        name: this.name,\n        description: this.description,\n        parameters,\n        ...(this.strict ? { strict: this.strict } : {}),\n      },\n    };\n  }\n}\n\nclass RequestConfig {\n  constructor(\n    readonly domain: string,\n    readonly basePath: string,\n    readonly method: string,\n    readonly operation: string,\n    readonly isConsequential: boolean,\n    readonly contentType: string,\n    readonly parameterLocations?: Record<string, 'query' | 'path' | 'header' | 'body'>,\n  ) {}\n}\n\nclass RequestExecutor {\n  path: string;\n  params?: Record<string, unknown>;\n  private operationHash?: string;\n  private authHeaders: Record<string, string> = {};\n  private authToken?: string;\n\n  constructor(private config: RequestConfig) {\n    this.path = config.basePath;\n  }\n\n  setParams(params: Record<string, unknown>) {\n    this.operationHash = sha1(JSON.stringify(params));\n    this.params = { ...params } as Record<string, unknown>;\n    if (this.config.parameterLocations) {\n      //Substituting “Path” Parameters:\n      for (const [key, value] of Object.entries(params)) {\n        if (this.config.parameterLocations[key] === 'path') {\n          const paramPattern = `{${key}}`;\n          if (this.path.includes(paramPattern)) {\n            this.path = this.path.replace(paramPattern, encodeURIComponent(String(value)));\n            delete this.params[key];\n          }\n        }\n      }\n    } else {\n      // Fallback: if no locations are defined, perform path substitution for all keys.\n      for (const [key, value] of Object.entries(params)) {\n        const paramPattern = `{${key}}`;\n        if (this.path.includes(paramPattern)) {\n          this.path = this.path.replace(paramPattern, encodeURIComponent(String(value)));\n          delete this.params[key];\n        }\n      }\n    }\n    return this;\n  }\n\n  async setAuth(metadata: ActionMetadataRuntime) {\n    if (!metadata.auth) {\n      return this;\n    }\n\n    const {\n      type,\n      /* API Key */\n      authorization_type,\n      custom_auth_header,\n      /* OAuth */\n      authorization_url,\n      client_url,\n      scope,\n      token_exchange_method,\n    } = metadata.auth;\n\n    const {\n      /* API Key */\n      api_key,\n      /* OAuth */\n      oauth_client_id,\n      oauth_client_secret,\n      oauth_token_expires_at,\n      oauth_access_token = '',\n    } = metadata;\n\n    const isApiKey = api_key != null && api_key.length > 0 && type === AuthTypeEnum.ServiceHttp;\n    const isOAuth = !!(\n      oauth_client_id != null &&\n      oauth_client_id &&\n      oauth_client_secret != null &&\n      oauth_client_secret &&\n      type === AuthTypeEnum.OAuth &&\n      authorization_url != null &&\n      authorization_url &&\n      client_url != null &&\n      client_url &&\n      scope != null &&\n      scope &&\n      token_exchange_method\n    );\n\n    if (isApiKey && authorization_type === AuthorizationTypeEnum.Basic) {\n      const basicToken = Buffer.from(api_key).toString('base64');\n      this.authHeaders['Authorization'] = `Basic ${basicToken}`;\n    } else if (isApiKey && authorization_type === AuthorizationTypeEnum.Bearer) {\n      this.authHeaders['Authorization'] = `Bearer ${api_key}`;\n    } else if (\n      isApiKey &&\n      authorization_type === AuthorizationTypeEnum.Custom &&\n      custom_auth_header != null &&\n      custom_auth_header\n    ) {\n      this.authHeaders[custom_auth_header] = api_key;\n    } else if (isOAuth) {\n      // TODO: maybe doing it in a different way later on. but we want that the user needs to folllow the oauth flow.\n      // If we do not have a valid token, bail or ask user to sign in\n      const now = new Date();\n\n      // 1. Check if token is set\n      if (!oauth_access_token) {\n        throw new Error('No access token found. Please log in first.');\n      }\n\n      // 2. Check if token is expired\n      if (oauth_token_expires_at && now >= new Date(oauth_token_expires_at)) {\n        // Optionally check refresh_token logic, or just prompt user to re-login\n        throw new Error('Access token is expired. Please re-login.');\n      }\n\n      // If valid, use it\n      this.authToken = oauth_access_token;\n      this.authHeaders['Authorization'] = `Bearer ${this.authToken}`;\n    }\n    return this;\n  }\n\n  async execute() {\n    const url = createURL(this.config.domain, this.path);\n    const headers: Record<string, string> = {\n      ...this.authHeaders,\n      ...(this.config.contentType ? { 'Content-Type': this.config.contentType } : {}),\n    };\n    const method = this.config.method.toLowerCase();\n    const axios = _axios.create();\n\n    // Initialize separate containers for query and body parameters.\n    const queryParams: Record<string, unknown> = {};\n    const bodyParams: Record<string, unknown> = {};\n\n    if (this.config.parameterLocations && this.params) {\n      for (const key of Object.keys(this.params)) {\n        // Determine parameter placement; default to \"query\" for GET and \"body\" for others.\n        const loc: 'query' | 'path' | 'header' | 'body' =\n          this.config.parameterLocations[key] || (method === 'get' ? 'query' : 'body');\n\n        const val = this.params[key];\n        if (loc === 'query') {\n          queryParams[key] = val;\n        } else if (loc === 'header') {\n          headers[key] = String(val);\n        } else if (loc === 'body') {\n          bodyParams[key] = val;\n        }\n      }\n    } else if (this.params) {\n      Object.assign(queryParams, this.params);\n      Object.assign(bodyParams, this.params);\n    }\n\n    if (method === 'get') {\n      return axios.get(url, { headers, params: queryParams });\n    } else if (method === 'post') {\n      return axios.post(url, bodyParams, { headers, params: queryParams });\n    } else if (method === 'put') {\n      return axios.put(url, bodyParams, { headers, params: queryParams });\n    } else if (method === 'delete') {\n      return axios.delete(url, { headers, data: bodyParams, params: queryParams });\n    } else if (method === 'patch') {\n      return axios.patch(url, bodyParams, { headers, params: queryParams });\n    } else {\n      throw new Error(`Unsupported HTTP method: ${method}`);\n    }\n  }\n\n  getConfig() {\n    return this.config;\n  }\n}\n\nexport class ActionRequest {\n  private config: RequestConfig;\n\n  constructor(\n    domain: string,\n    path: string,\n    method: string,\n    operation: string,\n    isConsequential: boolean,\n    contentType: string,\n    parameterLocations?: Record<string, 'query' | 'path' | 'header' | 'body'>,\n  ) {\n    this.config = new RequestConfig(\n      domain,\n      path,\n      method,\n      operation,\n      isConsequential,\n      contentType,\n      parameterLocations,\n    );\n  }\n\n  // Add getters to maintain backward compatibility\n  get domain() {\n    return this.config.domain;\n  }\n  get path() {\n    return this.config.basePath;\n  }\n  get method() {\n    return this.config.method;\n  }\n  get operation() {\n    return this.config.operation;\n  }\n  get isConsequential() {\n    return this.config.isConsequential;\n  }\n  get contentType() {\n    return this.config.contentType;\n  }\n\n  createExecutor() {\n    return new RequestExecutor(this.config);\n  }\n\n  // Maintain backward compatibility by delegating to a new executor\n  setParams(params: Record<string, unknown>) {\n    const executor = this.createExecutor();\n    executor.setParams(params);\n    return executor;\n  }\n\n  async setAuth(metadata: ActionMetadata) {\n    const executor = this.createExecutor();\n    return executor.setAuth(metadata);\n  }\n\n  async execute() {\n    const executor = this.createExecutor();\n    return executor.execute();\n  }\n}\n\nexport function resolveRef<\n  T extends\n    | OpenAPIV3.ReferenceObject\n    | OpenAPIV3.SchemaObject\n    | OpenAPIV3.ParameterObject\n    | OpenAPIV3.RequestBodyObject,\n>(obj: T, components?: OpenAPIV3.ComponentsObject): Exclude<T, OpenAPIV3.ReferenceObject> {\n  if ('$ref' in obj && components) {\n    const refPath = obj.$ref.replace(/^#\\/components\\//, '').split('/');\n\n    let resolved: unknown = components as Record<string, unknown>;\n    for (const segment of refPath) {\n      if (typeof resolved === 'object' && resolved !== null && segment in resolved) {\n        resolved = (resolved as Record<string, unknown>)[segment];\n      } else {\n        throw new Error(`Could not resolve reference: ${obj.$ref}`);\n      }\n    }\n\n    return resolveRef(resolved as typeof obj, components) as Exclude<T, OpenAPIV3.ReferenceObject>;\n  }\n\n  return obj as Exclude<T, OpenAPIV3.ReferenceObject>;\n}\n\nfunction sanitizeOperationId(input: string) {\n  return input.replace(/[^a-zA-Z0-9_-]/g, '');\n}\n\n/**\n * Converts an OpenAPI spec to function signatures and request builders.\n */\nexport function openapiToFunction(\n  openapiSpec: OpenAPIV3.Document,\n  generateZodSchemas = false,\n): {\n  functionSignatures: FunctionSignature[];\n  requestBuilders: Record<string, ActionRequest>;\n  zodSchemas?: Record<string, z.ZodTypeAny>;\n} {\n  const functionSignatures: FunctionSignature[] = [];\n  const requestBuilders: Record<string, ActionRequest> = {};\n  const zodSchemas: Record<string, z.ZodTypeAny> = {};\n  const baseUrl = openapiSpec.servers?.[0]?.url ?? '';\n\n  // Iterate over each path and method in the OpenAPI spec\n  for (const [path, methods] of Object.entries(openapiSpec.paths)) {\n    for (const [method, operation] of Object.entries(methods as OpenAPIV3.PathsObject)) {\n      const paramLocations: Record<string, 'query' | 'path' | 'header' | 'body'> = {};\n      const operationObj = operation as OpenAPIV3.OperationObject & {\n        'x-openai-isConsequential'?: boolean;\n      } & {\n        'x-strict'?: boolean;\n      };\n\n      // Operation ID is used as the function name\n      const defaultOperationId = `${method}_${path}`;\n      const operationId = operationObj.operationId || sanitizeOperationId(defaultOperationId);\n      const description = operationObj.summary || operationObj.description || '';\n      const isStrict = operationObj['x-strict'] ?? false;\n\n      const parametersSchema: OpenAPISchema = {\n        type: 'object',\n        properties: {},\n        required: [],\n      };\n\n      if (operationObj.parameters) {\n        for (const param of operationObj.parameters ?? []) {\n          const resolvedParam = resolveRef(\n            param,\n            openapiSpec.components,\n          ) as OpenAPIV3.ParameterObject;\n\n          const paramName = resolvedParam.name;\n          if (!paramName || !resolvedParam.schema) {\n            continue;\n          }\n\n          const paramSchema = resolveRef(\n            resolvedParam.schema,\n            openapiSpec.components,\n          ) as OpenAPIV3.SchemaObject;\n\n          parametersSchema.properties[paramName] = paramSchema;\n          if (resolvedParam.required) {\n            parametersSchema.required.push(paramName);\n          }\n          // Record the parameter location from the OpenAPI \"in\" field.\n          paramLocations[paramName] =\n            resolvedParam.in === 'query' ||\n            resolvedParam.in === 'path' ||\n            resolvedParam.in === 'header' ||\n            resolvedParam.in === 'body'\n              ? resolvedParam.in\n              : 'query';\n        }\n      }\n\n      if (operationObj.requestBody) {\n        const requestBody = operationObj.requestBody as RequestBodyObject;\n        const content = requestBody.content;\n        const contentType = Object.keys(content ?? {})[0];\n        const schema = content?.[contentType]?.schema;\n        const resolvedSchema = resolveRef(\n          schema as OpenAPIV3.ReferenceObject | OpenAPIV3.SchemaObject,\n          openapiSpec.components,\n        );\n        parametersSchema.properties = {\n          ...parametersSchema.properties,\n          ...resolvedSchema.properties,\n        };\n        if (resolvedSchema.required) {\n          parametersSchema.required.push(...resolvedSchema.required);\n        }\n        // Mark requestBody properties as belonging to the \"body\"\n        if (resolvedSchema.properties) {\n          for (const key in resolvedSchema.properties) {\n            paramLocations[key] = 'body';\n          }\n        }\n      }\n\n      const functionSignature = new FunctionSignature(\n        operationId,\n        description,\n        parametersSchema,\n        isStrict,\n      );\n      functionSignatures.push(functionSignature);\n\n      const actionRequest = new ActionRequest(\n        baseUrl,\n        path,\n        method,\n        operationId,\n        !!(operationObj['x-openai-isConsequential'] ?? false),\n        operationObj.requestBody ? 'application/json' : '',\n        paramLocations,\n      );\n\n      requestBuilders[operationId] = actionRequest;\n\n      if (generateZodSchemas && Object.keys(parametersSchema.properties).length > 0) {\n        const schema = openAPISchemaToZod(parametersSchema);\n        if (schema) {\n          zodSchemas[operationId] = schema;\n        }\n      }\n    }\n  }\n\n  return { functionSignatures, requestBuilders, zodSchemas };\n}\n\nexport type ValidationResult = {\n  status: boolean;\n  message: string;\n  spec?: OpenAPIV3.Document;\n};\n\n/**\n * Validates and parses an OpenAPI spec.\n */\nexport function validateAndParseOpenAPISpec(specString: string): ValidationResult {\n  try {\n    let parsedSpec;\n    try {\n      parsedSpec = JSON.parse(specString);\n    } catch {\n      parsedSpec = load(specString);\n    }\n\n    // Check for servers\n    if (\n      !parsedSpec.servers ||\n      !Array.isArray(parsedSpec.servers) ||\n      parsedSpec.servers.length === 0\n    ) {\n      return { status: false, message: 'Could not find a valid URL in `servers`' };\n    }\n\n    if (!parsedSpec.servers[0].url) {\n      return { status: false, message: 'Could not find a valid URL in `servers`' };\n    }\n\n    // Check for paths\n    const paths = parsedSpec.paths;\n    if (!paths || typeof paths !== 'object' || Object.keys(paths).length === 0) {\n      return { status: false, message: 'No paths found in the OpenAPI spec.' };\n    }\n\n    const components = parsedSpec.components?.schemas || {};\n    const messages = [];\n\n    for (const [path, methods] of Object.entries(paths)) {\n      for (const [httpMethod, operation] of Object.entries(methods as OpenAPIV3.PathItemObject)) {\n        // Ensure operation is a valid operation object\n        const { responses } = operation as OpenAPIV3.OperationObject | { responses: undefined };\n        if (typeof operation === 'object' && responses) {\n          for (const [statusCode, response] of Object.entries(responses)) {\n            const content = (response as OpenAPIV3.ResponseObject).content as MediaTypeObject;\n            if (content && content['application/json'] && content['application/json'].schema) {\n              const schema = content['application/json'].schema;\n              if ('$ref' in schema && typeof schema.$ref === 'string') {\n                const refName = schema.$ref.split('/').pop();\n                if (refName && !components[refName]) {\n                  messages.push(\n                    `In context=('paths', '${path}', '${httpMethod}', '${statusCode}', 'response', 'content', 'application/json', 'schema'), reference to unknown component ${refName}; using empty schema`,\n                  );\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return {\n      status: true,\n      message: messages.join('\\n') || 'OpenAPI spec is valid.',\n      spec: parsedSpec,\n    };\n  } catch (error) {\n    console.error(error);\n    return { status: false, message: 'Error parsing OpenAPI spec.' };\n  }\n}\n","import {\n  ImageDetail,\n  EModelEndpoint,\n  openAISettings,\n  googleSettings,\n  ReasoningEffort,\n  BedrockProviders,\n  anthropicSettings,\n} from './types';\nimport { SettingDefinition, SettingsConfiguration } from './generate';\n\n// Base definitions\nconst baseDefinitions: Record<string, SettingDefinition> = {\n  model: {\n    key: 'model',\n    label: 'com_ui_model',\n    labelCode: true,\n    type: 'string',\n    component: 'dropdown',\n    optionType: 'model',\n    selectPlaceholder: 'com_ui_select_model',\n    searchPlaceholder: 'com_ui_select_search_model',\n    searchPlaceholderCode: true,\n    selectPlaceholderCode: true,\n    columnSpan: 4,\n  },\n  temperature: {\n    key: 'temperature',\n    label: 'com_endpoint_temperature',\n    labelCode: true,\n    description: 'com_endpoint_openai_temp',\n    descriptionCode: true,\n    type: 'number',\n    component: 'slider',\n    optionType: 'model',\n    columnSpan: 4,\n  },\n  topP: {\n    key: 'topP',\n    label: 'com_endpoint_top_p',\n    labelCode: true,\n    description: 'com_endpoint_anthropic_topp',\n    descriptionCode: true,\n    type: 'number',\n    component: 'slider',\n    optionType: 'model',\n    columnSpan: 4,\n  },\n  stop: {\n    key: 'stop',\n    label: 'com_endpoint_stop',\n    labelCode: true,\n    description: 'com_endpoint_openai_stop',\n    descriptionCode: true,\n    placeholder: 'com_endpoint_stop_placeholder',\n    placeholderCode: true,\n    type: 'array',\n    default: [],\n    component: 'tags',\n    optionType: 'conversation',\n    minTags: 0,\n    maxTags: 4,\n  },\n  imageDetail: {\n    key: 'imageDetail',\n    label: 'com_endpoint_plug_image_detail',\n    labelCode: true,\n    description: 'com_endpoint_openai_detail',\n    descriptionCode: true,\n    type: 'enum',\n    default: ImageDetail.auto,\n    component: 'slider',\n    options: [ImageDetail.low, ImageDetail.auto, ImageDetail.high],\n    optionType: 'conversation',\n    columnSpan: 2,\n  },\n};\n\nconst createDefinition = (\n  base: Partial<SettingDefinition>,\n  overrides: Partial<SettingDefinition>,\n): SettingDefinition => {\n  return { ...base, ...overrides } as SettingDefinition;\n};\n\nexport const chat = {\n  modelLabel: {\n    key: 'modelLabel',\n    label: 'com_endpoint_custom_name',\n    labelCode: true,\n    type: 'string',\n    default: '',\n    component: 'input',\n    placeholder: 'com_endpoint_openai_custom_name_placeholder',\n    placeholderCode: true,\n    optionType: 'conversation',\n  } as const,\n  maxContextTokens: {\n    key: 'maxContextTokens',\n    label: 'com_endpoint_context_tokens',\n    labelCode: true,\n    type: 'number',\n    component: 'input',\n    placeholder: 'com_nav_theme_system',\n    placeholderCode: true,\n    description: 'com_endpoint_context_info',\n    descriptionCode: true,\n    optionType: 'model',\n    columnSpan: 2,\n  } as const,\n  resendFiles: {\n    key: 'resendFiles',\n    label: 'com_endpoint_plug_resend_files',\n    labelCode: true,\n    description: 'com_endpoint_openai_resend_files',\n    descriptionCode: true,\n    type: 'boolean',\n    default: true,\n    component: 'switch',\n    optionType: 'conversation',\n    showDefault: false,\n    columnSpan: 2,\n  } as const,\n  promptPrefix: {\n    key: 'promptPrefix',\n    label: 'com_endpoint_prompt_prefix',\n    labelCode: true,\n    type: 'string',\n    default: '',\n    component: 'textarea',\n    placeholder: 'com_endpoint_openai_prompt_prefix_placeholder',\n    placeholderCode: true,\n    optionType: 'model',\n  } as const,\n};\n\nconst openAIParams: Record<string, SettingDefinition> = {\n  chatGptLabel: {\n    ...chat.modelLabel,\n    key: 'chatGptLabel',\n  },\n  promptPrefix: chat.promptPrefix,\n  temperature: createDefinition(baseDefinitions.temperature, {\n    default: openAISettings.temperature.default,\n    range: {\n      min: openAISettings.temperature.min,\n      max: openAISettings.temperature.max,\n      step: openAISettings.temperature.step,\n    },\n  }),\n  top_p: createDefinition(baseDefinitions.topP, {\n    key: 'top_p',\n    default: openAISettings.top_p.default,\n    range: {\n      min: openAISettings.top_p.min,\n      max: openAISettings.top_p.max,\n      step: openAISettings.top_p.step,\n    },\n  }),\n  frequency_penalty: {\n    key: 'frequency_penalty',\n    label: 'com_endpoint_frequency_penalty',\n    labelCode: true,\n    description: 'com_endpoint_openai_freq',\n    descriptionCode: true,\n    type: 'number',\n    default: openAISettings.frequency_penalty.default,\n    range: {\n      min: openAISettings.frequency_penalty.min,\n      max: openAISettings.frequency_penalty.max,\n      step: openAISettings.frequency_penalty.step,\n    },\n    component: 'slider',\n    optionType: 'model',\n    columnSpan: 4,\n  },\n  presence_penalty: {\n    key: 'presence_penalty',\n    label: 'com_endpoint_presence_penalty',\n    labelCode: true,\n    description: 'com_endpoint_openai_pres',\n    descriptionCode: true,\n    type: 'number',\n    default: openAISettings.presence_penalty.default,\n    range: {\n      min: openAISettings.presence_penalty.min,\n      max: openAISettings.presence_penalty.max,\n      step: openAISettings.presence_penalty.step,\n    },\n    component: 'slider',\n    optionType: 'model',\n    columnSpan: 4,\n  },\n  max_tokens: {\n    key: 'max_tokens',\n    label: 'com_endpoint_max_output_tokens',\n    labelCode: true,\n    type: 'number',\n    component: 'input',\n    description: 'com_endpoint_openai_max_tokens',\n    descriptionCode: true,\n    placeholder: 'com_nav_theme_system',\n    placeholderCode: true,\n    optionType: 'model',\n    columnSpan: 2,\n  },\n  reasoning_effort: {\n    key: 'reasoning_effort',\n    label: 'com_endpoint_reasoning_effort',\n    labelCode: true,\n    description: 'com_endpoint_openai_reasoning_effort',\n    descriptionCode: true,\n    type: 'enum',\n    default: ReasoningEffort.medium,\n    component: 'slider',\n    options: [ReasoningEffort.low, ReasoningEffort.medium, ReasoningEffort.high],\n    optionType: 'model',\n    columnSpan: 4,\n  },\n};\n\nconst anthropic: Record<string, SettingDefinition> = {\n  maxOutputTokens: {\n    key: 'maxOutputTokens',\n    label: 'com_endpoint_max_output_tokens',\n    labelCode: true,\n    type: 'number',\n    component: 'input',\n    description: 'com_endpoint_anthropic_maxoutputtokens',\n    descriptionCode: true,\n    placeholder: 'com_nav_theme_system',\n    placeholderCode: true,\n    range: {\n      min: anthropicSettings.maxOutputTokens.min,\n      max: anthropicSettings.maxOutputTokens.max,\n      step: anthropicSettings.maxOutputTokens.step,\n    },\n    optionType: 'model',\n    columnSpan: 2,\n  },\n  temperature: createDefinition(baseDefinitions.temperature, {\n    default: anthropicSettings.temperature.default,\n    range: {\n      min: anthropicSettings.temperature.min,\n      max: anthropicSettings.temperature.max,\n      step: anthropicSettings.temperature.step,\n    },\n  }),\n  topP: createDefinition(baseDefinitions.topP, {\n    default: anthropicSettings.topP.default,\n    range: {\n      min: anthropicSettings.topP.min,\n      max: anthropicSettings.topP.max,\n      step: anthropicSettings.topP.step,\n    },\n  }),\n  topK: {\n    key: 'topK',\n    label: 'com_endpoint_top_k',\n    labelCode: true,\n    description: 'com_endpoint_anthropic_topk',\n    descriptionCode: true,\n    type: 'number',\n    default: anthropicSettings.topK.default,\n    range: {\n      min: anthropicSettings.topK.min,\n      max: anthropicSettings.topK.max,\n      step: anthropicSettings.topK.step,\n    },\n    component: 'slider',\n    optionType: 'model',\n    columnSpan: 4,\n  },\n  promptCache: {\n    key: 'promptCache',\n    label: 'com_endpoint_prompt_cache',\n    labelCode: true,\n    description: 'com_endpoint_anthropic_prompt_cache',\n    descriptionCode: true,\n    type: 'boolean',\n    default: anthropicSettings.promptCache.default,\n    component: 'switch',\n    optionType: 'conversation',\n    showDefault: false,\n    columnSpan: 2,\n  },\n  thinking: {\n    key: 'thinking',\n    label: 'com_endpoint_thinking',\n    labelCode: true,\n    description: 'com_endpoint_anthropic_thinking',\n    descriptionCode: true,\n    type: 'boolean',\n    default: anthropicSettings.thinking.default,\n    component: 'switch',\n    optionType: 'conversation',\n    showDefault: false,\n    columnSpan: 2,\n  },\n  thinkingBudget: {\n    key: 'thinkingBudget',\n    label: 'com_endpoint_thinking_budget',\n    labelCode: true,\n    description: 'com_endpoint_anthropic_thinking_budget',\n    descriptionCode: true,\n    type: 'number',\n    component: 'input',\n    default: anthropicSettings.thinkingBudget.default,\n    range: {\n      min: anthropicSettings.thinkingBudget.min,\n      max: anthropicSettings.thinkingBudget.max,\n      step: anthropicSettings.thinkingBudget.step,\n    },\n    optionType: 'conversation',\n    columnSpan: 2,\n  },\n};\n\nconst bedrock: Record<string, SettingDefinition> = {\n  system: {\n    key: 'system',\n    label: 'com_endpoint_prompt_prefix',\n    labelCode: true,\n    type: 'string',\n    default: '',\n    component: 'textarea',\n    placeholder: 'com_endpoint_openai_prompt_prefix_placeholder',\n    placeholderCode: true,\n    optionType: 'model',\n  },\n  region: {\n    key: 'region',\n    type: 'string',\n    label: 'com_ui_region',\n    labelCode: true,\n    component: 'combobox',\n    optionType: 'conversation',\n    selectPlaceholder: 'com_ui_select_region',\n    searchPlaceholder: 'com_ui_select_search_region',\n    searchPlaceholderCode: true,\n    selectPlaceholderCode: true,\n    columnSpan: 2,\n  },\n  maxTokens: {\n    key: 'maxTokens',\n    label: 'com_endpoint_max_output_tokens',\n    labelCode: true,\n    type: 'number',\n    component: 'input',\n    placeholder: 'com_endpoint_anthropic_maxoutputtokens',\n    placeholderCode: true,\n    optionType: 'model',\n    columnSpan: 2,\n  },\n  temperature: createDefinition(baseDefinitions.temperature, {\n    default: 1,\n    range: { min: 0, max: 1, step: 0.01 },\n  }),\n  topK: createDefinition(anthropic.topK, {\n    range: { min: 0, max: 500, step: 1 },\n  }),\n  topP: createDefinition(baseDefinitions.topP, {\n    default: 0.999,\n    range: { min: 0, max: 1, step: 0.01 },\n  }),\n};\n\nconst mistral: Record<string, SettingDefinition> = {\n  temperature: createDefinition(baseDefinitions.temperature, {\n    default: 0.7,\n    range: { min: 0, max: 1, step: 0.01 },\n  }),\n  topP: createDefinition(baseDefinitions.topP, {\n    range: { min: 0, max: 1, step: 0.01 },\n  }),\n};\n\nconst cohere: Record<string, SettingDefinition> = {\n  temperature: createDefinition(baseDefinitions.temperature, {\n    default: 0.3,\n    range: { min: 0, max: 1, step: 0.01 },\n  }),\n  topP: createDefinition(baseDefinitions.topP, {\n    default: 0.75,\n    range: { min: 0.01, max: 0.99, step: 0.01 },\n  }),\n};\n\nconst meta: Record<string, SettingDefinition> = {\n  temperature: createDefinition(baseDefinitions.temperature, {\n    default: 0.5,\n    range: { min: 0, max: 1, step: 0.01 },\n  }),\n  topP: createDefinition(baseDefinitions.topP, {\n    default: 0.9,\n    range: { min: 0, max: 1, step: 0.01 },\n  }),\n};\n\nconst google: Record<string, SettingDefinition> = {\n  temperature: createDefinition(baseDefinitions.temperature, {\n    default: googleSettings.temperature.default,\n    range: {\n      min: googleSettings.temperature.min,\n      max: googleSettings.temperature.max,\n      step: googleSettings.temperature.step,\n    },\n  }),\n  topP: createDefinition(baseDefinitions.topP, {\n    default: googleSettings.topP.default,\n    range: {\n      min: googleSettings.topP.min,\n      max: googleSettings.topP.max,\n      step: googleSettings.topP.step,\n    },\n  }),\n  topK: {\n    key: 'topK',\n    label: 'com_endpoint_top_k',\n    labelCode: true,\n    description: 'com_endpoint_google_topk',\n    descriptionCode: true,\n    type: 'number',\n    default: googleSettings.topK.default,\n    range: {\n      min: googleSettings.topK.min,\n      max: googleSettings.topK.max,\n      step: googleSettings.topK.step,\n    },\n    component: 'slider',\n    optionType: 'model',\n    columnSpan: 4,\n  },\n  maxOutputTokens: {\n    key: 'maxOutputTokens',\n    label: 'com_endpoint_max_output_tokens',\n    labelCode: true,\n    type: 'number',\n    component: 'input',\n    description: 'com_endpoint_google_maxoutputtokens',\n    descriptionCode: true,\n    placeholder: 'com_nav_theme_system',\n    placeholderCode: true,\n    default: googleSettings.maxOutputTokens.default,\n    range: {\n      min: googleSettings.maxOutputTokens.min,\n      max: googleSettings.maxOutputTokens.max,\n      step: googleSettings.maxOutputTokens.step,\n    },\n    optionType: 'model',\n    columnSpan: 2,\n  },\n  thinking: {\n    key: 'thinking',\n    label: 'com_endpoint_thinking',\n    labelCode: true,\n    description: 'com_endpoint_google_thinking',\n    descriptionCode: true,\n    type: 'boolean',\n    default: googleSettings.thinking.default,\n    component: 'switch',\n    optionType: 'conversation',\n    showDefault: false,\n    columnSpan: 2,\n  },\n  thinkingBudget: {\n    key: 'thinkingBudget',\n    label: 'com_endpoint_thinking_budget',\n    labelCode: true,\n    description: 'com_endpoint_google_thinking_budget',\n    descriptionCode: true,\n    placeholder: 'com_ui_auto',\n    placeholderCode: true,\n    type: 'number',\n    component: 'input',\n    range: {\n      min: googleSettings.thinkingBudget.min,\n      max: googleSettings.thinkingBudget.max,\n      step: googleSettings.thinkingBudget.step,\n    },\n    optionType: 'conversation',\n    columnSpan: 2,\n  },\n};\n\nconst googleConfig: SettingsConfiguration = [\n  chat.modelLabel,\n  chat.promptPrefix,\n  chat.maxContextTokens,\n  google.maxOutputTokens,\n  google.temperature,\n  google.topP,\n  google.topK,\n  chat.resendFiles,\n  google.thinking,\n  google.thinkingBudget,\n];\n\nconst googleCol1: SettingsConfiguration = [\n  baseDefinitions.model as SettingDefinition,\n  chat.modelLabel,\n  chat.promptPrefix,\n];\n\nconst googleCol2: SettingsConfiguration = [\n  chat.maxContextTokens,\n  google.maxOutputTokens,\n  google.temperature,\n  google.topP,\n  google.topK,\n  chat.resendFiles,\n  google.thinking,\n  google.thinkingBudget,\n];\n\nconst openAI: SettingsConfiguration = [\n  chat.modelLabel,\n  chat.promptPrefix,\n  chat.maxContextTokens,\n  openAIParams.max_tokens,\n  openAIParams.temperature,\n  openAIParams.top_p,\n  openAIParams.frequency_penalty,\n  openAIParams.presence_penalty,\n  baseDefinitions.stop,\n  chat.resendFiles,\n  baseDefinitions.imageDetail,\n  openAIParams.reasoning_effort,\n];\n\nconst openAICol1: SettingsConfiguration = [\n  baseDefinitions.model as SettingDefinition,\n  chat.modelLabel,\n  chat.promptPrefix,\n];\n\nconst openAICol2: SettingsConfiguration = [\n  chat.maxContextTokens,\n  openAIParams.max_tokens,\n  openAIParams.temperature,\n  openAIParams.top_p,\n  openAIParams.frequency_penalty,\n  openAIParams.presence_penalty,\n  baseDefinitions.stop,\n  openAIParams.reasoning_effort,\n  chat.resendFiles,\n  baseDefinitions.imageDetail,\n];\n\nconst anthropicConfig: SettingsConfiguration = [\n  chat.modelLabel,\n  chat.promptPrefix,\n  chat.maxContextTokens,\n  anthropic.maxOutputTokens,\n  anthropic.temperature,\n  anthropic.topP,\n  anthropic.topK,\n  chat.resendFiles,\n  anthropic.promptCache,\n  anthropic.thinking,\n  anthropic.thinkingBudget,\n];\n\nconst anthropicCol1: SettingsConfiguration = [\n  baseDefinitions.model as SettingDefinition,\n  chat.modelLabel,\n  chat.promptPrefix,\n];\n\nconst anthropicCol2: SettingsConfiguration = [\n  chat.maxContextTokens,\n  anthropic.maxOutputTokens,\n  anthropic.temperature,\n  anthropic.topP,\n  anthropic.topK,\n  chat.resendFiles,\n  anthropic.promptCache,\n  anthropic.thinking,\n  anthropic.thinkingBudget,\n];\n\nconst bedrockAnthropic: SettingsConfiguration = [\n  chat.modelLabel,\n  bedrock.system,\n  chat.maxContextTokens,\n  bedrock.maxTokens,\n  bedrock.temperature,\n  bedrock.topP,\n  bedrock.topK,\n  baseDefinitions.stop,\n  chat.resendFiles,\n  bedrock.region,\n  anthropic.thinking,\n  anthropic.thinkingBudget,\n];\n\nconst bedrockMistral: SettingsConfiguration = [\n  chat.modelLabel,\n  chat.promptPrefix,\n  chat.maxContextTokens,\n  bedrock.maxTokens,\n  mistral.temperature,\n  mistral.topP,\n  chat.resendFiles,\n  bedrock.region,\n];\n\nconst bedrockCohere: SettingsConfiguration = [\n  chat.modelLabel,\n  chat.promptPrefix,\n  chat.maxContextTokens,\n  bedrock.maxTokens,\n  cohere.temperature,\n  cohere.topP,\n  chat.resendFiles,\n  bedrock.region,\n];\n\nconst bedrockGeneral: SettingsConfiguration = [\n  chat.modelLabel,\n  chat.promptPrefix,\n  chat.maxContextTokens,\n  meta.temperature,\n  meta.topP,\n  chat.resendFiles,\n  bedrock.region,\n];\n\nconst bedrockAnthropicCol1: SettingsConfiguration = [\n  baseDefinitions.model as SettingDefinition,\n  chat.modelLabel,\n  bedrock.system,\n  baseDefinitions.stop,\n];\n\nconst bedrockAnthropicCol2: SettingsConfiguration = [\n  chat.maxContextTokens,\n  bedrock.maxTokens,\n  bedrock.temperature,\n  bedrock.topP,\n  bedrock.topK,\n  chat.resendFiles,\n  bedrock.region,\n  anthropic.thinking,\n  anthropic.thinkingBudget,\n];\n\nconst bedrockMistralCol1: SettingsConfiguration = [\n  baseDefinitions.model as SettingDefinition,\n  chat.modelLabel,\n  chat.promptPrefix,\n];\n\nconst bedrockMistralCol2: SettingsConfiguration = [\n  chat.maxContextTokens,\n  bedrock.maxTokens,\n  mistral.temperature,\n  mistral.topP,\n  chat.resendFiles,\n  bedrock.region,\n];\n\nconst bedrockCohereCol1: SettingsConfiguration = [\n  baseDefinitions.model as SettingDefinition,\n  chat.modelLabel,\n  chat.promptPrefix,\n];\n\nconst bedrockCohereCol2: SettingsConfiguration = [\n  chat.maxContextTokens,\n  bedrock.maxTokens,\n  cohere.temperature,\n  cohere.topP,\n  chat.resendFiles,\n  bedrock.region,\n];\n\nconst bedrockGeneralCol1: SettingsConfiguration = [\n  baseDefinitions.model as SettingDefinition,\n  chat.modelLabel,\n  chat.promptPrefix,\n];\n\nconst bedrockGeneralCol2: SettingsConfiguration = [\n  chat.maxContextTokens,\n  meta.temperature,\n  meta.topP,\n  chat.resendFiles,\n  bedrock.region,\n];\n\nexport const paramSettings: Record<string, SettingsConfiguration | undefined> = {\n  [EModelEndpoint.openAI]: openAI,\n  [EModelEndpoint.azureOpenAI]: openAI,\n  [EModelEndpoint.custom]: openAI,\n  [EModelEndpoint.anthropic]: anthropicConfig,\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.Anthropic}`]: bedrockAnthropic,\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.MistralAI}`]: bedrockMistral,\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.Cohere}`]: bedrockCohere,\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.Meta}`]: bedrockGeneral,\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.AI21}`]: bedrockGeneral,\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.Amazon}`]: bedrockGeneral,\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.DeepSeek}`]: bedrockGeneral,\n  [EModelEndpoint.google]: googleConfig,\n};\n\nconst openAIColumns = {\n  col1: openAICol1,\n  col2: openAICol2,\n};\n\nconst bedrockGeneralColumns = {\n  col1: bedrockGeneralCol1,\n  col2: bedrockGeneralCol2,\n};\n\nexport const presetSettings: Record<\n  string,\n  | {\n      col1: SettingsConfiguration;\n      col2: SettingsConfiguration;\n    }\n  | undefined\n> = {\n  [EModelEndpoint.openAI]: openAIColumns,\n  [EModelEndpoint.azureOpenAI]: openAIColumns,\n  [EModelEndpoint.custom]: openAIColumns,\n  [EModelEndpoint.anthropic]: {\n    col1: anthropicCol1,\n    col2: anthropicCol2,\n  },\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.Anthropic}`]: {\n    col1: bedrockAnthropicCol1,\n    col2: bedrockAnthropicCol2,\n  },\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.MistralAI}`]: {\n    col1: bedrockMistralCol1,\n    col2: bedrockMistralCol2,\n  },\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.Cohere}`]: {\n    col1: bedrockCohereCol1,\n    col2: bedrockCohereCol2,\n  },\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.Meta}`]: bedrockGeneralColumns,\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.AI21}`]: bedrockGeneralColumns,\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.Amazon}`]: bedrockGeneralColumns,\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.DeepSeek}`]: bedrockGeneralColumns,\n  [EModelEndpoint.google]: {\n    col1: googleCol1,\n    col2: googleCol2,\n  },\n};\n\nexport const agentParamSettings: Record<string, SettingsConfiguration | undefined> = Object.entries(\n  presetSettings,\n).reduce<Record<string, SettingsConfiguration | undefined>>((acc, [key, value]) => {\n  if (value) {\n    acc[key] = value.col2;\n  }\n  return acc;\n}, {});\n","import type * as t from './types';\nimport { EndpointURLs } from './config';\nimport * as s from './schemas';\n\nexport default function createPayload(submission: t.TSubmission) {\n  const {\n    conversation,\n    userMessage,\n    endpointOption,\n    isEdited,\n    isContinued,\n    isTemporary,\n    ephemeralAgent,\n  } = submission;\n  const { conversationId } = s.tConvoUpdateSchema.parse(conversation);\n  const { endpoint: _e } = endpointOption as {\n    endpoint: s.EModelEndpoint;\n    endpointType?: s.EModelEndpoint;\n  };\n\n  const endpoint = _e as s.EModelEndpoint;\n  let server = `${EndpointURLs[s.EModelEndpoint.agents]}/${endpoint}`;\n\n  if (isEdited && s.isAssistantsEndpoint(endpoint)) {\n    server += '/modify';\n  }\n\n  const payload: t.TPayload = {\n    ...userMessage,\n    ...endpointOption,\n    endpoint,\n    ephemeralAgent: s.isAssistantsEndpoint(endpoint) ? undefined : ephemeralAgent,\n    isContinued: !!(isEdited && isContinued),\n    conversationId,\n    isTemporary,\n  };\n\n  return { server, payload };\n}\n","import type { TCustomConfig, TMemoryConfig } from './config';\n\n/**\n * Loads the memory configuration and validates it\n * @param config - The memory configuration from chat.yaml\n * @returns The validated memory configuration\n */\nexport function loadMemoryConfig(config: TCustomConfig['memory']): TMemoryConfig | undefined {\n  if (!config) {\n    return undefined;\n  }\n\n  // If disabled is explicitly true, return the config as-is\n  if (config.disabled === true) {\n    return config;\n  }\n\n  // Check if the agent configuration is valid\n  const hasValidAgent =\n    config.agent &&\n    (('id' in config.agent && !!config.agent.id) ||\n      ('provider' in config.agent &&\n        'model' in config.agent &&\n        !!config.agent.provider &&\n        !!config.agent.model));\n\n  // If agent config is invalid, treat as disabled\n  if (!hasValidAgent) {\n    return {\n      ...config,\n      disabled: true,\n    };\n  }\n\n  return config;\n}\n\n/**\n * Checks if memory feature is enabled based on the configuration\n * @param config - The memory configuration\n * @returns True if memory is enabled, false otherwise\n */\nexport function isMemoryEnabled(config: TMemoryConfig | undefined): boolean {\n  if (!config) {\n    return false;\n  }\n\n  if (config.disabled === true) {\n    return false;\n  }\n\n  // Check if agent configuration is valid\n  const hasValidAgent =\n    config.agent &&\n    (('id' in config.agent && !!config.agent.id) ||\n      ('provider' in config.agent &&\n        'model' in config.agent &&\n        !!config.agent.provider &&\n        !!config.agent.model));\n\n  return !!hasValidAgent;\n}\n","import type { TCustomConfig } from '../src/config';\nimport { OCRStrategy } from '../src/config';\n\nexport function loadOCRConfig(config: TCustomConfig['ocr']): TCustomConfig['ocr'] {\n  const baseURL = config?.baseURL ?? '';\n  const apiKey = config?.apiKey ?? '';\n  const mistralModel = config?.mistralModel ?? '';\n  return {\n    apiKey,\n    baseURL,\n    mistralModel,\n    strategy: config?.strategy ?? OCRStrategy.MISTRAL_OCR,\n  };\n}\n"],"names":["Tools","EToolResources","AnnotationTypes","StepStatus","MessageContentTypes","RunStatus","envVarRegex","extractVariableName","value","match","trim","extractEnvVariable","trimmed","singleMatch","varName","process","env","regex","result","matches","exec","push","fullMatch","index","i","length","_a","envValue","substring","FilePurpose","AssistantStreamEvents","FEEDBACK_RATINGS","FEEDBACK_REASON_KEYS","FEEDBACK_TAGS","key","label","direction","icon","feedbackTagKeySchema","z","enum","feedbackRatingSchema","feedbackSchema","object","rating","tag","text","string","max","optional","AuthType","isUUID","uuid","EModelEndpoint","authTypeSchema","nativeEnum","BedrockProviders","paramEndpoints","Set","agents","openAI","bedrock","azureOpenAI","anthropic","custom","google","ImageDetail","ReasoningEffort","getModelKey","endpoint","model","parts","split","provider","find","part","Object","values","includes","isAssistantsEndpoint","_endpoint","toLowerCase","endsWith","assistants","EAgent","imageDetailNumeric","low","auto","high","imageDetailValue","eImageDetailSchema","eReasoningEffortSchema","defaultAgentFormValues","_b","agent","id","name","description","instructions","model_parameters","tools","projectIds","artifacts","isCollaborative","recursion_limit","undefined","execute_code","file_search","web_search","ImageVisionTool","_c","type","function","parameters","properties","required","openAISettings","default","temperature","min","step","top_p","presence_penalty","frequency_penalty","resendFiles","maxContextTokens","max_tokens","imageDetail","googleSettings","maxOutputTokens","topP","topK","thinking","thinkingBudget","LEGACY_ANTHROPIC_MAX_OUTPUT","anthropicSettings","promptCache","reset","modelName","test","set","legacy","agentsSettings","endpointSettings","_d","eModelEndpointSchema","extendedModelEndpointSchema","union","tPluginAuthConfigSchema","authField","tPluginSchema","pluginKey","authConfig","array","authenticated","boolean","chatMenu","isButton","toolkit","tExampleSchema","input","content","output","agentOptionSettings","functions","options","classic","skipCompletion","eAgentOptionsSchema","tAgentOptionsSchema","number","tMessageSchema","messageId","clientId","nullable","conversationId","parentMessageId","responseMessageId","overrideParentMessageId","bg","title","or","literal","sender","generation","isCreatedByUser","error","clientTimestamp","createdAt","Date","toISOString","updatedAt","current","unfinished","searchResult","finish_reason","thread_id","iconURL","feedback","coerceNumber","transform","val","parseFloat","DocumentType","lazy","null","record","tConversationSchema","endpointType","isArchived","user","messages","modelLabel","userLabel","promptPrefix","system","context","examples","tags","file_ids","reasoning_effort","assistant_id","agent_id","region","maxTokens","additionalModelRequestFields","additional_instructions","append_current_datetime","presetOverride","unknown","stop","greeting","spec","expiredAt","resendImages","agentOptions","chatGptLabel","tPresetSchema","omit","merge","presetId","defaultPreset","order","tConvoUpdateSchema","tQueryParamsSchema","pick","tSharedLinkSchema","shareId","isPublic","tConversationTagSchema","_id","count","position","googleBaseSchema","googleSchema","obj","removeNullishValues","catch","googleGenConfigSchema","presencePenalty","frequencyPenalty","stopSequences","thinkingConfig","includeThoughts","strip","gptPluginsBaseSchema","gptPluginsSchema","__assign","_e","_f","_g","_h","_j","_k","_l","_m","_o","_p","removeEmptyStrings","newObj","keys","forEach","FileSources","assistantSchema","compactAssistantSchema","agentsBaseSchema","agentsSchema","openAIBaseSchema","openAISchema","compactGoogleSchema","anthropicBaseSchema","anthropicSchema","compactPluginsSchema","tBannerSchema","bannerId","message","displayFrom","displayTo","compactAgentsBaseSchema","compactAgentsSchema","tModelSpecSchema","preset","showIconInMenu","showIconInHeader","authType","specsConfigSchema","enforce","prioritize","list","addedEndpoints","supportsFiles","azureAssistants","excelFileTypes","fullMimeTypesList","__spreadArray","codeInterpreterMimeTypesList","excelMimeTypes","textMimeTypes","applicationMimeTypes","imageMimeTypes","supportedMimeTypes","codeInterpreterMimeTypes","megabyte","mbToBytes","mb","defaultSizeLimit","assistantsFileConfig","fileLimit","fileSizeLimit","totalSizeLimit","disabled","fileConfig","endpoints","serverFileSizeLimit","avatarSizeLimit","clientImageResize","enabled","maxWidth","maxHeight","quality","checkType","fileType","supportedTypes","some","supportedMimeTypesSchema","any","refine","mimeTypes","every","mimeType","RegExp","endpointFileConfigSchema","fileConfigSchema","imageGeneration","percentage","px","convertStringsToRegex","patterns","reduce","acc","pattern","console","concat","FileContext","AuthTypeEnum","AuthorizationTypeEnum","TokenExchangeMethodEnum","SettingsViews","BaseOptionsSchema","iconPath","timeout","initTimeout","serverInstructions","oauth","authorization_url","url","token_url","client_id","client_secret","scope","redirect_uri","token_exchange_method","customUserVars","StdioOptionsSchema","extend","command","args","processedEnv","_i","entries","stderr","WebSocketOptionsSchema","pipe","protocol","URL","SSEOptionsSchema","headers","StreamableHTTPOptionsSchema","MCPOptionsSchema","MCPServersSchema","defaultSocialLogins","defaultRetrievalModels","excludedKeys","fileSourceSchema","getSchemaDefaults","schema","shape","map","ZodDefault","_def","defaultValue","fromEntries","Capabilities","AgentCapabilities","modelConfigSchema","deploymentName","version","azureBaseSchema","apiKey","serverless","instanceName","addParams","dropParams","forcePrompt","baseURL","additionalHeaders","azureGroupSchema","group","models","and","azureGroupConfigsSchema","RateLimitPrefix","defaultAssistantsVersion","baseEndpointSchema","streamRate","titlePrompt","titleModel","bedrockEndpointSchema","availableRegions","assistantEndpointSchema","disableBuilder","pollIntervalMs","timeoutMs","supportedIds","excludedIds","privateAssistants","retrievalModels","capabilities","code_interpreter","image_vision","retrieval","actions","fetch","userIdQuery","titleConvo","titleMethod","defaultAgentCapabilities","chain","ocr","agentsEndpointSchema","recursionLimit","maxRecursionLimit","allowedProviders","endpointSchema","safeParse","success","join","summarize","summaryModel","modelDisplayLabel","customParams","defaultParamsEndpoint","paramDefinitions","strict","customOrder","directEndpoint","titleMessageRole","azureEndpointSchema","groups","plugins","partial","ttsOpenaiSchema","voices","ttsAzureOpenAISchema","apiVersion","ttsElevenLabsSchema","websocketUrl","voice_settings","similarity_boost","stability","style","use_speaker_boost","pronunciation_dictionary_locators","ttsLocalaiSchema","backend","ttsSchema","openai","elevenlabs","localai","sttOpenaiSchema","sttAzureOpenAISchema","sttSchema","speechTab","conversationMode","advancedMode","speechToText","engineSTT","languageSTT","autoTranscribeAudio","decibelValue","autoSendText","textToSpeech","engineTTS","voice","languageTTS","automaticPlayback","playbackRate","cacheTTS","EImageOutputType","rateLimitSchema","fileUploads","ipMax","ipWindowInMinutes","userMax","userWindowInMinutes","conversationsImport","tts","stt","OCRStrategy","SearchCategories","SearchProviders","ScraperTypes","RerankerTypes","SafeSearchTypes","termsOfServiceSchema","externalUrl","openNewTab","modalAcceptance","modalTitle","modalContent","mcpServersSchema","placeholder","intefaceSchema","privacyPolicy","termsOfService","customWelcome","mcpServers","endpointsMenu","modelSelect","sidePanel","multiConvo","bookmarks","memories","presets","prompts","temporaryChat","temporaryChatRetention","runCode","webSearch","turnstileOptionsSchema","language","size","turnstileSchema","siteKey","KnownEndpoints","webSearchSchema","serperApiKey","firecrawlApiKey","firecrawlApiUrl","jinaApiKey","cohereApiKey","searchProvider","scraperType","rerankerType","scraperTimeout","safeSearch","MODERATE","ocrSchema","mistralModel","strategy","MISTRAL_OCR","balanceSchema","startBalance","autoRefillEnabled","refillIntervalValue","refillIntervalUnit","refillAmount","memorySchema","validKeys","tokenLimit","personalize","messageWindowSize","configSchema","cache","memory","secureImageLinks","imageOutputType","PNG","includedTools","filteredTools","interface","turnstile","fileStrategy","local","allowedDomains","registration","socialLogins","balance","speech","rateLimits","modelSpecs","all","gptPlugins","data","FetchTokenConfig","VisionModes","defaultEndpoints","chatGPTBrowser","alternateName","ollama","deepseek","xai","sharedOpenAIModels","bedrockModels","defaultModels","openAIModels","initialModelsConfig","initial","filter","str","EndpointURLs","modularEndpoints","supportsBalanceCheck","visionModels","InfiniteCollections","Time","CacheKeys","ViolationTypes","ErrorTypes","AuthKeys","ImageDetailCost","SettingsTabValues","STTProviders","TTSProviders","Constants","LocalStorageKeys","ForkOptions","CohereConstants","SystemCategories","imageGenTools","ContentTypes","StepTypes","ToolCallTypes","providerEndpointMap","bedrockInputSchema","s.tConversationSchema","_obj","budget_tokens","s.removeNullishValues","bedrockInputParser","catchall","knownKeys","additionalFields","typedData","anthropic_beta","endpointSchemas","getEnabledEndpoints","endpointsEnv","ENDPOINTS","enabledEndpoints","errorsToString","errors","field","path","getFirstDefinedValue","possibleValues","returnValue","possibleValues_1","extractGPTVersion","modelStr","gptMatch","suffix","extractOmniVersion","omniMatch","compactEndpointSchemas","SEPARATORS","ArtifactModes","ComponentTypes","SettingTypes","OptionTypes","utils","accordian","alertDialog","alert","avatar","badge","breadcrumb","button","calendar","card","carousel","checkbox","collapsible","dialog","drawer","dropdownMenu","hoverCard","menuBar","navigationMenu","pagination","popover","progress","radioGroup","select","separator","skeleton","slider","switchComponent","table","tabs","textarea","toast","toaster","toggleGroup","toggle","tooltip","useToast","shadcnComponents","essentialShadcnComponents","dropSchemaFields","fields","Array","isArray","newProps","propKey","dropped","convertToZodUnion","schemas","zodSchemas","subSchema","objSchema","convertJsonSchemaToZod","items","zodSchema","additionalProperties","passthrough","ZodObject","slice","allowEmptyObject","dropFields","transformOneOfAnyOf","oneOf","hasOptionalProperty","baseSchema","baseZodSchema","oneOfZodSchema","intersection","anyOf","anyOfZodSchema","droppedSchema","jsonSchema","first","rest","itemSchema","valueWithAny","fieldSchema_1","describe","fieldSchema_2","fieldSchema","objectSchema","partialNullable","additionalSchema","requiredSettingFields","ZodTypeToSettingType","ZodString","ZodNumber","ZodBoolean","webSearchAuth","providers","serper","scrapers","firecrawl","rerankers","jina","cohere","getWebSearchKeys","category","categoryObj","serviceObj","PermissionTypes","Permissions","webSearchKeys","extractWebSearchEnvVars","config","authFields","relevantKeys_1","k","SystemRoles","promptPermissionsSchema","SHARED_GLOBAL","USE","CREATE","bookmarkPermissionsSchema","memoryPermissionsSchema","UPDATE","READ","OPT_OUT","agentPermissionsSchema","multiConvoPermissionsSchema","temporaryChatPermissionsSchema","runCodePermissionsSchema","webSearchPermissionsSchema","permissionsSchema","PROMPTS","BOOKMARKS","MEMORIES","AGENTS","MULTI_CONVO","TEMPORARY_CHAT","RUN_CODE","WEB_SEARCH","DATE_RANGE","QueryKeys","MutationKeys","roleSchema","permissions","roleDefaults","ADMIN","USER","parse","_q","_r","_s","_t","_u","_v","_w","setTokenHeader","token","axios","defaults","common","buildQuery","params","query","v","encodeURIComponent","String","__rest","shareRoot","shareMessages","getSharedLinks","pageSize","sortBy","sortDirection","search","cursor","keysEndpoint","conversationsRoot","conversations","updateConversation","isAvatar","images","queryParams","URLSearchParams","toString","getPromptGroup","getPrompt","postPrompt","updatePromptGroup","deletePromptGroup","getRole","roleName","conversationTags","_post","post","JSON","stringify","sent","isRefreshing","failedQueue","refreshToken","retry","endpoints.refreshToken","dispatchTokenUpdatedEvent","window","dispatchEvent","CustomEvent","detail","processQueue","prom","reject","resolve","interceptors","response","use","__awaiter","originalRequest","Promise","status","_retry","warn","err_1","location","href","log","err_2","request","get","getResponse","postMultiPart","formData","postTTS","responseType","put","delete","deleteWithOptions","patch","payload","endpoints.addTagToConversation","endpoints.updateConversation","arg","toolId","toolParams","endpoints.agents","endpoints.assistants","endpoints.conversationTags","endpoints.postPrompt","endpoints.createSharedLink","action_id","endpoints.memory","groupId","endpoints.deletePrompt","endpoints.deletePromptGroup","endpoints.shareMessages","s.isAssistantsEndpoint","config.defaultAssistantsVersion","Accept","endpoints.conversationById","endpoints.conversations","userId","file_id","config.Constants","NEW_CONVO","PENDING_CONVO","endpoints.messages","endpoints.getPrompt","endpoints.getPromptGroup","endpoints.getPromptGroupsWithFilters","endpoints.getPromptsWithFilters","variables","limit","skip","endpoints.getRole","endpoints.getSharedLink","endpoints.getSharedLinks","version_index","endpoints.revertAgentVersion","endpoints.revokeUserKey","body","updates","endpoints.feedback","originalKey","preferences","Error","endpoints.updatePromptGroup","endpoints.updateSharedLink","endpoints.images","signal","requestConfig","endpoints.userKeyQuery","sha1","crypto","createHash","update","digest","createURL","domain","cleanDomain","replace","cleanPath","fullURL","schemaTypeHandlers","stringSchema","minLength","maxLength","numberSchema","minimum","maximum","integer","int","openAPISchemaToZod","FunctionSignature","this","prototype","toObjectTool","RequestConfig","basePath","method","operation","isConsequential","contentType","parameterLocations","RequestExecutor","authHeaders","setParams","operationHash","paramPattern","setAuth","metadata","auth","authorization_type","custom_auth_header","client_url","api_key","oauth_client_id","oauth_client_secret","oauth_token_expires_at","oauth_access_token","isApiKey","ServiceHttp","isOAuth","OAuth","Basic","basicToken","Buffer","from","Bearer","Custom","now","authToken","execute","_axios","create","bodyParams","loc","assign","getConfig","ActionRequest","defineProperty","createExecutor","executor","resolveRef","components","resolved","refPath_1","$ref","segment","sanitizeOperationId","baseDefinitions","labelCode","component","optionType","selectPlaceholder","searchPlaceholder","searchPlaceholderCode","selectPlaceholderCode","columnSpan","descriptionCode","placeholderCode","minTags","maxTags","createDefinition","base","overrides","chat","showDefault","openAIParams","range","medium","mistral","meta","googleConfig","googleCol1","googleCol2","openAICol1","openAICol2","anthropicConfig","anthropicCol1","anthropicCol2","bedrockAnthropic","bedrockMistral","bedrockCohere","bedrockGeneral","bedrockAnthropicCol1","bedrockAnthropicCol2","bedrockMistralCol1","bedrockMistralCol2","bedrockCohereCol1","bedrockCohereCol2","bedrockGeneralCol1","bedrockGeneralCol2","paramSettings","Anthropic","MistralAI","Cohere","Meta","AI21","Amazon","DeepSeek","openAIColumns","col1","col2","bedrockGeneralColumns","presetSettings","agentParamSettings","updatedData","Math","floor","configureThinking","source","azure","c","cs","cpp","h","md","php","py","rb","tex","js","sh","ts","tar","zip","yml","yaml","tsv","submission","conversation","userMessage","endpointOption","isEdited","isContinued","isTemporary","ephemeralAgent","s.tConvoUpdateSchema","server","s.EModelEndpoint","assistant","conversation_starters","separators","lastIndex","separators_1","lastIndexOf","settings","schemaFields","settings_1","setting","minText","maxText","Number","Boolean","Enum","ZodArray","customGoogle","customOpenAI","possibleValues_2","_mdl","_cgl","_ml","endpointKey","modelKey","tool","has","checkAuth","isUserProvided","PROVIDERS","webSearchConfig","specificService","SCRAPERS","RERANKERS","services","services_1","service","serviceConfig","requiredKeys","optionalKeys","typedKey","requiredAuthFields","optionalAuthFields","allKeys","allAuthFields","optionalSet","loadAuthValues","throwError","authValues","allFieldsAuthenticated","j","authResult","categories","authTypes","categories_1","isCategoryAuthenticated","USER_PROVIDED","SYSTEM_DEFINED","groupName","groupConfig","groupMap","firstModelName","modelDetails","azureOptions","azureOpenAIApiVersion","azureOpenAIApiKey","azureOpenAIApiInstanceName","azureOpenAIApiDeploymentName","modelGroupMap","modelConfig","result_1","apiKeyValue","dynamic","mergedConfig","dynamicEndpoint","mergedEndpoint","openapiSpec","generateZodSchemas","functionSignatures","requestBuilders","baseUrl","servers","paths","methods","paramLocations","operationObj","defaultOperationId","operationId","summary","isStrict","parametersSchema","resolvedParam","paramName","paramSchema","in","requestBody","resolvedSchema","apply","functionSignature","actionRequest","endpointsConfig","endpointKeys","defaultCustomIndex","indexOf","accumulatedConfig","currentEndpointKey","isCustom","convo","secondaryModels","contentParts","skipReasoning","contentParts_1","TEXT","textValue","THINK","think","currentDate","dayjs","format","dayNumber","day","combinedDate","currentDatetime","isoDatetime","current_date","current_user","iso_datetime","current_datetime","specString","parsedSpec","load","httpMethod","responses","statusCode","refName","pop","configs","isValid","modelNames","groupDeploymentName","groupVersion","modelDeploymentName","modelVersion","columnsSet","settings_2","columns","code","ZodIssueCode","add","next","settings_3","requiredSettingFields_1","settingTypes","Tags","Input","Textarea","Slider","includeInput","round","Checkbox","Switch","Dropdown","Combobox","conversationSchema","zodType","typeName","isNaN","ZodError","additionalModels","availableModels","visionModel"],"mappings":"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"}