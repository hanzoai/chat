{"version":3,"file":"index.es.js","sources":["../src/utils.ts","../src/types/assistants.ts","../src/feedback.ts","../src/schemas.ts","../src/types/files.ts","../src/models.ts","../src/file-config.ts","../src/types/agents.ts","../src/mcp.ts","../src/config.ts","../src/types/runs.ts","../src/bedrock.ts","../src/parsers.ts","../src/azure.ts","../src/artifacts.ts","../src/generate.ts","../src/ocr.ts","../src/zod.ts","../src/web.ts","../src/permissions.ts","../src/memory.ts","../src/roles.ts","../src/types/web.ts","../src/keys.ts","../src/headers-helpers.ts","../src/api-endpoints.ts","../src/request.ts","../src/data-service.ts","../src/actions.ts","../src/createPayload.ts","../src/parameterSettings.ts"],"sourcesContent":["export const envVarRegex = /^\\${(.+)}$/;\n\n/** Extracts the environment variable name from a template literal string */\nexport function extractVariableName(value: string): string | null {\n  if (!value) {\n    return null;\n  }\n\n  const match = value.trim().match(envVarRegex);\n  return match ? match[1] : null;\n}\n\n/** Extracts the value of an environment variable from a string. */\nexport function extractEnvVariable(value: string) {\n  if (!value) {\n    return value;\n  }\n\n  // Trim the input\n  const trimmed = value.trim();\n\n  // Special case: if it's just a single environment variable\n  const singleMatch = trimmed.match(envVarRegex);\n  if (singleMatch) {\n    const varName = singleMatch[1];\n    return process.env[varName] || trimmed;\n  }\n\n  // For multiple variables, process them using a regex loop\n  const regex = /\\${([^}]+)}/g;\n  let result = trimmed;\n\n  // First collect all matches and their positions\n  const matches = [];\n  let match;\n  while ((match = regex.exec(trimmed)) !== null) {\n    matches.push({\n      fullMatch: match[0],\n      varName: match[1],\n      index: match.index,\n    });\n  }\n\n  // Process matches in reverse order to avoid position shifts\n  for (let i = matches.length - 1; i >= 0; i--) {\n    const { fullMatch, varName, index } = matches[i];\n    const envValue = process.env[varName] || fullMatch;\n\n    // Replace at exact position\n    result = result.substring(0, index) + envValue + result.substring(index + fullMatch.length);\n  }\n\n  return result;\n}\n","import type { OpenAPIV3 } from 'openapi-types';\nimport type { AssistantsEndpoint, AgentProvider } from 'src/schemas';\nimport type { ContentTypes } from './runs';\nimport type { Agents } from './agents';\nimport type { TFile } from './files';\nimport { ArtifactModes } from 'src/artifacts';\n\nexport type Schema = OpenAPIV3.SchemaObject & { description?: string };\nexport type Reference = OpenAPIV3.ReferenceObject & { description?: string };\n\nexport type Metadata = {\n  avatar?: string;\n  author?: string;\n} & {\n  [key: string]: unknown;\n};\n\nexport enum Tools {\n  execute_code = 'execute_code',\n  code_interpreter = 'code_interpreter',\n  file_search = 'file_search',\n  web_search = 'web_search',\n  retrieval = 'retrieval',\n  function = 'function',\n  memory = 'memory',\n}\n\nexport enum EToolResources {\n  code_interpreter = 'code_interpreter',\n  execute_code = 'execute_code',\n  file_search = 'file_search',\n  image_edit = 'image_edit',\n  ocr = 'ocr',\n}\n\nexport type Tool = {\n  [type: string]: Tools;\n};\n\nexport type FunctionTool = {\n  type: Tools;\n  function?: {\n    description: string;\n    name: string;\n    parameters: Record<string, unknown>;\n    strict?: boolean;\n    additionalProperties?: boolean; // must be false if strict is true https://platform.openai.com/docs/guides/structured-outputs/some-type-specific-keywords-are-not-yet-supported\n  };\n};\n\n/**\n * A set of resources that are used by the assistant's tools. The resources are\n * specific to the type of tool. For example, the `code_interpreter` tool requires\n * a list of file IDs, while the `file_search` tool requires a list of vector store\n * IDs.\n */\nexport interface ToolResources {\n  code_interpreter?: CodeInterpreterResource;\n  file_search?: FileSearchResource;\n}\nexport interface CodeInterpreterResource {\n  /**\n   * A list of [file](https://platform.openai.com/docs/api-reference/files) IDs made\n   * available to the `code_interpreter`` tool. There can be a maximum of 20 files\n   * associated with the tool.\n   */\n  file_ids?: Array<string>;\n}\n\nexport interface FileSearchResource {\n  /**\n   * The ID of the\n   * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object)\n   * attached to this assistant. There can be a maximum of 1 vector store attached to\n   * the assistant.\n   */\n  vector_store_ids?: Array<string>;\n}\n\n/* Assistant types */\n\nexport type Assistant = {\n  id: string;\n  created_at: number;\n  description: string | null;\n  file_ids?: string[];\n  instructions: string | null;\n  conversation_starters?: string[];\n  metadata: Metadata | null;\n  model: string;\n  name: string | null;\n  object: string;\n  tools?: FunctionTool[];\n  tool_resources?: ToolResources;\n};\n\nexport type TAssistantsMap = Record<AssistantsEndpoint, Record<string, Assistant>>;\n\nexport type AssistantCreateParams = {\n  model: string;\n  description?: string | null;\n  file_ids?: string[];\n  instructions?: string | null;\n  conversation_starters?: string[];\n  metadata?: Metadata | null;\n  name?: string | null;\n  tools?: Array<FunctionTool | string>;\n  endpoint: AssistantsEndpoint;\n  version: number | string;\n  append_current_datetime?: boolean;\n};\n\nexport type AssistantUpdateParams = {\n  model?: string;\n  description?: string | null;\n  file_ids?: string[];\n  instructions?: string | null;\n  conversation_starters?: string[] | null;\n  metadata?: Metadata | null;\n  name?: string | null;\n  tools?: Array<FunctionTool | string>;\n  tool_resources?: ToolResources;\n  endpoint: AssistantsEndpoint;\n  append_current_datetime?: boolean;\n};\n\nexport type AssistantListParams = {\n  limit?: number;\n  before?: string | null;\n  after?: string | null;\n  order?: 'asc' | 'desc';\n  endpoint: AssistantsEndpoint;\n};\n\nexport type AssistantListResponse = {\n  object: string;\n  data: Assistant[];\n  first_id: string;\n  last_id: string;\n  has_more: boolean;\n};\n\nexport type File = {\n  file_id: string;\n  id?: string;\n  temp_file_id?: string;\n  bytes: number;\n  created_at: number;\n  filename: string;\n  object: string;\n  purpose: 'fine-tune' | 'fine-tune-results' | 'assistants' | 'assistants_output';\n};\n\n/* Agent types */\n\nexport type AgentParameterValue = number | string | null;\n\nexport type AgentModelParameters = {\n  model?: string;\n  temperature: AgentParameterValue;\n  maxContextTokens: AgentParameterValue;\n  max_context_tokens: AgentParameterValue;\n  max_output_tokens: AgentParameterValue;\n  top_p: AgentParameterValue;\n  frequency_penalty: AgentParameterValue;\n  presence_penalty: AgentParameterValue;\n};\n\nexport interface AgentBaseResource {\n  /**\n   * A list of file IDs made available to the tool.\n   */\n  file_ids?: Array<string>;\n  /**\n   * A list of files already fetched.\n   */\n  files?: Array<TFile>;\n}\n\nexport interface AgentToolResources {\n  [EToolResources.image_edit]?: AgentBaseResource;\n  [EToolResources.execute_code]?: ExecuteCodeResource;\n  [EToolResources.file_search]?: AgentFileResource;\n  [EToolResources.ocr]?: AgentBaseResource;\n}\n/**\n * A resource for the execute_code tool.\n * Contains file IDs made available to the tool (max 20 files) and already fetched files.\n */\nexport type ExecuteCodeResource = AgentBaseResource;\n\nexport interface AgentFileResource extends AgentBaseResource {\n  /**\n   * The ID of the vector store attached to this agent. There\n   * can be a maximum of 1 vector store attached to the agent.\n   */\n  vector_store_ids?: Array<string>;\n}\n\nexport type Agent = {\n  id: string;\n  name: string | null;\n  author?: string | null;\n  /** The original custom endpoint name, lowercased */\n  endpoint?: string | null;\n  authorName?: string | null;\n  description: string | null;\n  created_at: number;\n  avatar: AgentAvatar | null;\n  instructions: string | null;\n  additional_instructions?: string | null;\n  tools?: string[];\n  projectIds?: string[];\n  tool_kwargs?: Record<string, unknown>;\n  metadata?: Record<string, unknown>;\n  provider: AgentProvider;\n  model: string | null;\n  model_parameters: AgentModelParameters;\n  conversation_starters?: string[];\n  isCollaborative?: boolean;\n  tool_resources?: AgentToolResources;\n  agent_ids?: string[];\n  end_after_tools?: boolean;\n  hide_sequential_outputs?: boolean;\n  artifacts?: ArtifactModes;\n  recursion_limit?: number;\n  version?: number;\n};\n\nexport type TAgentsMap = Record<string, Agent | undefined>;\n\nexport type AgentCreateParams = {\n  name?: string | null;\n  description?: string | null;\n  avatar?: AgentAvatar | null;\n  file_ids?: string[];\n  instructions?: string | null;\n  tools?: Array<FunctionTool | string>;\n  provider: AgentProvider;\n  model: string | null;\n  model_parameters: AgentModelParameters;\n} & Pick<\n  Agent,\n  'agent_ids' | 'end_after_tools' | 'hide_sequential_outputs' | 'artifacts' | 'recursion_limit'\n>;\n\nexport type AgentUpdateParams = {\n  name?: string | null;\n  description?: string | null;\n  avatar?: AgentAvatar | null;\n  file_ids?: string[];\n  instructions?: string | null;\n  tools?: Array<FunctionTool | string>;\n  tool_resources?: ToolResources;\n  provider?: AgentProvider;\n  model?: string | null;\n  model_parameters?: AgentModelParameters;\n  projectIds?: string[];\n  removeProjectIds?: string[];\n  isCollaborative?: boolean;\n} & Pick<\n  Agent,\n  'agent_ids' | 'end_after_tools' | 'hide_sequential_outputs' | 'artifacts' | 'recursion_limit'\n>;\n\nexport type AgentListParams = {\n  limit?: number;\n  before?: string | null;\n  after?: string | null;\n  order?: 'asc' | 'desc';\n  provider?: AgentProvider;\n};\n\nexport type AgentListResponse = {\n  object: string;\n  data: Agent[];\n  first_id: string;\n  last_id: string;\n  has_more: boolean;\n};\n\nexport type AgentFile = {\n  file_id: string;\n  id?: string;\n  temp_file_id?: string;\n  bytes: number;\n  created_at: number;\n  filename: string;\n  object: string;\n  purpose: 'fine-tune' | 'fine-tune-results' | 'agents' | 'agents_output';\n};\n\n/**\n * Details of the Code Interpreter tool call the run step was involved in.\n * Includes the tool call ID, the code interpreter definition, and the type of tool call.\n */\nexport type CodeToolCall = {\n  id: string; // The ID of the tool call.\n  code_interpreter: {\n    input: string; // The input to the Code Interpreter tool call.\n    outputs: Array<Record<string, unknown>>; // The outputs from the Code Interpreter tool call.\n  };\n  type: 'code_interpreter'; // The type of tool call, always 'code_interpreter'.\n};\n\n/**\n * Details of a Function tool call the run step was involved in.\n * Includes the tool call ID, the function definition, and the type of tool call.\n */\nexport type FunctionToolCall = {\n  id: string; // The ID of the tool call object.\n  function: {\n    arguments: string; // The arguments passed to the function.\n    name: string; // The name of the function.\n    output: string | null; // The output of the function, null if not submitted.\n  };\n  type: 'function'; // The type of tool call, always 'function'.\n};\n\n/**\n * Details of a Retrieval tool call the run step was involved in.\n * Includes the tool call ID and the type of tool call.\n */\nexport type RetrievalToolCall = {\n  id: string; // The ID of the tool call object.\n  retrieval: unknown; // An empty object for now.\n  type: 'retrieval'; // The type of tool call, always 'retrieval'.\n};\n\n/**\n * Details of a Retrieval tool call the run step was involved in.\n * Includes the tool call ID and the type of tool call.\n */\nexport type FileSearchToolCall = {\n  id: string; // The ID of the tool call object.\n  file_search: unknown; // An empty object for now.\n  type: 'file_search'; // The type of tool call, always 'retrieval'.\n};\n\n/**\n * Details of the tool calls involved in a run step.\n * Can be associated with one of three types of tools: `code_interpreter`, `retrieval`, or `function`.\n */\nexport type ToolCallsStepDetails = {\n  tool_calls: Array<CodeToolCall | RetrievalToolCall | FileSearchToolCall | FunctionToolCall>; // An array of tool calls the run step was involved in.\n  type: 'tool_calls'; // Always 'tool_calls'.\n};\n\nexport type ImageFile = TFile & {\n  /**\n   * The [File](https://platform.openai.com/docs/api-reference/files) ID of the image\n   * in the message content.\n   */\n  file_id: string;\n  filename: string;\n  filepath: string;\n  height: number;\n  width: number;\n  /**\n   * Prompt used to generate the image if applicable.\n   */\n  prompt?: string;\n  /**\n   * Additional metadata used to generate or about the image/tool_call.\n   */\n  metadata?: Record<string, unknown>;\n};\n\n// FileCitation.ts\nexport type FileCitation = {\n  end_index: number;\n  file_citation: FileCitationDetails;\n  start_index: number;\n  text: string;\n  type: 'file_citation';\n};\n\nexport type FileCitationDetails = {\n  file_id: string;\n  quote: string;\n};\n\nexport type FilePath = {\n  end_index: number;\n  file_path: FilePathDetails;\n  start_index: number;\n  text: string;\n  type: 'file_path';\n};\n\nexport type FilePathDetails = {\n  file_id: string;\n};\n\nexport type Text = {\n  annotations?: Array<FileCitation | FilePath>;\n  value: string;\n};\n\nexport enum AnnotationTypes {\n  FILE_CITATION = 'file_citation',\n  FILE_PATH = 'file_path',\n}\n\nexport enum StepStatus {\n  IN_PROGRESS = 'in_progress',\n  CANCELLED = 'cancelled',\n  FAILED = 'failed',\n  COMPLETED = 'completed',\n  EXPIRED = 'expired',\n}\n\nexport enum MessageContentTypes {\n  TEXT = 'text',\n  IMAGE_FILE = 'image_file',\n}\n\n//enum for RunStatus\n// The status of the run: queued, in_progress, requires_action, cancelling, cancelled, failed, completed, or expired.\nexport enum RunStatus {\n  QUEUED = 'queued',\n  IN_PROGRESS = 'in_progress',\n  REQUIRES_ACTION = 'requires_action',\n  CANCELLING = 'cancelling',\n  CANCELLED = 'cancelled',\n  FAILED = 'failed',\n  COMPLETED = 'completed',\n  EXPIRED = 'expired',\n}\n\nexport type PartMetadata = {\n  progress?: number;\n  asset_pointer?: string;\n  status?: string;\n  action?: boolean;\n  auth?: string;\n  expires_at?: number;\n};\n\nexport type ContentPart = (\n  | CodeToolCall\n  | RetrievalToolCall\n  | FileSearchToolCall\n  | FunctionToolCall\n  | Agents.AgentToolCall\n  | ImageFile\n  | Text\n) &\n  PartMetadata;\n\nexport type TMessageContentParts =\n  | { type: ContentTypes.ERROR; text?: string | (Text & PartMetadata); error?: string }\n  | { type: ContentTypes.THINK; think: string | (Text & PartMetadata) }\n  | { type: ContentTypes.TEXT; text: string | (Text & PartMetadata); tool_call_ids?: string[] }\n  | {\n      type: ContentTypes.TOOL_CALL;\n      tool_call: (\n        | CodeToolCall\n        | RetrievalToolCall\n        | FileSearchToolCall\n        | FunctionToolCall\n        | Agents.AgentToolCall\n      ) &\n        PartMetadata;\n    }\n  | { type: ContentTypes.IMAGE_FILE; image_file: ImageFile & PartMetadata }\n  | Agents.AgentUpdate\n  | Agents.MessageContentImageUrl;\n\nexport type StreamContentData = TMessageContentParts & {\n  /** The index of the current content part */\n  index: number;\n  /** The current text content was already served but edited to replace elements therein */\n  edited?: boolean;\n};\n\nexport type TContentData = StreamContentData & {\n  messageId: string;\n  conversationId: string;\n  userMessageId: string;\n  thread_id: string;\n  stream?: boolean;\n};\n\nexport const actionDelimiter = '_action_';\nexport const actionDomainSeparator = '---';\nexport const hostImageIdSuffix = '_host_copy';\nexport const hostImageNamePrefix = 'host_copy_';\n\nexport type AssistantAvatar = {\n  filepath: string;\n  source: string;\n};\n\nexport type AssistantDocument = {\n  user: string;\n  assistant_id: string;\n  conversation_starters?: string[];\n  avatar?: AssistantAvatar;\n  access_level?: number;\n  file_ids?: string[];\n  actions?: string[];\n  createdAt?: Date;\n  updatedAt?: Date;\n  append_current_datetime?: boolean;\n};\n\n/* Agent types */\n\nexport type AgentAvatar = {\n  filepath: string;\n  source: string;\n};\n\nexport enum FilePurpose {\n  Vision = 'vision',\n  FineTune = 'fine-tune',\n  FineTuneResults = 'fine-tune-results',\n  Assistants = 'assistants',\n  AssistantsOutput = 'assistants_output',\n}\n\nexport const defaultOrderQuery: {\n  order: 'desc';\n  limit: 100;\n} = {\n  order: 'desc',\n  limit: 100,\n};\n\nexport enum AssistantStreamEvents {\n  ThreadCreated = 'thread.created',\n  ThreadRunCreated = 'thread.run.created',\n  ThreadRunQueued = 'thread.run.queued',\n  ThreadRunInProgress = 'thread.run.in_progress',\n  ThreadRunRequiresAction = 'thread.run.requires_action',\n  ThreadRunCompleted = 'thread.run.completed',\n  ThreadRunFailed = 'thread.run.failed',\n  ThreadRunCancelling = 'thread.run.cancelling',\n  ThreadRunCancelled = 'thread.run.cancelled',\n  ThreadRunExpired = 'thread.run.expired',\n  ThreadRunStepCreated = 'thread.run.step.created',\n  ThreadRunStepInProgress = 'thread.run.step.in_progress',\n  ThreadRunStepCompleted = 'thread.run.step.completed',\n  ThreadRunStepFailed = 'thread.run.step.failed',\n  ThreadRunStepCancelled = 'thread.run.step.cancelled',\n  ThreadRunStepExpired = 'thread.run.step.expired',\n  ThreadRunStepDelta = 'thread.run.step.delta',\n  ThreadMessageCreated = 'thread.message.created',\n  ThreadMessageInProgress = 'thread.message.in_progress',\n  ThreadMessageCompleted = 'thread.message.completed',\n  ThreadMessageIncomplete = 'thread.message.incomplete',\n  ThreadMessageDelta = 'thread.message.delta',\n  ErrorEvent = 'error',\n}\n","import { z } from 'zod';\n\nexport type TFeedbackRating = 'thumbsUp' | 'thumbsDown';\nexport const FEEDBACK_RATINGS = ['thumbsUp', 'thumbsDown'] as const;\n\nexport const FEEDBACK_REASON_KEYS = [\n  // Down\n  'not_matched',\n  'inaccurate',\n  'bad_style',\n  'missing_image',\n  'unjustified_refusal',\n  'not_helpful',\n  'other',\n  // Up\n  'accurate_reliable',\n  'creative_solution',\n  'clear_well_written',\n  'attention_to_detail',\n] as const;\n\nexport type TFeedbackTagKey = (typeof FEEDBACK_REASON_KEYS)[number];\n\nexport interface TFeedbackTag {\n  key: TFeedbackTagKey;\n  label: string;\n  direction: TFeedbackRating;\n  icon: string;\n}\n\n// --- Tag Registry ---\nexport const FEEDBACK_TAGS: TFeedbackTag[] = [\n  // Thumbs Down\n  {\n    key: 'not_matched',\n    label: 'com_ui_feedback_tag_not_matched',\n    direction: 'thumbsDown',\n    icon: 'AlertCircle',\n  },\n  {\n    key: 'inaccurate',\n    label: 'com_ui_feedback_tag_inaccurate',\n    direction: 'thumbsDown',\n    icon: 'AlertCircle',\n  },\n  {\n    key: 'bad_style',\n    label: 'com_ui_feedback_tag_bad_style',\n    direction: 'thumbsDown',\n    icon: 'PenTool',\n  },\n  {\n    key: 'missing_image',\n    label: 'com_ui_feedback_tag_missing_image',\n    direction: 'thumbsDown',\n    icon: 'ImageOff',\n  },\n  {\n    key: 'unjustified_refusal',\n    label: 'com_ui_feedback_tag_unjustified_refusal',\n    direction: 'thumbsDown',\n    icon: 'Ban',\n  },\n  {\n    key: 'not_helpful',\n    label: 'com_ui_feedback_tag_not_helpful',\n    direction: 'thumbsDown',\n    icon: 'ThumbsDown',\n  },\n  {\n    key: 'other',\n    label: 'com_ui_feedback_tag_other',\n    direction: 'thumbsDown',\n    icon: 'HelpCircle',\n  },\n  // Thumbs Up\n  {\n    key: 'accurate_reliable',\n    label: 'com_ui_feedback_tag_accurate_reliable',\n    direction: 'thumbsUp',\n    icon: 'CheckCircle',\n  },\n  {\n    key: 'creative_solution',\n    label: 'com_ui_feedback_tag_creative_solution',\n    direction: 'thumbsUp',\n    icon: 'Lightbulb',\n  },\n  {\n    key: 'clear_well_written',\n    label: 'com_ui_feedback_tag_clear_well_written',\n    direction: 'thumbsUp',\n    icon: 'PenTool',\n  },\n  {\n    key: 'attention_to_detail',\n    label: 'com_ui_feedback_tag_attention_to_detail',\n    direction: 'thumbsUp',\n    icon: 'Search',\n  },\n];\n\nexport function getTagsForRating(rating: TFeedbackRating): TFeedbackTag[] {\n  return FEEDBACK_TAGS.filter((tag) => tag.direction === rating);\n}\n\nexport const feedbackTagKeySchema = z.enum(FEEDBACK_REASON_KEYS);\nexport const feedbackRatingSchema = z.enum(FEEDBACK_RATINGS);\n\nexport const feedbackSchema = z.object({\n  rating: feedbackRatingSchema,\n  tag: feedbackTagKeySchema,\n  text: z.string().max(1024).optional(),\n});\n\nexport type TMinimalFeedback = z.infer<typeof feedbackSchema>;\n\nexport type TFeedback = {\n  rating: TFeedbackRating;\n  tag: TFeedbackTag | undefined;\n  text?: string;\n};\n\nexport function toMinimalFeedback(feedback: TFeedback | undefined): TMinimalFeedback | undefined {\n  if (!feedback?.rating || !feedback?.tag || !feedback.tag.key) {\n    return undefined;\n  }\n\n  return {\n    rating: feedback.rating,\n    tag: feedback.tag.key,\n    text: feedback.text,\n  };\n}\n\nexport function getTagByKey(key: TFeedbackTagKey | undefined): TFeedbackTag | undefined {\n  if (!key) {\n    return undefined;\n  }\n  return FEEDBACK_TAGS.find((tag) => tag.key === key);\n}\n","import { z } from 'zod';\nimport { Tools } from './types/assistants';\nimport type { TMessageContentParts, FunctionTool, FunctionToolCall } from './types/assistants';\nimport { TFeedback, feedbackSchema } from './feedback';\nimport type { SearchResultData } from './types/web';\nimport type { TFile } from './types/files';\n\nexport const isUUID = z.string().uuid();\n\nexport enum AuthType {\n  OVERRIDE_AUTH = 'override_auth',\n  USER_PROVIDED = 'user_provided',\n  SYSTEM_DEFINED = 'system_defined',\n}\n\nexport const authTypeSchema = z.nativeEnum(AuthType);\n\nexport enum EModelEndpoint {\n  azureOpenAI = 'azureOpenAI',\n  openAI = 'openAI',\n  google = 'google',\n  anthropic = 'anthropic',\n  assistants = 'assistants',\n  azureAssistants = 'azureAssistants',\n  agents = 'agents',\n  custom = 'custom',\n  bedrock = 'bedrock',\n  /** @deprecated */\n  chatGPTBrowser = 'chatGPTBrowser',\n  /** @deprecated */\n  gptPlugins = 'gptPlugins',\n}\n\nexport const paramEndpoints = new Set<EModelEndpoint | string>([\n  EModelEndpoint.agents,\n  EModelEndpoint.openAI,\n  EModelEndpoint.bedrock,\n  EModelEndpoint.azureOpenAI,\n  EModelEndpoint.anthropic,\n  EModelEndpoint.custom,\n  EModelEndpoint.google,\n]);\n\nexport enum BedrockProviders {\n  AI21 = 'ai21',\n  Amazon = 'amazon',\n  Anthropic = 'anthropic',\n  Cohere = 'cohere',\n  Meta = 'meta',\n  MistralAI = 'mistral',\n  StabilityAI = 'stability',\n  DeepSeek = 'deepseek',\n}\n\nexport const getModelKey = (endpoint: EModelEndpoint | string, model: string) => {\n  if (endpoint === EModelEndpoint.bedrock) {\n    const parts = model.split('.');\n    const provider = [parts[0], parts[1]].find((part) =>\n      Object.values(BedrockProviders).includes(part as BedrockProviders),\n    );\n    return (provider ?? parts[0]) as BedrockProviders;\n  }\n  return model;\n};\n\nexport const getSettingsKeys = (endpoint: EModelEndpoint | string, model: string) => {\n  const endpointKey = endpoint;\n  const modelKey = getModelKey(endpointKey, model);\n  const combinedKey = `${endpointKey}-${modelKey}`;\n  return [combinedKey, endpointKey];\n};\n\nexport type AssistantsEndpoint = EModelEndpoint.assistants | EModelEndpoint.azureAssistants;\n\nexport const isAssistantsEndpoint = (_endpoint?: AssistantsEndpoint | null | string): boolean => {\n  const endpoint = _endpoint ?? '';\n  if (!endpoint) {\n    return false;\n  }\n  return endpoint.toLowerCase().endsWith(EModelEndpoint.assistants);\n};\n\nexport type AgentProvider = Exclude<keyof typeof EModelEndpoint, EModelEndpoint.agents> | string;\n\nexport const isAgentsEndpoint = (_endpoint?: EModelEndpoint.agents | null | string): boolean => {\n  const endpoint = _endpoint ?? '';\n  if (!endpoint) {\n    return false;\n  }\n  return endpoint === EModelEndpoint.agents;\n};\n\nexport const isParamEndpoint = (\n  endpoint: EModelEndpoint | string,\n  endpointType?: EModelEndpoint | string,\n): boolean => {\n  if (paramEndpoints.has(endpoint)) {\n    return true;\n  }\n\n  if (endpointType != null) {\n    return paramEndpoints.has(endpointType);\n  }\n\n  return false;\n};\n\nexport enum ImageDetail {\n  low = 'low',\n  auto = 'auto',\n  high = 'high',\n}\n\nexport enum ReasoningEffort {\n  low = 'low',\n  medium = 'medium',\n  high = 'high',\n}\n\nexport const imageDetailNumeric = {\n  [ImageDetail.low]: 0,\n  [ImageDetail.auto]: 1,\n  [ImageDetail.high]: 2,\n};\n\nexport const imageDetailValue = {\n  0: ImageDetail.low,\n  1: ImageDetail.auto,\n  2: ImageDetail.high,\n};\n\nexport const eImageDetailSchema = z.nativeEnum(ImageDetail);\nexport const eReasoningEffortSchema = z.nativeEnum(ReasoningEffort);\n\nexport const defaultAssistantFormValues = {\n  assistant: '',\n  id: '',\n  name: '',\n  description: '',\n  instructions: '',\n  conversation_starters: [],\n  model: '',\n  functions: [],\n  code_interpreter: false,\n  image_vision: false,\n  retrieval: false,\n  append_current_datetime: false,\n};\n\nexport const defaultAgentFormValues = {\n  agent: {},\n  id: '',\n  name: '',\n  description: '',\n  instructions: '',\n  model: '',\n  model_parameters: {},\n  tools: [],\n  provider: {},\n  projectIds: [],\n  artifacts: '',\n  isCollaborative: false,\n  recursion_limit: undefined,\n  [Tools.execute_code]: false,\n  [Tools.file_search]: false,\n  [Tools.web_search]: false,\n};\n\nexport const ImageVisionTool: FunctionTool = {\n  type: Tools.function,\n  [Tools.function]: {\n    name: 'image_vision',\n    description: 'Get detailed text descriptions for all current image attachments.',\n    parameters: {\n      type: 'object',\n      properties: {},\n      required: [],\n    },\n  },\n};\n\nexport const isImageVisionTool = (tool: FunctionTool | FunctionToolCall) =>\n  tool.type === 'function' && tool.function?.name === ImageVisionTool.function?.name;\n\nexport const openAISettings = {\n  model: {\n    default: 'gpt-4o-mini' as const,\n  },\n  temperature: {\n    min: 0 as const,\n    max: 2 as const,\n    step: 0.01 as const,\n    default: 1 as const,\n  },\n  top_p: {\n    min: 0 as const,\n    max: 1 as const,\n    step: 0.01 as const,\n    default: 1 as const,\n  },\n  presence_penalty: {\n    min: 0 as const,\n    max: 2 as const,\n    step: 0.01 as const,\n    default: 0 as const,\n  },\n  frequency_penalty: {\n    min: 0 as const,\n    max: 2 as const,\n    step: 0.01 as const,\n    default: 0 as const,\n  },\n  resendFiles: {\n    default: true as const,\n  },\n  maxContextTokens: {\n    default: undefined,\n  },\n  max_tokens: {\n    default: undefined,\n  },\n  imageDetail: {\n    default: ImageDetail.auto as const,\n    min: 0 as const,\n    max: 2 as const,\n    step: 1 as const,\n  },\n};\n\nexport const googleSettings = {\n  model: {\n    default: 'gemini-1.5-flash-latest' as const,\n  },\n  maxOutputTokens: {\n    min: 1 as const,\n    max: 64000 as const,\n    step: 1 as const,\n    default: 8192 as const,\n  },\n  temperature: {\n    min: 0 as const,\n    max: 2 as const,\n    step: 0.01 as const,\n    default: 1 as const,\n  },\n  topP: {\n    min: 0 as const,\n    max: 1 as const,\n    step: 0.01 as const,\n    default: 0.95 as const,\n  },\n  topK: {\n    min: 1 as const,\n    max: 40 as const,\n    step: 1 as const,\n    default: 40 as const,\n  },\n  thinking: {\n    default: true as const,\n  },\n  thinkingBudget: {\n    min: -1 as const,\n    max: 32768 as const,\n    step: 1 as const,\n    /** `-1` = Dynamic Thinking, meaning the model will adjust\n     * the budget based on the complexity of the request.\n     */\n    default: -1 as const,\n  },\n};\n\nconst ANTHROPIC_MAX_OUTPUT = 128000 as const;\nconst DEFAULT_MAX_OUTPUT = 8192 as const;\nconst LEGACY_ANTHROPIC_MAX_OUTPUT = 4096 as const;\nexport const anthropicSettings = {\n  model: {\n    default: 'claude-3-5-sonnet-latest' as const,\n  },\n  temperature: {\n    min: 0 as const,\n    max: 1 as const,\n    step: 0.01 as const,\n    default: 1 as const,\n  },\n  promptCache: {\n    default: true as const,\n  },\n  thinking: {\n    default: true as const,\n  },\n  thinkingBudget: {\n    min: 1024 as const,\n    step: 100 as const,\n    max: 200000 as const,\n    default: 2000 as const,\n  },\n  maxOutputTokens: {\n    min: 1 as const,\n    max: ANTHROPIC_MAX_OUTPUT,\n    step: 1 as const,\n    default: DEFAULT_MAX_OUTPUT,\n    reset: (modelName: string) => {\n      if (/claude-3[-.]5-sonnet/.test(modelName) || /claude-3[-.]7/.test(modelName)) {\n        return DEFAULT_MAX_OUTPUT;\n      }\n\n      return 4096;\n    },\n    set: (value: number, modelName: string) => {\n      if (\n        !(/claude-3[-.]5-sonnet/.test(modelName) || /claude-3[-.]7/.test(modelName)) &&\n        value > LEGACY_ANTHROPIC_MAX_OUTPUT\n      ) {\n        return LEGACY_ANTHROPIC_MAX_OUTPUT;\n      }\n\n      return value;\n    },\n  },\n  topP: {\n    min: 0 as const,\n    max: 1 as const,\n    step: 0.01 as const,\n    default: 0.7 as const,\n  },\n  topK: {\n    min: 1 as const,\n    max: 40 as const,\n    step: 1 as const,\n    default: 5 as const,\n  },\n  resendFiles: {\n    default: true as const,\n  },\n  maxContextTokens: {\n    default: undefined,\n  },\n  legacy: {\n    maxOutputTokens: {\n      min: 1 as const,\n      max: LEGACY_ANTHROPIC_MAX_OUTPUT,\n      step: 1 as const,\n      default: LEGACY_ANTHROPIC_MAX_OUTPUT,\n    },\n  },\n};\n\nexport const agentsSettings = {\n  model: {\n    default: 'gpt-3.5-turbo-test' as const,\n  },\n  temperature: {\n    min: 0 as const,\n    max: 1 as const,\n    step: 0.01 as const,\n    default: 1 as const,\n  },\n  top_p: {\n    min: 0 as const,\n    max: 1 as const,\n    step: 0.01 as const,\n    default: 1 as const,\n  },\n  presence_penalty: {\n    min: 0 as const,\n    max: 2 as const,\n    step: 0.01 as const,\n    default: 0 as const,\n  },\n  frequency_penalty: {\n    min: 0 as const,\n    max: 2 as const,\n    step: 0.01 as const,\n    default: 0 as const,\n  },\n  resendFiles: {\n    default: true as const,\n  },\n  maxContextTokens: {\n    default: undefined,\n  },\n  max_tokens: {\n    default: undefined,\n  },\n  imageDetail: {\n    default: ImageDetail.auto as const,\n  },\n};\n\nexport const endpointSettings = {\n  [EModelEndpoint.openAI]: openAISettings,\n  [EModelEndpoint.google]: googleSettings,\n  [EModelEndpoint.anthropic]: anthropicSettings,\n  [EModelEndpoint.agents]: agentsSettings,\n  [EModelEndpoint.bedrock]: agentsSettings,\n};\n\nconst google = endpointSettings[EModelEndpoint.google];\n\nexport const eModelEndpointSchema = z.nativeEnum(EModelEndpoint);\n\nexport const extendedModelEndpointSchema = z.union([eModelEndpointSchema, z.string()]);\n\nexport const tPluginAuthConfigSchema = z.object({\n  authField: z.string(),\n  label: z.string(),\n  description: z.string(),\n});\n\nexport type TPluginAuthConfig = z.infer<typeof tPluginAuthConfigSchema>;\n\nexport const tPluginSchema = z.object({\n  name: z.string(),\n  pluginKey: z.string(),\n  description: z.string().optional(),\n  icon: z.string().optional(),\n  authConfig: z.array(tPluginAuthConfigSchema).optional(),\n  authenticated: z.boolean().optional(),\n  chatMenu: z.boolean().optional(),\n  isButton: z.boolean().optional(),\n  toolkit: z.boolean().optional(),\n});\n\nexport type TPlugin = z.infer<typeof tPluginSchema>;\n\nexport type TInput = {\n  inputStr: string;\n};\n\nexport type TResPlugin = {\n  plugin: string;\n  input: string;\n  thought: string;\n  loading?: boolean;\n  outputs?: string;\n  latest?: string;\n  inputs?: TInput[];\n};\n\nexport const tExampleSchema = z.object({\n  input: z.object({\n    content: z.string(),\n  }),\n  output: z.object({\n    content: z.string(),\n  }),\n});\n\nexport type TExample = z.infer<typeof tExampleSchema>;\n\nexport enum EAgent {\n  functions = 'functions',\n  classic = 'classic',\n}\n\nexport const agentOptionSettings = {\n  model: {\n    default: 'gpt-4o-mini',\n  },\n  temperature: {\n    min: 0,\n    max: 1,\n    step: 0.01,\n    default: 0,\n  },\n  agent: {\n    default: EAgent.functions,\n    options: [EAgent.functions, EAgent.classic],\n  },\n  skipCompletion: {\n    default: true,\n  },\n};\n\nexport const eAgentOptionsSchema = z.nativeEnum(EAgent);\n\nexport const tAgentOptionsSchema = z.object({\n  agent: z.string().default(EAgent.functions),\n  skipCompletion: z.boolean().default(agentOptionSettings.skipCompletion.default),\n  model: z.string(),\n  temperature: z.number().default(agentOptionSettings.temperature.default),\n});\n\nexport const tMessageSchema = z.object({\n  messageId: z.string(),\n  endpoint: z.string().optional(),\n  clientId: z.string().nullable().optional(),\n  conversationId: z.string().nullable(),\n  parentMessageId: z.string().nullable(),\n  responseMessageId: z.string().nullable().optional(),\n  overrideParentMessageId: z.string().nullable().optional(),\n  bg: z.string().nullable().optional(),\n  model: z.string().nullable().optional(),\n  title: z.string().nullable().or(z.literal('New Chat')).default('New Chat'),\n  sender: z.string().optional(),\n  text: z.string(),\n  generation: z.string().nullable().optional(),\n  isCreatedByUser: z.boolean(),\n  error: z.boolean().optional(),\n  clientTimestamp: z.string().optional(),\n  createdAt: z\n    .string()\n    .optional()\n    .default(() => new Date().toISOString()),\n  updatedAt: z\n    .string()\n    .optional()\n    .default(() => new Date().toISOString()),\n  current: z.boolean().optional(),\n  unfinished: z.boolean().optional(),\n  searchResult: z.boolean().optional(),\n  finish_reason: z.string().optional(),\n  /* assistant */\n  thread_id: z.string().optional(),\n  /* frontend components */\n  iconURL: z.string().nullable().optional(),\n  feedback: feedbackSchema.optional(),\n});\n\nexport type MemoryArtifact = {\n  key: string;\n  value?: string;\n  tokenCount?: number;\n  type: 'update' | 'delete';\n};\n\nexport type TAttachmentMetadata = {\n  type?: Tools;\n  messageId: string;\n  toolCallId: string;\n  [Tools.web_search]?: SearchResultData;\n  [Tools.memory]?: MemoryArtifact;\n};\n\nexport type TAttachment =\n  | (TFile & TAttachmentMetadata)\n  | (Pick<TFile, 'filename' | 'filepath' | 'conversationId'> & {\n      expiresAt: number;\n    } & TAttachmentMetadata);\n\nexport type TMessage = z.input<typeof tMessageSchema> & {\n  children?: TMessage[];\n  plugin?: TResPlugin | null;\n  plugins?: TResPlugin[];\n  content?: TMessageContentParts[];\n  files?: Partial<TFile>[];\n  depth?: number;\n  siblingIndex?: number;\n  attachments?: TAttachment[];\n  clientTimestamp?: string;\n  feedback?: TFeedback;\n};\n\nexport const coerceNumber = z.union([z.number(), z.string()]).transform((val) => {\n  if (typeof val === 'string') {\n    return val.trim() === '' ? undefined : parseFloat(val);\n  }\n  return val;\n});\n\ntype DocumentTypeValue =\n  | null\n  | boolean\n  | number\n  | string\n  | DocumentTypeValue[]\n  | { [key: string]: DocumentTypeValue };\n\nconst DocumentType: z.ZodType<DocumentTypeValue> = z.lazy(() =>\n  z.union([\n    z.null(),\n    z.boolean(),\n    z.number(),\n    z.string(),\n    z.array(z.lazy(() => DocumentType)),\n    z.record(z.lazy(() => DocumentType)),\n  ]),\n);\n\nexport const tConversationSchema = z.object({\n  conversationId: z.string().nullable(),\n  endpoint: eModelEndpointSchema.nullable(),\n  endpointType: eModelEndpointSchema.nullable().optional(),\n  isArchived: z.boolean().optional(),\n  title: z.string().nullable().or(z.literal('New Chat')).default('New Chat'),\n  user: z.string().optional(),\n  messages: z.array(z.string()).optional(),\n  tools: z.union([z.array(tPluginSchema), z.array(z.string())]).optional(),\n  modelLabel: z.string().nullable().optional(),\n  userLabel: z.string().optional(),\n  model: z.string().nullable().optional(),\n  promptPrefix: z.string().nullable().optional(),\n  temperature: z.number().optional(),\n  topP: z.number().optional(),\n  topK: z.number().optional(),\n  top_p: z.number().optional(),\n  frequency_penalty: z.number().optional(),\n  presence_penalty: z.number().optional(),\n  parentMessageId: z.string().optional(),\n  maxOutputTokens: coerceNumber.optional(),\n  maxContextTokens: coerceNumber.optional(),\n  max_tokens: coerceNumber.optional(),\n  /* Anthropic */\n  promptCache: z.boolean().optional(),\n  system: z.string().optional(),\n  thinking: z.boolean().optional(),\n  thinkingBudget: coerceNumber.optional(),\n  /* artifacts */\n  artifacts: z.string().optional(),\n  /* google */\n  context: z.string().nullable().optional(),\n  examples: z.array(tExampleSchema).optional(),\n  /* DB */\n  tags: z.array(z.string()).optional(),\n  createdAt: z.string(),\n  updatedAt: z.string(),\n  /* Files */\n  resendFiles: z.boolean().optional(),\n  file_ids: z.array(z.string()).optional(),\n  /* vision */\n  imageDetail: eImageDetailSchema.optional(),\n  /* OpenAI: o1 only */\n  reasoning_effort: eReasoningEffortSchema.optional(),\n  /* assistant */\n  assistant_id: z.string().optional(),\n  /* agents */\n  agent_id: z.string().optional(),\n  /* AWS Bedrock */\n  region: z.string().optional(),\n  maxTokens: coerceNumber.optional(),\n  additionalModelRequestFields: DocumentType.optional(),\n  /* assistants */\n  instructions: z.string().optional(),\n  additional_instructions: z.string().optional(),\n  append_current_datetime: z.boolean().optional(),\n  /** Used to overwrite active conversation settings when saving a Preset */\n  presetOverride: z.record(z.unknown()).optional(),\n  stop: z.array(z.string()).optional(),\n  /* frontend components */\n  greeting: z.string().optional(),\n  spec: z.string().nullable().optional(),\n  iconURL: z.string().nullable().optional(),\n  /* temporary chat */\n  expiredAt: z.string().nullable().optional(),\n  /** @deprecated */\n  resendImages: z.boolean().optional(),\n  /** @deprecated */\n  agentOptions: tAgentOptionsSchema.nullable().optional(),\n  /** @deprecated Prefer `modelLabel` over `chatGptLabel` */\n  chatGptLabel: z.string().nullable().optional(),\n});\n\nexport const tPresetSchema = tConversationSchema\n  .omit({\n    conversationId: true,\n    createdAt: true,\n    updatedAt: true,\n    title: true,\n  })\n  .merge(\n    z.object({\n      conversationId: z.string().nullable().optional(),\n      presetId: z.string().nullable().optional(),\n      title: z.string().nullable().optional(),\n      defaultPreset: z.boolean().optional(),\n      order: z.number().optional(),\n      endpoint: extendedModelEndpointSchema.nullable(),\n    }),\n  );\n\nexport const tConvoUpdateSchema = tConversationSchema.merge(\n  z.object({\n    endpoint: extendedModelEndpointSchema.nullable(),\n    createdAt: z.string().optional(),\n    updatedAt: z.string().optional(),\n  }),\n);\n\nexport const tQueryParamsSchema = tConversationSchema\n  .pick({\n    // chat settings\n    /** The model spec to be used */\n    spec: true,\n    /** The AI context window, overrides the system-defined window as determined by `model` value */\n    maxContextTokens: true,\n    /**\n     * Whether or not to re-submit files from previous messages on subsequent messages\n     * */\n    resendFiles: true,\n    /**\n     * @endpoints openAI, custom, azureOpenAI\n     *\n     * System parameter that only affects the above endpoints.\n     * Image detail for re-sizing according to OpenAI spec, defaults to `auto`\n     * */\n    imageDetail: true,\n    /**\n     * AKA Custom Instructions, dynamically added to chat history as a system message;\n     * for `bedrock` endpoint, this is used as the `system` model param if the provider uses it;\n     * for `assistants` endpoint, this is used as the `additional_instructions` model param:\n     * https://platform.openai.com/docs/api-reference/runs/createRun#runs-createrun-additional_instructions\n     * ; otherwise, a message with `system` role is added to the chat history\n     */\n    promptPrefix: true,\n    // Model parameters\n    /** @endpoints openAI, custom, azureOpenAI, google, anthropic, assistants, azureAssistants, bedrock */\n    model: true,\n    /** @endpoints openAI, custom, azureOpenAI, google, anthropic, bedrock */\n    temperature: true,\n    /** @endpoints openAI, custom, azureOpenAI */\n    presence_penalty: true,\n    /** @endpoints openAI, custom, azureOpenAI */\n    frequency_penalty: true,\n    /** @endpoints openAI, custom, azureOpenAI */\n    stop: true,\n    /** @endpoints openAI, custom, azureOpenAI */\n    top_p: true,\n    /** @endpoints openAI, custom, azureOpenAI */\n    max_tokens: true,\n    /** @endpoints google, anthropic, bedrock */\n    topP: true,\n    /** @endpoints google, anthropic */\n    topK: true,\n    /** @endpoints google, anthropic */\n    maxOutputTokens: true,\n    /** @endpoints anthropic */\n    promptCache: true,\n    thinking: true,\n    thinkingBudget: true,\n    /** @endpoints bedrock */\n    region: true,\n    /** @endpoints bedrock */\n    maxTokens: true,\n    /** @endpoints agents */\n    agent_id: true,\n    /** @endpoints assistants, azureAssistants */\n    assistant_id: true,\n    /** @endpoints assistants, azureAssistants */\n    append_current_datetime: true,\n    /**\n     * @endpoints assistants, azureAssistants\n     *\n     * Overrides existing assistant instructions, only used for the current run:\n     * https://platform.openai.com/docs/api-reference/runs/createRun#runs-createrun-instructions\n     * */\n    instructions: true,\n  })\n  .merge(\n    z.object({\n      /** @endpoints openAI, custom, azureOpenAI, google, anthropic, assistants, azureAssistants, bedrock, agents */\n      endpoint: extendedModelEndpointSchema.nullable(),\n    }),\n  );\n\nexport type TPreset = z.infer<typeof tPresetSchema>;\n\nexport type TSetOption = (\n  param: number | string,\n) => (newValue: number | string | boolean | string[] | Partial<TPreset>) => void;\n\nexport type TConversation = z.infer<typeof tConversationSchema> & {\n  presetOverride?: Partial<TPreset>;\n  disableParams?: boolean;\n};\n\nexport const tSharedLinkSchema = z.object({\n  conversationId: z.string(),\n  shareId: z.string(),\n  messages: z.array(z.string()),\n  isPublic: z.boolean(),\n  title: z.string(),\n  createdAt: z.string(),\n  updatedAt: z.string(),\n});\n\nexport type TSharedLink = z.infer<typeof tSharedLinkSchema>;\n\nexport const tConversationTagSchema = z.object({\n  _id: z.string(),\n  user: z.string(),\n  tag: z.string(),\n  description: z.string().optional(),\n  createdAt: z.string(),\n  updatedAt: z.string(),\n  count: z.number(),\n  position: z.number(),\n});\nexport type TConversationTag = z.infer<typeof tConversationTagSchema>;\n\nexport const googleBaseSchema = tConversationSchema.pick({\n  model: true,\n  modelLabel: true,\n  promptPrefix: true,\n  examples: true,\n  temperature: true,\n  maxOutputTokens: true,\n  artifacts: true,\n  topP: true,\n  topK: true,\n  thinking: true,\n  thinkingBudget: true,\n  iconURL: true,\n  greeting: true,\n  spec: true,\n  maxContextTokens: true,\n});\n\nexport const googleSchema = googleBaseSchema\n  .transform((obj: Partial<TConversation>) => removeNullishValues(obj))\n  .catch(() => ({}));\n\n/**\n   * TODO: Map the following fields:\n  - presence_penalty -> presencePenalty\n  - frequency_penalty -> frequencyPenalty\n  - stop -> stopSequences\n   */\nexport const googleGenConfigSchema = z\n  .object({\n    maxOutputTokens: coerceNumber.optional(),\n    temperature: coerceNumber.optional(),\n    topP: coerceNumber.optional(),\n    topK: coerceNumber.optional(),\n    presencePenalty: coerceNumber.optional(),\n    frequencyPenalty: coerceNumber.optional(),\n    stopSequences: z.array(z.string()).optional(),\n    thinkingConfig: z\n      .object({\n        includeThoughts: z.boolean().optional(),\n        thinkingBudget: coerceNumber.optional(),\n      })\n      .optional(),\n  })\n  .strip()\n  .optional();\n\nconst gptPluginsBaseSchema = tConversationSchema.pick({\n  model: true,\n  modelLabel: true,\n  chatGptLabel: true,\n  promptPrefix: true,\n  temperature: true,\n  artifacts: true,\n  top_p: true,\n  presence_penalty: true,\n  frequency_penalty: true,\n  tools: true,\n  agentOptions: true,\n  iconURL: true,\n  greeting: true,\n  spec: true,\n  maxContextTokens: true,\n});\n\nexport const gptPluginsSchema = gptPluginsBaseSchema\n  .transform((obj) => {\n    const result = {\n      ...obj,\n      model: obj.model ?? 'gpt-3.5-turbo',\n      chatGptLabel: obj.chatGptLabel ?? obj.modelLabel ?? null,\n      promptPrefix: obj.promptPrefix ?? null,\n      temperature: obj.temperature ?? 0.8,\n      top_p: obj.top_p ?? 1,\n      presence_penalty: obj.presence_penalty ?? 0,\n      frequency_penalty: obj.frequency_penalty ?? 0,\n      tools: obj.tools ?? [],\n      agentOptions: obj.agentOptions ?? {\n        agent: EAgent.functions,\n        skipCompletion: true,\n        model: 'gpt-3.5-turbo',\n        temperature: 0,\n      },\n      iconURL: obj.iconURL ?? undefined,\n      greeting: obj.greeting ?? undefined,\n      spec: obj.spec ?? undefined,\n      maxContextTokens: obj.maxContextTokens ?? undefined,\n    };\n\n    if (obj.modelLabel != null && obj.modelLabel !== '') {\n      result.modelLabel = null;\n    }\n\n    return result;\n  })\n  .catch(() => ({\n    model: 'gpt-3.5-turbo',\n    chatGptLabel: null,\n    promptPrefix: null,\n    temperature: 0.8,\n    top_p: 1,\n    presence_penalty: 0,\n    frequency_penalty: 0,\n    tools: [],\n    agentOptions: {\n      agent: EAgent.functions,\n      skipCompletion: true,\n      model: 'gpt-3.5-turbo',\n      temperature: 0,\n    },\n    iconURL: undefined,\n    greeting: undefined,\n    spec: undefined,\n    maxContextTokens: undefined,\n  }));\n\nexport function removeNullishValues<T extends Record<string, unknown>>(\n  obj: T,\n  removeEmptyStrings?: boolean,\n): Partial<T> {\n  const newObj: Partial<T> = { ...obj };\n\n  (Object.keys(newObj) as Array<keyof T>).forEach((key) => {\n    const value = newObj[key];\n    if (value === undefined || value === null) {\n      delete newObj[key];\n    }\n    if (removeEmptyStrings && typeof value === 'string' && value === '') {\n      delete newObj[key];\n    }\n  });\n\n  return newObj;\n}\n\nconst assistantBaseSchema = tConversationSchema.pick({\n  model: true,\n  assistant_id: true,\n  instructions: true,\n  artifacts: true,\n  promptPrefix: true,\n  iconURL: true,\n  greeting: true,\n  spec: true,\n  append_current_datetime: true,\n});\n\nexport const assistantSchema = assistantBaseSchema\n  .transform((obj) => ({\n    ...obj,\n    model: obj.model ?? openAISettings.model.default,\n    assistant_id: obj.assistant_id ?? undefined,\n    instructions: obj.instructions ?? undefined,\n    promptPrefix: obj.promptPrefix ?? null,\n    iconURL: obj.iconURL ?? undefined,\n    greeting: obj.greeting ?? undefined,\n    spec: obj.spec ?? undefined,\n    append_current_datetime: obj.append_current_datetime ?? false,\n  }))\n  .catch(() => ({\n    model: openAISettings.model.default,\n    assistant_id: undefined,\n    instructions: undefined,\n    promptPrefix: null,\n    iconURL: undefined,\n    greeting: undefined,\n    spec: undefined,\n    append_current_datetime: false,\n  }));\n\nconst compactAssistantBaseSchema = tConversationSchema.pick({\n  model: true,\n  assistant_id: true,\n  instructions: true,\n  promptPrefix: true,\n  artifacts: true,\n  iconURL: true,\n  greeting: true,\n  spec: true,\n});\n\nexport const compactAssistantSchema = compactAssistantBaseSchema\n  .transform((obj) => removeNullishValues(obj))\n  .catch(() => ({}));\n\nexport const agentsBaseSchema = tConversationSchema.pick({\n  model: true,\n  modelLabel: true,\n  temperature: true,\n  top_p: true,\n  presence_penalty: true,\n  frequency_penalty: true,\n  resendFiles: true,\n  imageDetail: true,\n  agent_id: true,\n  instructions: true,\n  promptPrefix: true,\n  iconURL: true,\n  greeting: true,\n  maxContextTokens: true,\n});\n\nexport const agentsSchema = agentsBaseSchema\n  .transform((obj) => ({\n    ...obj,\n    model: obj.model ?? agentsSettings.model.default,\n    modelLabel: obj.modelLabel ?? null,\n    temperature: obj.temperature ?? 1,\n    top_p: obj.top_p ?? 1,\n    presence_penalty: obj.presence_penalty ?? 0,\n    frequency_penalty: obj.frequency_penalty ?? 0,\n    resendFiles:\n      typeof obj.resendFiles === 'boolean' ? obj.resendFiles : agentsSettings.resendFiles.default,\n    imageDetail: obj.imageDetail ?? ImageDetail.auto,\n    agent_id: obj.agent_id ?? undefined,\n    instructions: obj.instructions ?? undefined,\n    promptPrefix: obj.promptPrefix ?? null,\n    iconURL: obj.iconURL ?? undefined,\n    greeting: obj.greeting ?? undefined,\n    maxContextTokens: obj.maxContextTokens ?? undefined,\n  }))\n  .catch(() => ({\n    model: agentsSettings.model.default,\n    modelLabel: null,\n    temperature: 1,\n    top_p: 1,\n    presence_penalty: 0,\n    frequency_penalty: 0,\n    resendFiles: agentsSettings.resendFiles.default,\n    imageDetail: ImageDetail.auto,\n    agent_id: undefined,\n    instructions: undefined,\n    promptPrefix: null,\n    iconURL: undefined,\n    greeting: undefined,\n    maxContextTokens: undefined,\n  }));\n\nexport const openAIBaseSchema = tConversationSchema.pick({\n  model: true,\n  modelLabel: true,\n  chatGptLabel: true,\n  promptPrefix: true,\n  temperature: true,\n  top_p: true,\n  presence_penalty: true,\n  frequency_penalty: true,\n  resendFiles: true,\n  artifacts: true,\n  imageDetail: true,\n  stop: true,\n  iconURL: true,\n  greeting: true,\n  spec: true,\n  maxContextTokens: true,\n  max_tokens: true,\n  reasoning_effort: true,\n});\n\nexport const openAISchema = openAIBaseSchema\n  .transform((obj: Partial<TConversation>) => removeNullishValues(obj))\n  .catch(() => ({}));\n\nexport const compactGoogleSchema = googleBaseSchema\n  .transform((obj) => {\n    const newObj: Partial<TConversation> = { ...obj };\n    if (newObj.temperature === google.temperature.default) {\n      delete newObj.temperature;\n    }\n    if (newObj.maxOutputTokens === google.maxOutputTokens.default) {\n      delete newObj.maxOutputTokens;\n    }\n    if (newObj.topP === google.topP.default) {\n      delete newObj.topP;\n    }\n    if (newObj.topK === google.topK.default) {\n      delete newObj.topK;\n    }\n\n    return removeNullishValues(newObj);\n  })\n  .catch(() => ({}));\n\nexport const anthropicBaseSchema = tConversationSchema.pick({\n  model: true,\n  modelLabel: true,\n  promptPrefix: true,\n  temperature: true,\n  maxOutputTokens: true,\n  topP: true,\n  topK: true,\n  resendFiles: true,\n  promptCache: true,\n  thinking: true,\n  thinkingBudget: true,\n  artifacts: true,\n  iconURL: true,\n  greeting: true,\n  spec: true,\n  maxContextTokens: true,\n});\n\nexport const anthropicSchema = anthropicBaseSchema\n  .transform((obj) => removeNullishValues(obj))\n  .catch(() => ({}));\n\nexport const compactPluginsSchema = gptPluginsBaseSchema\n  .transform((obj) => {\n    const newObj: Partial<TConversation> = { ...obj };\n    if (newObj.modelLabel === null) {\n      delete newObj.modelLabel;\n    }\n    if (newObj.chatGptLabel === null) {\n      delete newObj.chatGptLabel;\n    }\n    if (newObj.promptPrefix === null) {\n      delete newObj.promptPrefix;\n    }\n    if (newObj.temperature === 0.8) {\n      delete newObj.temperature;\n    }\n    if (newObj.top_p === 1) {\n      delete newObj.top_p;\n    }\n    if (newObj.presence_penalty === 0) {\n      delete newObj.presence_penalty;\n    }\n    if (newObj.frequency_penalty === 0) {\n      delete newObj.frequency_penalty;\n    }\n    if (newObj.tools?.length === 0) {\n      delete newObj.tools;\n    }\n\n    if (\n      newObj.agentOptions &&\n      newObj.agentOptions.agent === EAgent.functions &&\n      newObj.agentOptions.skipCompletion === true &&\n      newObj.agentOptions.model === 'gpt-3.5-turbo' &&\n      newObj.agentOptions.temperature === 0\n    ) {\n      delete newObj.agentOptions;\n    }\n\n    return removeNullishValues(newObj);\n  })\n  .catch(() => ({}));\n\nexport const tBannerSchema = z.object({\n  bannerId: z.string(),\n  message: z.string(),\n  displayFrom: z.string(),\n  displayTo: z.string(),\n  createdAt: z.string(),\n  updatedAt: z.string(),\n  isPublic: z.boolean(),\n});\nexport type TBanner = z.infer<typeof tBannerSchema>;\n\nexport const compactAgentsBaseSchema = tConversationSchema.pick({\n  spec: true,\n  // model: true,\n  iconURL: true,\n  greeting: true,\n  agent_id: true,\n  instructions: true,\n  additional_instructions: true,\n});\n\nexport const compactAgentsSchema = compactAgentsBaseSchema\n  .transform((obj) => removeNullishValues(obj))\n  .catch(() => ({}));\n","import { EToolResources } from './assistants';\n\nexport enum FileSources {\n  local = 'local',\n  firebase = 'firebase',\n  azure = 'azure',\n  azure_blob = 'azure_blob',\n  openai = 'openai',\n  s3 = 's3',\n  vectordb = 'vectordb',\n  execute_code = 'execute_code',\n  mistral_ocr = 'mistral_ocr',\n  azure_mistral_ocr = 'azure_mistral_ocr',\n  text = 'text',\n}\n\nexport const checkOpenAIStorage = (source: string) =>\n  source === FileSources.openai || source === FileSources.azure;\n\nexport enum FileContext {\n  avatar = 'avatar',\n  unknown = 'unknown',\n  agents = 'agents',\n  assistants = 'assistants',\n  execute_code = 'execute_code',\n  image_generation = 'image_generation',\n  assistants_output = 'assistants_output',\n  message_attachment = 'message_attachment',\n  filename = 'filename',\n  updatedAt = 'updatedAt',\n  source = 'source',\n  filterSource = 'filterSource',\n  context = 'context',\n  bytes = 'bytes',\n}\n\nexport type EndpointFileConfig = {\n  disabled?: boolean;\n  fileLimit?: number;\n  fileSizeLimit?: number;\n  totalSizeLimit?: number;\n  supportedMimeTypes?: RegExp[];\n};\n\nexport type FileConfig = {\n  endpoints: {\n    [key: string]: EndpointFileConfig;\n  };\n  serverFileSizeLimit?: number;\n  avatarSizeLimit?: number;\n  clientImageResize?: {\n    enabled?: boolean;\n    maxWidth?: number;\n    maxHeight?: number;\n    quality?: number;\n  };\n  checkType?: (fileType: string, supportedTypes: RegExp[]) => boolean;\n};\n\nexport type TFile = {\n  _id?: string;\n  __v?: number;\n  user: string;\n  conversationId?: string;\n  message?: string;\n  file_id: string;\n  temp_file_id?: string;\n  bytes: number;\n  embedded: boolean;\n  filename: string;\n  filepath: string;\n  object: 'file';\n  type: string;\n  usage: number;\n  context?: FileContext;\n  source?: FileSources;\n  filterSource?: FileSources;\n  width?: number;\n  height?: number;\n  expiresAt?: string | Date;\n  preview?: string;\n  metadata?: { fileIdentifier?: string };\n  createdAt?: string | Date;\n  updatedAt?: string | Date;\n};\n\nexport type TFileUpload = TFile & {\n  temp_file_id: string;\n};\n\nexport type AvatarUploadResponse = {\n  url: string;\n};\n\nexport type SpeechToTextResponse = {\n  text: string;\n};\n\nexport type VoiceResponse = string[];\n\nexport type UploadMutationOptions = {\n  onSuccess?: (data: TFileUpload, variables: FormData, context?: unknown) => void;\n  onMutate?: (variables: FormData) => void | Promise<unknown>;\n  onError?: (error: unknown, variables: FormData, context?: unknown) => void;\n};\n\nexport type UploadAvatarOptions = {\n  onSuccess?: (data: AvatarUploadResponse, variables: FormData, context?: unknown) => void;\n  onMutate?: (variables: FormData) => void | Promise<unknown>;\n  onError?: (error: unknown, variables: FormData, context?: unknown) => void;\n};\n\nexport type SpeechToTextOptions = {\n  onSuccess?: (data: SpeechToTextResponse, variables: FormData, context?: unknown) => void;\n  onMutate?: (variables: FormData) => void | Promise<unknown>;\n  onError?: (error: unknown, variables: FormData, context?: unknown) => void;\n};\n\nexport type TextToSpeechOptions = {\n  onSuccess?: (data: ArrayBuffer, variables: FormData, context?: unknown) => void;\n  onMutate?: (variables: FormData) => void | Promise<unknown>;\n  onError?: (error: unknown, variables: FormData, context?: unknown) => void;\n};\n\nexport type VoiceOptions = {\n  onSuccess?: (data: VoiceResponse, variables: unknown, context?: unknown) => void;\n  onMutate?: () => void | Promise<unknown>;\n  onError?: (error: unknown, variables: unknown, context?: unknown) => void;\n};\n\nexport type DeleteFilesResponse = {\n  message: string;\n  result: Record<string, unknown>;\n};\n\nexport type BatchFile = {\n  file_id: string;\n  filepath: string;\n  embedded: boolean;\n  source: FileSources;\n  temp_file_id?: string;\n};\n\nexport type DeleteFilesBody = {\n  files: BatchFile[];\n  agent_id?: string;\n  assistant_id?: string;\n  tool_resource?: EToolResources;\n};\n\nexport type DeleteMutationOptions = {\n  onSuccess?: (data: DeleteFilesResponse, variables: DeleteFilesBody, context?: unknown) => void;\n  onMutate?: (variables: DeleteFilesBody) => void | Promise<unknown>;\n  onError?: (error: unknown, variables: DeleteFilesBody, context?: unknown) => void;\n};\n","import { z } from 'zod';\nimport type { TPreset } from './schemas';\nimport {\n  EModelEndpoint,\n  tPresetSchema,\n  eModelEndpointSchema,\n  AuthType,\n  authTypeSchema,\n} from './schemas';\n\nexport type TModelSpec = {\n  name: string;\n  label: string;\n  preset: TPreset;\n  order?: number;\n  default?: boolean;\n  description?: string;\n  showIconInMenu?: boolean;\n  showIconInHeader?: boolean;\n  iconURL?: string | EModelEndpoint; // Allow using project-included icons\n  authType?: AuthType;\n};\n\nexport const tModelSpecSchema = z.object({\n  name: z.string(),\n  label: z.string(),\n  preset: tPresetSchema,\n  order: z.number().optional(),\n  default: z.boolean().optional(),\n  description: z.string().optional(),\n  showIconInMenu: z.boolean().optional(),\n  showIconInHeader: z.boolean().optional(),\n  iconURL: z.union([z.string(), eModelEndpointSchema]).optional(),\n  authType: authTypeSchema.optional(),\n});\n\nexport const specsConfigSchema = z.object({\n  enforce: z.boolean().default(false),\n  prioritize: z.boolean().default(true),\n  list: z.array(tModelSpecSchema).min(1),\n  addedEndpoints: z.array(z.union([z.string(), eModelEndpointSchema])).optional(),\n});\n\nexport type TSpecsConfig = z.infer<typeof specsConfigSchema>;\n","import { z } from 'zod';\nimport { EModelEndpoint } from './schemas';\nimport type { EndpointFileConfig, FileConfig } from './types/files';\n\nexport const supportsFiles = {\n  [EModelEndpoint.openAI]: true,\n  [EModelEndpoint.google]: true,\n  [EModelEndpoint.assistants]: true,\n  [EModelEndpoint.azureAssistants]: true,\n  [EModelEndpoint.agents]: true,\n  [EModelEndpoint.azureOpenAI]: true,\n  [EModelEndpoint.anthropic]: true,\n  [EModelEndpoint.custom]: true,\n  [EModelEndpoint.bedrock]: true,\n};\n\nexport const excelFileTypes = [\n  'application/vnd.ms-excel',\n  'application/msexcel',\n  'application/x-msexcel',\n  'application/x-ms-excel',\n  'application/x-excel',\n  'application/x-dos_ms_excel',\n  'application/xls',\n  'application/x-xls',\n  'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n];\n\nexport const fullMimeTypesList = [\n  'text/x-c',\n  'text/x-c++',\n  'application/csv',\n  'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n  'text/html',\n  'text/x-java',\n  'application/json',\n  'text/markdown',\n  'application/pdf',\n  'text/x-php',\n  'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n  'text/x-python',\n  'text/x-script.python',\n  'text/x-ruby',\n  'text/x-tex',\n  'text/plain',\n  'text/css',\n  'text/vtt',\n  'image/jpeg',\n  'text/javascript',\n  'image/gif',\n  'image/png',\n  'image/heic',\n  'image/heif',\n  'application/x-tar',\n  'application/typescript',\n  'application/xml',\n  'application/zip',\n  'image/svg',\n  'image/svg+xml',\n  ...excelFileTypes,\n];\n\nexport const codeInterpreterMimeTypesList = [\n  'text/x-c',\n  'text/x-c++',\n  'application/csv',\n  'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n  'text/html',\n  'text/x-java',\n  'application/json',\n  'text/markdown',\n  'application/pdf',\n  'text/x-php',\n  'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n  'text/x-python',\n  'text/x-script.python',\n  'text/x-ruby',\n  'text/x-tex',\n  'text/plain',\n  'text/css',\n  'image/jpeg',\n  'text/javascript',\n  'image/gif',\n  'image/png',\n  'image/heic',\n  'image/heif',\n  'application/x-tar',\n  'application/typescript',\n  'application/xml',\n  'application/zip',\n  ...excelFileTypes,\n];\n\nexport const retrievalMimeTypesList = [\n  'text/x-c',\n  'text/x-c++',\n  'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n  'text/html',\n  'text/x-java',\n  'application/json',\n  'text/markdown',\n  'application/pdf',\n  'text/x-php',\n  'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n  'text/x-python',\n  'text/x-script.python',\n  'text/x-ruby',\n  'text/x-tex',\n  'text/plain',\n];\n\nexport const imageExtRegex = /\\.(jpg|jpeg|png|gif|webp|heic|heif)$/i;\n\nexport const excelMimeTypes =\n  /^application\\/(vnd\\.ms-excel|msexcel|x-msexcel|x-ms-excel|x-excel|x-dos_ms_excel|xls|x-xls|vnd\\.openxmlformats-officedocument\\.spreadsheetml\\.sheet)$/;\n\nexport const textMimeTypes =\n  /^(text\\/(x-c|x-csharp|tab-separated-values|x-c\\+\\+|x-h|x-java|html|markdown|x-php|x-python|x-script\\.python|x-ruby|x-tex|plain|css|vtt|javascript|csv))$/;\n\nexport const applicationMimeTypes =\n  /^(application\\/(epub\\+zip|csv|json|pdf|x-tar|typescript|vnd\\.openxmlformats-officedocument\\.(wordprocessingml\\.document|presentationml\\.presentation|spreadsheetml\\.sheet)|xml|zip))$/;\n\nexport const imageMimeTypes = /^image\\/(jpeg|gif|png|webp|heic|heif)$/;\n\nexport const supportedMimeTypes = [\n  textMimeTypes,\n  excelMimeTypes,\n  applicationMimeTypes,\n  imageMimeTypes,\n  /** Supported by LC Code Interpreter PAI */\n  /^image\\/(svg|svg\\+xml)$/,\n];\n\nexport const codeInterpreterMimeTypes = [\n  textMimeTypes,\n  excelMimeTypes,\n  applicationMimeTypes,\n  imageMimeTypes,\n];\n\nexport const codeTypeMapping: { [key: string]: string } = {\n  c: 'text/x-c',\n  cs: 'text/x-csharp',\n  cpp: 'text/x-c++',\n  h: 'text/x-h',\n  md: 'text/markdown',\n  php: 'text/x-php',\n  py: 'text/x-python',\n  rb: 'text/x-ruby',\n  tex: 'text/x-tex',\n  js: 'text/javascript',\n  sh: 'application/x-sh',\n  ts: 'application/typescript',\n  tar: 'application/x-tar',\n  zip: 'application/zip',\n  yml: 'application/x-yaml',\n  yaml: 'application/x-yaml',\n  log: 'text/plain',\n  tsv: 'text/tab-separated-values',\n};\n\nexport const retrievalMimeTypes = [\n  /^(text\\/(x-c|x-c\\+\\+|x-h|html|x-java|markdown|x-php|x-python|x-script\\.python|x-ruby|x-tex|plain|vtt|xml))$/,\n  /^(application\\/(json|pdf|vnd\\.openxmlformats-officedocument\\.(wordprocessingml\\.document|presentationml\\.presentation)))$/,\n];\n\nexport const megabyte = 1024 * 1024;\n/** Helper function to get megabytes value */\nexport const mbToBytes = (mb: number): number => mb * megabyte;\n\nconst defaultSizeLimit = mbToBytes(512);\nconst assistantsFileConfig = {\n  fileLimit: 10,\n  fileSizeLimit: defaultSizeLimit,\n  totalSizeLimit: defaultSizeLimit,\n  supportedMimeTypes,\n  disabled: false,\n};\n\nexport const fileConfig = {\n  endpoints: {\n    [EModelEndpoint.assistants]: assistantsFileConfig,\n    [EModelEndpoint.azureAssistants]: assistantsFileConfig,\n    [EModelEndpoint.agents]: assistantsFileConfig,\n    default: {\n      fileLimit: 10,\n      fileSizeLimit: defaultSizeLimit,\n      totalSizeLimit: defaultSizeLimit,\n      supportedMimeTypes,\n      disabled: false,\n    },\n  },\n  serverFileSizeLimit: defaultSizeLimit,\n  avatarSizeLimit: mbToBytes(2),\n  clientImageResize: {\n    enabled: false,\n    maxWidth: 1900,\n    maxHeight: 1900,\n    quality: 0.92,\n  },\n  checkType: function (fileType: string, supportedTypes: RegExp[] = supportedMimeTypes) {\n    return supportedTypes.some((regex) => regex.test(fileType));\n  },\n};\n\nconst supportedMimeTypesSchema = z\n  .array(z.any())\n  .optional()\n  .refine(\n    (mimeTypes) => {\n      if (!mimeTypes) {\n        return true;\n      }\n      return mimeTypes.every(\n        (mimeType) => mimeType instanceof RegExp || typeof mimeType === 'string',\n      );\n    },\n    {\n      message: 'Each mimeType must be a string or a RegExp object.',\n    },\n  );\n\nexport const endpointFileConfigSchema = z.object({\n  disabled: z.boolean().optional(),\n  fileLimit: z.number().min(0).optional(),\n  fileSizeLimit: z.number().min(0).optional(),\n  totalSizeLimit: z.number().min(0).optional(),\n  supportedMimeTypes: supportedMimeTypesSchema.optional(),\n});\n\nexport const fileConfigSchema = z.object({\n  endpoints: z.record(endpointFileConfigSchema).optional(),\n  serverFileSizeLimit: z.number().min(0).optional(),\n  avatarSizeLimit: z.number().min(0).optional(),\n  imageGeneration: z\n    .object({\n      percentage: z.number().min(0).max(100).optional(),\n      px: z.number().min(0).optional(),\n    })\n    .optional(),\n  clientImageResize: z\n    .object({\n      enabled: z.boolean().optional(),\n      maxWidth: z.number().min(0).optional(),\n      maxHeight: z.number().min(0).optional(),\n      quality: z.number().min(0).max(1).optional(),\n    })\n    .optional(),\n});\n\n/** Helper function to safely convert string patterns to RegExp objects */\nexport const convertStringsToRegex = (patterns: string[]): RegExp[] =>\n  patterns.reduce((acc: RegExp[], pattern) => {\n    try {\n      const regex = new RegExp(pattern);\n      acc.push(regex);\n    } catch (error) {\n      console.error(`Invalid regex pattern \"${pattern}\" skipped.`, error);\n    }\n    return acc;\n  }, []);\n\nexport function mergeFileConfig(dynamic: z.infer<typeof fileConfigSchema> | undefined): FileConfig {\n  const mergedConfig = fileConfig as FileConfig;\n  if (!dynamic) {\n    return mergedConfig;\n  }\n\n  if (dynamic.serverFileSizeLimit !== undefined) {\n    mergedConfig.serverFileSizeLimit = mbToBytes(dynamic.serverFileSizeLimit);\n  }\n\n  if (dynamic.avatarSizeLimit !== undefined) {\n    mergedConfig.avatarSizeLimit = mbToBytes(dynamic.avatarSizeLimit);\n  }\n\n  // Merge clientImageResize configuration\n  if (dynamic.clientImageResize !== undefined) {\n    mergedConfig.clientImageResize = {\n      ...mergedConfig.clientImageResize,\n      ...dynamic.clientImageResize,\n    };\n  }\n\n  if (!dynamic.endpoints) {\n    return mergedConfig;\n  }\n\n  for (const key in dynamic.endpoints) {\n    const dynamicEndpoint = (dynamic.endpoints as Record<string, EndpointFileConfig>)[key];\n\n    if (!mergedConfig.endpoints[key]) {\n      mergedConfig.endpoints[key] = {};\n    }\n\n    const mergedEndpoint = mergedConfig.endpoints[key];\n\n    if (dynamicEndpoint.disabled === true) {\n      mergedEndpoint.disabled = true;\n      mergedEndpoint.fileLimit = 0;\n      mergedEndpoint.fileSizeLimit = 0;\n      mergedEndpoint.totalSizeLimit = 0;\n      mergedEndpoint.supportedMimeTypes = [];\n      continue;\n    }\n\n    if (dynamicEndpoint.fileSizeLimit !== undefined) {\n      mergedEndpoint.fileSizeLimit = mbToBytes(dynamicEndpoint.fileSizeLimit);\n    }\n\n    if (dynamicEndpoint.totalSizeLimit !== undefined) {\n      mergedEndpoint.totalSizeLimit = mbToBytes(dynamicEndpoint.totalSizeLimit);\n    }\n\n    const configKeys = ['fileLimit'] as const;\n    configKeys.forEach((field) => {\n      if (dynamicEndpoint[field] !== undefined) {\n        mergedEndpoint[field] = dynamicEndpoint[field];\n      }\n    });\n\n    if (dynamicEndpoint.supportedMimeTypes) {\n      mergedEndpoint.supportedMimeTypes = convertStringsToRegex(\n        dynamicEndpoint.supportedMimeTypes as unknown as string[],\n      );\n    }\n  }\n\n  return mergedConfig;\n}\n","/* eslint-disable @typescript-eslint/no-namespace */\nimport { StepTypes, ContentTypes, ToolCallTypes } from './runs';\nimport type { TAttachment, TPlugin } from 'src/schemas';\nimport type { FunctionToolCall } from './assistants';\n\nexport namespace Agents {\n  export type MessageType = 'human' | 'ai' | 'generic' | 'system' | 'function' | 'tool' | 'remove';\n\n  export type ImageDetail = 'auto' | 'low' | 'high';\n\n  export type ReasoningContentText = {\n    type: ContentTypes.THINK;\n    think: string;\n  };\n\n  export type MessageContentText = {\n    type: ContentTypes.TEXT;\n    text: string;\n    tool_call_ids?: string[];\n  };\n\n  export type AgentUpdate = {\n    type: ContentTypes.AGENT_UPDATE;\n    agent_update: {\n      index: number;\n      runId: string;\n      agentId: string;\n    };\n  };\n\n  export type MessageContentImageUrl = {\n    type: ContentTypes.IMAGE_URL;\n    image_url: string | { url: string; detail?: ImageDetail };\n  };\n\n  export type MessageContentComplex =\n    | ReasoningContentText\n    | AgentUpdate\n    | MessageContentText\n    | MessageContentImageUrl\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    | (Record<string, any> & { type?: ContentTypes | string })\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    | (Record<string, any> & { type?: never });\n\n  export type MessageContent = string | MessageContentComplex[];\n\n  /**\n   * A call to a tool.\n   */\n  export type ToolCall = {\n    /** Type (\"tool_call\") according to Assistants Tool Call Structure */\n    type: ToolCallTypes.TOOL_CALL;\n    /** The name of the tool to be called */\n    name: string;\n\n    /** The arguments to the tool call */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    args?: string | Record<string, any>;\n\n    /** If provided, an identifier associated with the tool call */\n    id?: string;\n    /** If provided, the output of the tool call */\n    output?: string;\n    /** Auth URL */\n    auth?: string;\n    /** Expiration time */\n    expires_at?: number;\n  };\n\n  export type ToolEndEvent = {\n    /** The Step Id of the Tool Call */\n    id: string;\n    /** The Completed Tool Call */\n    tool_call?: ToolCall;\n    /** The content index of the tool call */\n    index: number;\n  };\n\n  export type ToolCallContent = {\n    type: ContentTypes.TOOL_CALL;\n    tool_call?: ToolCall;\n  };\n\n  /**\n   * A chunk of a tool call (e.g., as part of a stream).\n   * When merging ToolCallChunks (e.g., via AIMessageChunk.__add__),\n   * all string attributes are concatenated. Chunks are only merged if their\n   * values of `index` are equal and not None.\n   *\n   * @example\n   * ```ts\n   * const leftChunks = [\n   *   {\n   *     name: \"foo\",\n   *     args: '{\"a\":',\n   *     index: 0\n   *   }\n   * ];\n   *\n   * const leftAIMessageChunk = new AIMessageChunk({\n   *   content: \"\",\n   *   tool_call_chunks: leftChunks\n   * });\n   *\n   * const rightChunks = [\n   *   {\n   *     name: undefined,\n   *     args: '1}',\n   *     index: 0\n   *   }\n   * ];\n   *\n   * const rightAIMessageChunk = new AIMessageChunk({\n   *   content: \"\",\n   *   tool_call_chunks: rightChunks\n   * });\n   *\n   * const result = leftAIMessageChunk.concat(rightAIMessageChunk);\n   * // result.tool_call_chunks is equal to:\n   * // [\n   * //   {\n   * //     name: \"foo\",\n   * //     args: '{\"a\":1}'\n   * //     index: 0\n   * //   }\n   * // ]\n   * ```\n   *\n   * @property {string} [name] - If provided, a substring of the name of the tool to be called\n   * @property {string} [args] - If provided, a JSON substring of the arguments to the tool call\n   * @property {string} [id] - If provided, a substring of an identifier for the tool call\n   * @property {number} [index] - If provided, the index of the tool call in a sequence\n   */\n  export type ToolCallChunk = {\n    name?: string;\n\n    args?: string;\n\n    id?: string;\n\n    index?: number;\n\n    type?: 'tool_call_chunk';\n  };\n\n  /** Event names are of the format: on_[runnable_type]_(start|stream|end).\n\n  Runnable types are one of:\n\n  llm - used by non chat models\n  chat_model - used by chat models\n  prompt -- e.g., ChatPromptTemplate\n  tool -- LangChain tools\n  chain - most Runnables are of this type\n  Further, the events are categorized as one of:\n\n  start - when the runnable starts\n  stream - when the runnable is streaming\n  end - when the runnable ends\n  start, stream and end are associated with slightly different data payload.\n\n  Please see the documentation for EventData for more details. */\n  export type EventName = string;\n  export type RunStep = {\n    type: StepTypes;\n    id: string; // #new\n    runId?: string; // #new\n    index: number; // #new\n    stepIndex?: number; // #new\n    stepDetails: StepDetails;\n    usage: null | object;\n  };\n  /**\n   * Represents a run step delta i.e. any changed fields on a run step during\n   * streaming.\n   */\n  export interface RunStepDeltaEvent {\n    /**\n     * The identifier of the run step, which can be referenced in API endpoints.\n     */\n    id: string;\n    /**\n     * The delta containing the fields that have changed on the run step.\n     */\n    delta: ToolCallDelta;\n  }\n  export type StepDetails = MessageCreationDetails | ToolCallsDetails;\n  export type MessageCreationDetails = {\n    type: StepTypes.MESSAGE_CREATION;\n    message_creation: {\n      message_id: string;\n    };\n  };\n  export type ToolCallsDetails = {\n    type: StepTypes.TOOL_CALLS;\n    tool_calls: AgentToolCall[];\n  };\n  export type ToolCallDelta = {\n    type: StepTypes.TOOL_CALLS | string;\n    tool_calls?: ToolCallChunk[];\n    auth?: string;\n    expires_at?: number;\n  };\n  export type AgentToolCall = FunctionToolCall | ToolCall;\n  export interface ExtendedMessageContent {\n    type?: string;\n    text?: string;\n    input?: string;\n    index?: number;\n    id?: string;\n    name?: string;\n  }\n  /**\n   * Represents a message delta i.e. any changed fields on a message during\n   * streaming.\n   */\n  export interface MessageDeltaEvent {\n    /**\n     * The identifier of the message, which can be referenced in API endpoints.\n     */\n    id: string;\n    /**\n     * The delta containing the fields that have changed on the Message.\n     */\n    delta: MessageDelta;\n  }\n  /**\n   * The delta containing the fields that have changed on the Message.\n   */\n  export interface MessageDelta {\n    /**\n     * The content of the message in array of text and/or images.\n     */\n    content?: Agents.MessageContentComplex[];\n  }\n\n  /**\n   * Represents a reasoning delta i.e. any changed fields on a message during\n   * streaming.\n   */\n  export interface ReasoningDeltaEvent {\n    /**\n     * The identifier of the message, which can be referenced in API endpoints.\n     */\n    id: string;\n\n    /**\n     * The delta containing the fields that have changed.\n     */\n    delta: ReasoningDelta;\n  }\n\n  /**\n   * The reasoning delta containing the fields that have changed on the Message.\n   */\n  export interface ReasoningDelta {\n    /**\n     * The content of the message in array of text and/or images.\n     */\n    content?: MessageContentComplex[];\n  }\n\n  export type ReasoningDeltaUpdate = { type: ContentTypes.THINK; think: string };\n  export type ContentType =\n    | ContentTypes.THINK\n    | ContentTypes.TEXT\n    | ContentTypes.IMAGE_URL\n    | string;\n}\n\nexport type ToolCallResult = {\n  user: string;\n  toolId: string;\n  result?: unknown;\n  messageId: string;\n  partIndex?: number;\n  blockIndex?: number;\n  conversationId: string;\n  attachments?: TAttachment[];\n};\n\nexport enum AuthTypeEnum {\n  ServiceHttp = 'service_http',\n  OAuth = 'oauth',\n  None = 'none',\n}\n\nexport enum AuthorizationTypeEnum {\n  Bearer = 'bearer',\n  Basic = 'basic',\n  Custom = 'custom',\n}\n\nexport enum TokenExchangeMethodEnum {\n  DefaultPost = 'default_post',\n  BasicAuthHeader = 'basic_auth_header',\n}\n\nexport type Action = {\n  action_id: string;\n  type?: string;\n  settings?: Record<string, unknown>;\n  metadata: ActionMetadata;\n  version: number | string;\n} & ({ assistant_id: string; agent_id?: never } | { assistant_id?: never; agent_id: string });\n\nexport type ActionMetadata = {\n  api_key?: string;\n  auth?: ActionAuth;\n  domain?: string;\n  privacy_policy_url?: string;\n  raw_spec?: string;\n  oauth_client_id?: string;\n  oauth_client_secret?: string;\n};\n\nexport type ActionAuth = {\n  authorization_type?: AuthorizationTypeEnum;\n  custom_auth_header?: string;\n  type?: AuthTypeEnum;\n  authorization_content_type?: string;\n  authorization_url?: string;\n  client_url?: string;\n  scope?: string;\n  token_exchange_method?: TokenExchangeMethodEnum;\n};\n\nexport type ActionMetadataRuntime = ActionMetadata & {\n  oauth_access_token?: string;\n  oauth_refresh_token?: string;\n  oauth_token_expires_at?: Date;\n};\n\nexport type MCP = {\n  mcp_id: string;\n  metadata: MCPMetadata;\n} & ({ assistant_id: string; agent_id?: never } | { assistant_id?: never; agent_id: string });\n\nexport type MCPMetadata = Omit<ActionMetadata, 'auth'> & {\n  name?: string;\n  description?: string;\n  url?: string;\n  tools?: string[];\n  auth?: MCPAuth;\n  icon?: string;\n  trust?: boolean;\n};\n\nexport type MCPAuth = ActionAuth;\n\nexport type AgentToolType = {\n  tool_id: string;\n  metadata: ToolMetadata;\n} & ({ assistant_id: string; agent_id?: never } | { assistant_id?: never; agent_id: string });\n\nexport type ToolMetadata = TPlugin;\n","import { z } from 'zod';\nimport { TokenExchangeMethodEnum } from './types/agents';\nimport { extractEnvVariable } from './utils';\n\nconst BaseOptionsSchema = z.object({\n  iconPath: z.string().optional(),\n  timeout: z.number().optional(),\n  initTimeout: z.number().optional(),\n  /** Controls visibility in chat dropdown menu (MCPSelect) */\n  chatMenu: z.boolean().optional(),\n  /**\n   * Controls server instruction behavior:\n   * - undefined/not set: No instructions included (default)\n   * - true: Use server-provided instructions\n   * - string: Use custom instructions (overrides server-provided)\n   */\n  serverInstructions: z.union([z.boolean(), z.string()]).optional(),\n  /**\n   * OAuth configuration for SSE and Streamable HTTP transports\n   * - Optional: OAuth can be auto-discovered on 401 responses\n   * - Pre-configured values will skip discovery steps\n   */\n  oauth: z\n    .object({\n      /** OAuth authorization endpoint (optional - can be auto-discovered) */\n      authorization_url: z.string().url().optional(),\n      /** OAuth token endpoint (optional - can be auto-discovered) */\n      token_url: z.string().url().optional(),\n      /** OAuth client ID (optional - can use dynamic registration) */\n      client_id: z.string().optional(),\n      /** OAuth client secret (optional - can use dynamic registration) */\n      client_secret: z.string().optional(),\n      /** OAuth scopes to request */\n      scope: z.string().optional(),\n      /** OAuth redirect URI (defaults to /api/mcp/{serverName}/oauth/callback) */\n      redirect_uri: z.string().url().optional(),\n      /** Token exchange method */\n      token_exchange_method: z.nativeEnum(TokenExchangeMethodEnum).optional(),\n    })\n    .optional(),\n  customUserVars: z\n    .record(\n      z.string(),\n      z.object({\n        title: z.string(),\n        description: z.string(),\n      }),\n    )\n    .optional(),\n});\n\nexport const StdioOptionsSchema = BaseOptionsSchema.extend({\n  type: z.literal('stdio').optional(),\n  /**\n   * The executable to run to start the server.\n   */\n  command: z.string(),\n  /**\n   * Command line arguments to pass to the executable.\n   */\n  args: z.array(z.string()),\n  /**\n   * The environment to use when spawning the process.\n   *\n   * If not specified, the result of getDefaultEnvironment() will be used.\n   * Environment variables can be referenced using ${VAR_NAME} syntax.\n   */\n  env: z\n    .record(z.string(), z.string())\n    .optional()\n    .transform((env) => {\n      if (!env) {\n        return env;\n      }\n\n      const processedEnv: Record<string, string> = {};\n      for (const [key, value] of Object.entries(env)) {\n        processedEnv[key] = extractEnvVariable(value);\n      }\n      return processedEnv;\n    }),\n  /**\n   * How to handle stderr of the child process. This matches the semantics of Node's `child_process.spawn`.\n   *\n   * @type {import('node:child_process').IOType | import('node:stream').Stream | number}\n   *\n   * The default is \"inherit\", meaning messages to stderr will be printed to the parent process's stderr.\n   */\n  stderr: z.any().optional(),\n});\n\nexport const WebSocketOptionsSchema = BaseOptionsSchema.extend({\n  type: z.literal('websocket').optional(),\n  url: z\n    .string()\n    .transform((val: string) => extractEnvVariable(val))\n    .pipe(z.string().url())\n    .refine(\n      (val: string) => {\n        const protocol = new URL(val).protocol;\n        return protocol === 'ws:' || protocol === 'wss:';\n      },\n      {\n        message: 'WebSocket URL must start with ws:// or wss://',\n      },\n    ),\n});\n\nexport const SSEOptionsSchema = BaseOptionsSchema.extend({\n  type: z.literal('sse').optional(),\n  headers: z.record(z.string(), z.string()).optional(),\n  url: z\n    .string()\n    .transform((val: string) => extractEnvVariable(val))\n    .pipe(z.string().url())\n    .refine(\n      (val: string) => {\n        const protocol = new URL(val).protocol;\n        return protocol !== 'ws:' && protocol !== 'wss:';\n      },\n      {\n        message: 'SSE URL must not start with ws:// or wss://',\n      },\n    ),\n});\n\nexport const StreamableHTTPOptionsSchema = BaseOptionsSchema.extend({\n  type: z.literal('streamable-http'),\n  headers: z.record(z.string(), z.string()).optional(),\n  url: z\n    .string()\n    .transform((val: string) => extractEnvVariable(val))\n    .pipe(z.string().url())\n    .refine(\n      (val: string) => {\n        const protocol = new URL(val).protocol;\n        return protocol !== 'ws:' && protocol !== 'wss:';\n      },\n      {\n        message: 'Streamable HTTP URL must not start with ws:// or wss://',\n      },\n    ),\n});\n\nexport const MCPOptionsSchema = z.union([\n  StdioOptionsSchema,\n  WebSocketOptionsSchema,\n  SSEOptionsSchema,\n  StreamableHTTPOptionsSchema,\n]);\n\nexport const MCPServersSchema = z.record(z.string(), MCPOptionsSchema);\n\nexport type MCPOptions = z.infer<typeof MCPOptionsSchema>;\n","import { z } from 'zod';\nimport type { ZodError } from 'zod';\nimport type { TModelsConfig } from './types';\nimport { EModelEndpoint, eModelEndpointSchema } from './schemas';\nimport { specsConfigSchema, TSpecsConfig } from './models';\nimport { fileConfigSchema } from './file-config';\nimport { FileSources } from './types/files';\nimport { MCPServersSchema } from './mcp';\n\nexport const defaultSocialLogins = ['google', 'facebook', 'openid', 'github', 'discord', 'saml'];\n\nexport const defaultRetrievalModels = [\n  'gpt-4o',\n  'o1-preview-2024-09-12',\n  'o1-preview',\n  'o1-mini-2024-09-12',\n  'o1-mini',\n  'o3-mini',\n  'chatgpt-4o-latest',\n  'gpt-4o-2024-05-13',\n  'gpt-4o-2024-08-06',\n  'gpt-4o-mini',\n  'gpt-4o-mini-2024-07-18',\n  'gpt-4-turbo-preview',\n  'gpt-3.5-turbo-0125',\n  'gpt-4-0125-preview',\n  'gpt-4-1106-preview',\n  'gpt-3.5-turbo-1106',\n  'gpt-3.5-turbo-0125',\n  'gpt-4-turbo',\n  'gpt-4-0125',\n  'gpt-4-1106',\n];\n\nexport const excludedKeys = new Set([\n  'conversationId',\n  'title',\n  'iconURL',\n  'greeting',\n  'endpoint',\n  'endpointType',\n  'createdAt',\n  'updatedAt',\n  'expiredAt',\n  'messages',\n  'isArchived',\n  'tags',\n  'user',\n  '__v',\n  '_id',\n  'tools',\n  'model',\n  'files',\n  'spec',\n  'disableParams',\n]);\n\nexport enum SettingsViews {\n  default = 'default',\n  advanced = 'advanced',\n}\n\nexport const fileSourceSchema = z.nativeEnum(FileSources);\n\n// Helper type to extract the shape of the Zod object schema\ntype SchemaShape<T> = T extends z.ZodObject<infer U> ? U : never;\n\n// Helper type to determine the default value or undefined based on whether the field has a default\ntype DefaultValue<T> =\n  T extends z.ZodDefault<z.ZodTypeAny> ? ReturnType<T['_def']['defaultValue']> : undefined;\n\n// Extract default values or undefined from the schema shape\ntype ExtractDefaults<T> = {\n  [P in keyof T]: DefaultValue<T[P]>;\n};\n\nexport type SchemaDefaults<T> = ExtractDefaults<SchemaShape<T>>;\n\nexport type TConfigDefaults = SchemaDefaults<typeof configSchema>;\n\nexport function getSchemaDefaults<Schema extends z.AnyZodObject>(\n  schema: Schema,\n): ExtractDefaults<SchemaShape<Schema>> {\n  const shape = schema.shape;\n  const entries = Object.entries(shape).map(([key, value]) => {\n    if (value instanceof z.ZodDefault) {\n      // Extract default value if it exists\n      return [key, value._def.defaultValue()];\n    }\n    return [key, undefined];\n  });\n\n  // Create the object with the right types\n  return Object.fromEntries(entries) as ExtractDefaults<SchemaShape<Schema>>;\n}\n\nexport const modelConfigSchema = z\n  .object({\n    deploymentName: z.string().optional(),\n    version: z.string().optional(),\n    assistants: z.boolean().optional(),\n  })\n  .or(z.boolean());\n\nexport type TAzureModelConfig = z.infer<typeof modelConfigSchema>;\n\nexport const azureBaseSchema = z.object({\n  apiKey: z.string(),\n  serverless: z.boolean().optional(),\n  instanceName: z.string().optional(),\n  deploymentName: z.string().optional(),\n  assistants: z.boolean().optional(),\n  addParams: z.record(z.any()).optional(),\n  dropParams: z.array(z.string()).optional(),\n  forcePrompt: z.boolean().optional(),\n  version: z.string().optional(),\n  baseURL: z.string().optional(),\n  additionalHeaders: z.record(z.any()).optional(),\n});\n\nexport type TAzureBaseSchema = z.infer<typeof azureBaseSchema>;\n\nexport const azureGroupSchema = z\n  .object({\n    group: z.string(),\n    models: z.record(z.string(), modelConfigSchema),\n  })\n  .required()\n  .and(azureBaseSchema);\n\nexport const azureGroupConfigsSchema = z.array(azureGroupSchema).min(1);\nexport type TAzureGroup = z.infer<typeof azureGroupSchema>;\nexport type TAzureGroups = z.infer<typeof azureGroupConfigsSchema>;\nexport type TAzureModelMapSchema = {\n  // deploymentName?: string;\n  // version?: string;\n  group: string;\n};\n\nexport type TAzureModelGroupMap = Record<string, TAzureModelMapSchema | undefined>;\nexport type TAzureGroupMap = Record<\n  string,\n  (TAzureBaseSchema & { models: Record<string, TAzureModelConfig | undefined> }) | undefined\n>;\n\nexport type TValidatedAzureConfig = {\n  modelNames: string[];\n  modelGroupMap: TAzureModelGroupMap;\n  groupMap: TAzureGroupMap;\n};\n\nexport type TAzureConfigValidationResult = TValidatedAzureConfig & {\n  isValid: boolean;\n  errors: (ZodError | string)[];\n};\n\nexport enum Capabilities {\n  code_interpreter = 'code_interpreter',\n  image_vision = 'image_vision',\n  retrieval = 'retrieval',\n  actions = 'actions',\n  tools = 'tools',\n}\n\nexport enum AgentCapabilities {\n  hide_sequential_outputs = 'hide_sequential_outputs',\n  end_after_tools = 'end_after_tools',\n  execute_code = 'execute_code',\n  file_search = 'file_search',\n  web_search = 'web_search',\n  artifacts = 'artifacts',\n  actions = 'actions',\n  tools = 'tools',\n  chain = 'chain',\n  ocr = 'ocr',\n}\n\nexport const defaultAssistantsVersion = {\n  [EModelEndpoint.assistants]: 2,\n  [EModelEndpoint.azureAssistants]: 1,\n};\n\nexport const baseEndpointSchema = z.object({\n  streamRate: z.number().optional(),\n  baseURL: z.string().optional(),\n  titlePrompt: z.string().optional(),\n  titleModel: z.string().optional(),\n});\n\nexport type TBaseEndpoint = z.infer<typeof baseEndpointSchema>;\n\nexport const bedrockEndpointSchema = baseEndpointSchema.merge(\n  z.object({\n    availableRegions: z.array(z.string()).optional(),\n  }),\n);\n\nexport const assistantEndpointSchema = baseEndpointSchema.merge(\n  z.object({\n    /* assistants specific */\n    disableBuilder: z.boolean().optional(),\n    pollIntervalMs: z.number().optional(),\n    timeoutMs: z.number().optional(),\n    version: z.union([z.string(), z.number()]).default(2),\n    supportedIds: z.array(z.string()).min(1).optional(),\n    excludedIds: z.array(z.string()).min(1).optional(),\n    privateAssistants: z.boolean().optional(),\n    retrievalModels: z.array(z.string()).min(1).optional().default(defaultRetrievalModels),\n    capabilities: z\n      .array(z.nativeEnum(Capabilities))\n      .optional()\n      .default([\n        Capabilities.code_interpreter,\n        Capabilities.image_vision,\n        Capabilities.retrieval,\n        Capabilities.actions,\n        Capabilities.tools,\n      ]),\n    /* general */\n    apiKey: z.string().optional(),\n    models: z\n      .object({\n        default: z.array(z.string()).min(1),\n        fetch: z.boolean().optional(),\n        userIdQuery: z.boolean().optional(),\n      })\n      .optional(),\n    titleConvo: z.boolean().optional(),\n    titleMethod: z.union([z.literal('completion'), z.literal('functions')]).optional(),\n    headers: z.record(z.any()).optional(),\n  }),\n);\n\nexport type TAssistantEndpoint = z.infer<typeof assistantEndpointSchema>;\n\nexport const defaultAgentCapabilities = [\n  AgentCapabilities.execute_code,\n  AgentCapabilities.file_search,\n  AgentCapabilities.web_search,\n  AgentCapabilities.artifacts,\n  AgentCapabilities.actions,\n  AgentCapabilities.tools,\n  AgentCapabilities.chain,\n  AgentCapabilities.ocr,\n];\n\nexport const agentsEndpointSchema = baseEndpointSchema\n  .merge(\n    z.object({\n      /* agents specific */\n      recursionLimit: z.number().optional(),\n      disableBuilder: z.boolean().optional().default(false),\n      maxRecursionLimit: z.number().optional(),\n      allowedProviders: z.array(z.union([z.string(), eModelEndpointSchema])).optional(),\n      capabilities: z\n        .array(z.nativeEnum(AgentCapabilities))\n        .optional()\n        .default(defaultAgentCapabilities),\n    }),\n  )\n  .default({\n    disableBuilder: false,\n    capabilities: defaultAgentCapabilities,\n  });\n\nexport type TAgentsEndpoint = z.infer<typeof agentsEndpointSchema>;\n\nexport const endpointSchema = baseEndpointSchema.merge(\n  z.object({\n    name: z.string().refine((value) => !eModelEndpointSchema.safeParse(value).success, {\n      message: `Value cannot be one of the default endpoint (EModelEndpoint) values: ${Object.values(\n        EModelEndpoint,\n      ).join(', ')}`,\n    }),\n    apiKey: z.string(),\n    baseURL: z.string(),\n    models: z.object({\n      default: z.array(z.string()).min(1),\n      fetch: z.boolean().optional(),\n      userIdQuery: z.boolean().optional(),\n    }),\n    titleConvo: z.boolean().optional(),\n    titleMethod: z.union([z.literal('completion'), z.literal('functions')]).optional(),\n    summarize: z.boolean().optional(),\n    summaryModel: z.string().optional(),\n    forcePrompt: z.boolean().optional(),\n    modelDisplayLabel: z.string().optional(),\n    headers: z.record(z.any()).optional(),\n    addParams: z.record(z.any()).optional(),\n    dropParams: z.array(z.string()).optional(),\n    customParams: z\n      .object({\n        defaultParamsEndpoint: z.string().default('custom'),\n        paramDefinitions: z.array(z.record(z.any())).optional(),\n      })\n      .strict(),\n    customOrder: z.number().optional(),\n    directEndpoint: z.boolean().optional(),\n    titleMessageRole: z.string().optional(),\n  }),\n);\n\nexport type TEndpoint = z.infer<typeof endpointSchema>;\n\nexport const azureEndpointSchema = z\n  .object({\n    groups: azureGroupConfigsSchema,\n    plugins: z.boolean().optional(),\n    assistants: z.boolean().optional(),\n  })\n  .and(\n    endpointSchema\n      .pick({\n        streamRate: true,\n        titleConvo: true,\n        titleMethod: true,\n        titleModel: true,\n        summarize: true,\n        summaryModel: true,\n        customOrder: true,\n      })\n      .partial(),\n  );\n\nexport type TAzureConfig = Omit<z.infer<typeof azureEndpointSchema>, 'groups'> &\n  TAzureConfigValidationResult;\n\nconst ttsOpenaiSchema = z.object({\n  url: z.string().optional(),\n  apiKey: z.string(),\n  model: z.string(),\n  voices: z.array(z.string()),\n});\n\nconst ttsAzureOpenAISchema = z.object({\n  instanceName: z.string(),\n  apiKey: z.string(),\n  deploymentName: z.string(),\n  apiVersion: z.string(),\n  model: z.string(),\n  voices: z.array(z.string()),\n});\n\nconst ttsElevenLabsSchema = z.object({\n  url: z.string().optional(),\n  websocketUrl: z.string().optional(),\n  apiKey: z.string(),\n  model: z.string(),\n  voices: z.array(z.string()),\n  voice_settings: z\n    .object({\n      similarity_boost: z.number().optional(),\n      stability: z.number().optional(),\n      style: z.number().optional(),\n      use_speaker_boost: z.boolean().optional(),\n    })\n    .optional(),\n  pronunciation_dictionary_locators: z.array(z.string()).optional(),\n});\n\nconst ttsLocalaiSchema = z.object({\n  url: z.string(),\n  apiKey: z.string().optional(),\n  voices: z.array(z.string()),\n  backend: z.string(),\n});\n\nconst ttsSchema = z.object({\n  openai: ttsOpenaiSchema.optional(),\n  azureOpenAI: ttsAzureOpenAISchema.optional(),\n  elevenlabs: ttsElevenLabsSchema.optional(),\n  localai: ttsLocalaiSchema.optional(),\n});\n\nconst sttOpenaiSchema = z.object({\n  url: z.string().optional(),\n  apiKey: z.string(),\n  model: z.string(),\n});\n\nconst sttAzureOpenAISchema = z.object({\n  instanceName: z.string(),\n  apiKey: z.string(),\n  deploymentName: z.string(),\n  apiVersion: z.string(),\n});\n\nconst sttSchema = z.object({\n  openai: sttOpenaiSchema.optional(),\n  azureOpenAI: sttAzureOpenAISchema.optional(),\n});\n\nconst speechTab = z\n  .object({\n    conversationMode: z.boolean().optional(),\n    advancedMode: z.boolean().optional(),\n    speechToText: z\n      .boolean()\n      .optional()\n      .or(\n        z.object({\n          engineSTT: z.string().optional(),\n          languageSTT: z.string().optional(),\n          autoTranscribeAudio: z.boolean().optional(),\n          decibelValue: z.number().optional(),\n          autoSendText: z.number().optional(),\n        }),\n      )\n      .optional(),\n    textToSpeech: z\n      .boolean()\n      .optional()\n      .or(\n        z.object({\n          engineTTS: z.string().optional(),\n          voice: z.string().optional(),\n          languageTTS: z.string().optional(),\n          automaticPlayback: z.boolean().optional(),\n          playbackRate: z.number().optional(),\n          cacheTTS: z.boolean().optional(),\n        }),\n      )\n      .optional(),\n  })\n  .optional();\n\nexport enum RateLimitPrefix {\n  FILE_UPLOAD = 'FILE_UPLOAD',\n  IMPORT = 'IMPORT',\n  TTS = 'TTS',\n  STT = 'STT',\n}\n\nexport const rateLimitSchema = z.object({\n  fileUploads: z\n    .object({\n      ipMax: z.number().optional(),\n      ipWindowInMinutes: z.number().optional(),\n      userMax: z.number().optional(),\n      userWindowInMinutes: z.number().optional(),\n    })\n    .optional(),\n  conversationsImport: z\n    .object({\n      ipMax: z.number().optional(),\n      ipWindowInMinutes: z.number().optional(),\n      userMax: z.number().optional(),\n      userWindowInMinutes: z.number().optional(),\n    })\n    .optional(),\n  tts: z\n    .object({\n      ipMax: z.number().optional(),\n      ipWindowInMinutes: z.number().optional(),\n      userMax: z.number().optional(),\n      userWindowInMinutes: z.number().optional(),\n    })\n    .optional(),\n  stt: z\n    .object({\n      ipMax: z.number().optional(),\n      ipWindowInMinutes: z.number().optional(),\n      userMax: z.number().optional(),\n      userWindowInMinutes: z.number().optional(),\n    })\n    .optional(),\n});\n\nexport enum EImageOutputType {\n  PNG = 'png',\n  WEBP = 'webp',\n  JPEG = 'jpeg',\n}\n\nconst termsOfServiceSchema = z.object({\n  externalUrl: z.string().optional(),\n  openNewTab: z.boolean().optional(),\n  modalAcceptance: z.boolean().optional(),\n  modalTitle: z.string().optional(),\n  modalContent: z.string().or(z.array(z.string())).optional(),\n});\n\nexport type TTermsOfService = z.infer<typeof termsOfServiceSchema>;\n\nconst mcpServersSchema = z.object({\n  placeholder: z.string().optional(),\n});\n\nexport type TMcpServersConfig = z.infer<typeof mcpServersSchema>;\n\nexport const intefaceSchema = z\n  .object({\n    privacyPolicy: z\n      .object({\n        externalUrl: z.string().optional(),\n        openNewTab: z.boolean().optional(),\n      })\n      .optional(),\n    termsOfService: termsOfServiceSchema.optional(),\n    customWelcome: z.string().optional(),\n    mcpServers: mcpServersSchema.optional(),\n    endpointsMenu: z.boolean().optional(),\n    modelSelect: z.boolean().optional(),\n    parameters: z.boolean().optional(),\n    sidePanel: z.boolean().optional(),\n    multiConvo: z.boolean().optional(),\n    bookmarks: z.boolean().optional(),\n    memories: z.boolean().optional(),\n    presets: z.boolean().optional(),\n    prompts: z.boolean().optional(),\n    agents: z.boolean().optional(),\n    temporaryChat: z.boolean().optional(),\n    temporaryChatRetention: z.number().min(1).max(8760).optional(),\n    runCode: z.boolean().optional(),\n    webSearch: z.boolean().optional(),\n  })\n  .default({\n    endpointsMenu: true,\n    modelSelect: true,\n    parameters: true,\n    sidePanel: true,\n    presets: true,\n    multiConvo: true,\n    bookmarks: true,\n    memories: true,\n    prompts: true,\n    agents: true,\n    temporaryChat: true,\n    runCode: true,\n    webSearch: true,\n  });\n\nexport type TInterfaceConfig = z.infer<typeof intefaceSchema>;\nexport type TBalanceConfig = z.infer<typeof balanceSchema>;\n\nexport const turnstileOptionsSchema = z\n  .object({\n    language: z.string().default('auto'),\n    size: z.enum(['normal', 'compact', 'flexible', 'invisible']).default('normal'),\n  })\n  .default({\n    language: 'auto',\n    size: 'normal',\n  });\n\nexport const turnstileSchema = z.object({\n  siteKey: z.string(),\n  options: turnstileOptionsSchema.optional(),\n});\n\nexport type TTurnstileConfig = z.infer<typeof turnstileSchema>;\n\nexport type TStartupConfig = {\n  appTitle: string;\n  socialLogins?: string[];\n  interface?: TInterfaceConfig;\n  turnstile?: TTurnstileConfig;\n  balance?: TBalanceConfig;\n  discordLoginEnabled: boolean;\n  facebookLoginEnabled: boolean;\n  githubLoginEnabled: boolean;\n  googleLoginEnabled: boolean;\n  openidLoginEnabled: boolean;\n  appleLoginEnabled: boolean;\n  samlLoginEnabled: boolean;\n  openidLabel: string;\n  openidImageUrl: string;\n  openidAutoRedirect: boolean;\n  samlLabel: string;\n  samlImageUrl: string;\n  /** LDAP Auth Configuration */\n  ldap?: {\n    /** LDAP enabled */\n    enabled: boolean;\n    /** Whether LDAP uses username vs. email */\n    username?: boolean;\n  };\n  serverDomain: string;\n  emailLoginEnabled: boolean;\n  registrationEnabled: boolean;\n  socialLoginEnabled: boolean;\n  passwordResetEnabled: boolean;\n  emailEnabled: boolean;\n  showBirthdayIcon: boolean;\n  helpAndFaqURL: string;\n  customFooter?: string;\n  modelSpecs?: TSpecsConfig;\n  sharedLinksEnabled: boolean;\n  publicSharedLinksEnabled: boolean;\n  analyticsGtmId?: string;\n  instanceProjectId: string;\n  bundlerURL?: string;\n  staticBundlerURL?: string;\n  webSearch?: {\n    searchProvider?: SearchProviders;\n    scraperType?: ScraperTypes;\n    rerankerType?: RerankerTypes;\n  };\n  mcpServers?: Record<\n    string,\n    {\n      customUserVars: Record<\n        string,\n        {\n          title: string;\n          description: string;\n        }\n      >;\n    }\n  >;\n  mcpPlaceholder?: string;\n};\n\nexport enum OCRStrategy {\n  MISTRAL_OCR = 'mistral_ocr',\n  CUSTOM_OCR = 'custom_ocr',\n  AZURE_MISTRAL_OCR = 'azure_mistral_ocr',\n}\n\nexport enum SearchCategories {\n  PROVIDERS = 'providers',\n  SCRAPERS = 'scrapers',\n  RERANKERS = 'rerankers',\n}\n\nexport enum SearchProviders {\n  SERPER = 'serper',\n  SEARXNG = 'searxng',\n}\n\nexport enum ScraperTypes {\n  FIRECRAWL = 'firecrawl',\n  SERPER = 'serper',\n}\n\nexport enum RerankerTypes {\n  JINA = 'jina',\n  COHERE = 'cohere',\n}\n\nexport enum SafeSearchTypes {\n  OFF = 0,\n  MODERATE = 1,\n  STRICT = 2,\n}\n\nexport const webSearchSchema = z.object({\n  serperApiKey: z.string().optional().default('${SERPER_API_KEY}'),\n  firecrawlApiKey: z.string().optional().default('${FIRECRAWL_API_KEY}'),\n  firecrawlApiUrl: z.string().optional().default('${FIRECRAWL_API_URL}'),\n  jinaApiKey: z.string().optional().default('${JINA_API_KEY}'),\n  cohereApiKey: z.string().optional().default('${COHERE_API_KEY}'),\n  searchProvider: z.nativeEnum(SearchProviders).optional(),\n  scraperType: z.nativeEnum(ScraperTypes).optional(),\n  rerankerType: z.nativeEnum(RerankerTypes).optional(),\n  scraperTimeout: z.number().optional(),\n  safeSearch: z.nativeEnum(SafeSearchTypes).default(SafeSearchTypes.MODERATE),\n});\n\nexport type TWebSearchConfig = z.infer<typeof webSearchSchema>;\n\nexport const ocrSchema = z.object({\n  mistralModel: z.string().optional(),\n  apiKey: z.string().optional().default('${OCR_API_KEY}'),\n  baseURL: z.string().optional().default('${OCR_BASEURL}'),\n  strategy: z.nativeEnum(OCRStrategy).default(OCRStrategy.MISTRAL_OCR),\n});\n\nexport const balanceSchema = z.object({\n  enabled: z.boolean().optional().default(false),\n  startBalance: z.number().optional().default(20000),\n  autoRefillEnabled: z.boolean().optional().default(false),\n  refillIntervalValue: z.number().optional().default(30),\n  refillIntervalUnit: z\n    .enum(['seconds', 'minutes', 'hours', 'days', 'weeks', 'months'])\n    .optional()\n    .default('days'),\n  refillAmount: z.number().optional().default(10000),\n});\n\nexport const memorySchema = z.object({\n  disabled: z.boolean().optional(),\n  validKeys: z.array(z.string()).optional(),\n  tokenLimit: z.number().optional(),\n  personalize: z.boolean().default(true),\n  messageWindowSize: z.number().optional().default(5),\n  agent: z\n    .union([\n      z.object({\n        id: z.string(),\n      }),\n      z.object({\n        provider: z.string(),\n        model: z.string(),\n        instructions: z.string().optional(),\n        model_parameters: z.record(z.any()).optional(),\n      }),\n    ])\n    .optional(),\n});\n\nexport type TMemoryConfig = z.infer<typeof memorySchema>;\n\nexport const configSchema = z.object({\n  version: z.string(),\n  cache: z.boolean().default(true),\n  ocr: ocrSchema.optional(),\n  webSearch: webSearchSchema.optional(),\n  memory: memorySchema.optional(),\n  secureImageLinks: z.boolean().optional(),\n  imageOutputType: z.nativeEnum(EImageOutputType).default(EImageOutputType.PNG),\n  includedTools: z.array(z.string()).optional(),\n  filteredTools: z.array(z.string()).optional(),\n  mcpServers: MCPServersSchema.optional(),\n  interface: intefaceSchema,\n  turnstile: turnstileSchema.optional(),\n  fileStrategy: fileSourceSchema.default(FileSources.local),\n  actions: z\n    .object({\n      allowedDomains: z.array(z.string()).optional(),\n    })\n    .optional(),\n  registration: z\n    .object({\n      socialLogins: z.array(z.string()).optional(),\n      allowedDomains: z.array(z.string()).optional(),\n    })\n    .default({ socialLogins: defaultSocialLogins }),\n  balance: balanceSchema.optional(),\n  speech: z\n    .object({\n      tts: ttsSchema.optional(),\n      stt: sttSchema.optional(),\n      speechTab: speechTab.optional(),\n    })\n    .optional(),\n  rateLimits: rateLimitSchema.optional(),\n  fileConfig: fileConfigSchema.optional(),\n  modelSpecs: specsConfigSchema.optional(),\n  endpoints: z\n    .object({\n      all: baseEndpointSchema.optional(),\n      [EModelEndpoint.openAI]: baseEndpointSchema.optional(),\n      [EModelEndpoint.google]: baseEndpointSchema.optional(),\n      [EModelEndpoint.anthropic]: baseEndpointSchema.optional(),\n      [EModelEndpoint.gptPlugins]: baseEndpointSchema.optional(),\n      [EModelEndpoint.azureOpenAI]: azureEndpointSchema.optional(),\n      [EModelEndpoint.azureAssistants]: assistantEndpointSchema.optional(),\n      [EModelEndpoint.assistants]: assistantEndpointSchema.optional(),\n      [EModelEndpoint.agents]: agentsEndpointSchema.optional(),\n      [EModelEndpoint.custom]: z.array(endpointSchema.partial()).optional(),\n      [EModelEndpoint.bedrock]: baseEndpointSchema.optional(),\n    })\n    .strict()\n    .refine((data) => Object.keys(data).length > 0, {\n      message: 'At least one `endpoints` field must be provided.',\n    })\n    .optional(),\n});\n\nexport const getConfigDefaults = () => getSchemaDefaults(configSchema);\n\nexport type TCustomConfig = z.infer<typeof configSchema>;\n\nexport type TProviderSchema =\n  | z.infer<typeof ttsOpenaiSchema>\n  | z.infer<typeof ttsElevenLabsSchema>\n  | z.infer<typeof ttsLocalaiSchema>\n  | undefined;\n\nexport enum KnownEndpoints {\n  anyscale = 'anyscale',\n  apipie = 'apipie',\n  cohere = 'cohere',\n  fireworks = 'fireworks',\n  deepseek = 'deepseek',\n  groq = 'groq',\n  huggingface = 'huggingface',\n  mistral = 'mistral',\n  mlx = 'mlx',\n  ollama = 'ollama',\n  openrouter = 'openrouter',\n  perplexity = 'perplexity',\n  shuttleai = 'shuttleai',\n  'together.ai' = 'together.ai',\n  unify = 'unify',\n  xai = 'xai',\n}\n\nexport enum FetchTokenConfig {\n  openrouter = KnownEndpoints.openrouter,\n}\n\nexport const defaultEndpoints: EModelEndpoint[] = [\n  EModelEndpoint.openAI,\n  EModelEndpoint.assistants,\n  EModelEndpoint.azureAssistants,\n  EModelEndpoint.azureOpenAI,\n  EModelEndpoint.agents,\n  EModelEndpoint.chatGPTBrowser,\n  EModelEndpoint.gptPlugins,\n  EModelEndpoint.google,\n  EModelEndpoint.anthropic,\n  EModelEndpoint.custom,\n  EModelEndpoint.bedrock,\n];\n\nexport const alternateName = {\n  [EModelEndpoint.openAI]: 'OpenAI',\n  [EModelEndpoint.assistants]: 'Assistants',\n  [EModelEndpoint.agents]: 'Agents',\n  [EModelEndpoint.azureAssistants]: 'Azure Assistants',\n  [EModelEndpoint.azureOpenAI]: 'Azure OpenAI',\n  [EModelEndpoint.chatGPTBrowser]: 'ChatGPT',\n  [EModelEndpoint.gptPlugins]: 'Plugins',\n  [EModelEndpoint.google]: 'Google',\n  [EModelEndpoint.anthropic]: 'Anthropic',\n  [EModelEndpoint.custom]: 'Custom',\n  [EModelEndpoint.bedrock]: 'AWS Bedrock',\n  [KnownEndpoints.ollama]: 'Ollama',\n  [KnownEndpoints.deepseek]: 'DeepSeek',\n  [KnownEndpoints.xai]: 'xAI',\n};\n\nconst sharedOpenAIModels = [\n  'gpt-4o-mini',\n  'gpt-4o',\n  'gpt-4.5-preview',\n  'gpt-4.5-preview-2025-02-27',\n  'gpt-3.5-turbo',\n  'gpt-3.5-turbo-0125',\n  'gpt-4-turbo',\n  'gpt-4-turbo-2024-04-09',\n  'gpt-4-0125-preview',\n  'gpt-4-turbo-preview',\n  'gpt-4-1106-preview',\n  'gpt-3.5-turbo-1106',\n  'gpt-3.5-turbo-16k-0613',\n  'gpt-3.5-turbo-16k',\n  'gpt-4',\n  'gpt-4-0314',\n  'gpt-4-32k-0314',\n  'gpt-4-0613',\n  'gpt-3.5-turbo-0613',\n];\n\nconst sharedAnthropicModels = ['model-1', 'model-2'];\n\nexport const bedrockModels = [\n  'anthropic.claude-3-5-sonnet-20241022-v2:0',\n  'anthropic.claude-3-5-sonnet-20240620-v1:0',\n  'anthropic.claude-3-5-haiku-20241022-v1:0',\n  'anthropic.claude-3-haiku-20240307-v1:0',\n  'anthropic.claude-3-opus-20240229-v1:0',\n  'anthropic.claude-3-sonnet-20240229-v1:0',\n  'anthropic.claude-v2',\n  'anthropic.claude-v2:1',\n  'anthropic.claude-instant-v1',\n  // 'cohere.command-text-v14', // no conversation history\n  // 'cohere.command-light-text-v14', // no conversation history\n  'cohere.command-r-v1:0',\n  'cohere.command-r-plus-v1:0',\n  'meta.llama2-13b-chat-v1',\n  'meta.llama2-70b-chat-v1',\n  'meta.llama3-8b-instruct-v1:0',\n  'meta.llama3-70b-instruct-v1:0',\n  'meta.llama3-1-8b-instruct-v1:0',\n  'meta.llama3-1-70b-instruct-v1:0',\n  'meta.llama3-1-405b-instruct-v1:0',\n  'mistral.mistral-7b-instruct-v0:2',\n  'mistral.mixtral-8x7b-instruct-v0:1',\n  'mistral.mistral-large-2402-v1:0',\n  'mistral.mistral-large-2407-v1:0',\n  'mistral.mistral-small-2402-v1:0',\n  'ai21.jamba-instruct-v1:0',\n  // 'ai21.j2-mid-v1', // no streaming\n  // 'ai21.j2-ultra-v1', no conversation history\n  'amazon.titan-text-lite-v1',\n  'amazon.titan-text-express-v1',\n  'amazon.titan-text-premier-v1:0',\n];\n\nexport const defaultModels = {\n  [EModelEndpoint.azureAssistants]: sharedOpenAIModels,\n  [EModelEndpoint.assistants]: [...sharedOpenAIModels, 'chatgpt-4o-latest'],\n  [EModelEndpoint.agents]: sharedOpenAIModels, // TODO: Add agent models (agentsModels)\n  [EModelEndpoint.google]: [\n    // Gemini 2.0 Models\n    'gemini-2.0-flash-001',\n    'gemini-2.0-flash-exp',\n    'gemini-2.0-flash-lite',\n    'gemini-2.0-pro-exp-02-05',\n    // Gemini 1.5 Models\n    'gemini-1.5-flash-001',\n    'gemini-1.5-flash-002',\n    'gemini-1.5-pro-001',\n    'gemini-1.5-pro-002',\n    // Gemini 1.0 Models\n    'gemini-1.0-pro-001',\n  ],\n  [EModelEndpoint.anthropic]: sharedAnthropicModels,\n  [EModelEndpoint.openAI]: [\n    ...sharedOpenAIModels,\n    'chatgpt-4o-latest',\n    'gpt-4-vision-preview',\n    'gpt-3.5-turbo-instruct-0914',\n    'gpt-3.5-turbo-instruct',\n  ],\n  [EModelEndpoint.bedrock]: bedrockModels,\n};\n\nconst fitlerAssistantModels = (str: string) => {\n  return /gpt-4|gpt-3\\\\.5/i.test(str) && !/vision|instruct/i.test(str);\n};\n\nconst openAIModels = defaultModels[EModelEndpoint.openAI];\n\nexport const initialModelsConfig: TModelsConfig = {\n  initial: [],\n  [EModelEndpoint.openAI]: openAIModels,\n  [EModelEndpoint.assistants]: openAIModels.filter(fitlerAssistantModels),\n  [EModelEndpoint.agents]: openAIModels, // TODO: Add agent models (agentsModels)\n  [EModelEndpoint.gptPlugins]: openAIModels,\n  [EModelEndpoint.azureOpenAI]: openAIModels,\n  [EModelEndpoint.chatGPTBrowser]: ['text-davinci-002-render-sha'],\n  [EModelEndpoint.google]: defaultModels[EModelEndpoint.google],\n  [EModelEndpoint.anthropic]: defaultModels[EModelEndpoint.anthropic],\n  [EModelEndpoint.bedrock]: defaultModels[EModelEndpoint.bedrock],\n};\n\nexport const EndpointURLs: Record<string, string> = {\n  [EModelEndpoint.assistants]: '/api/assistants/v2/chat',\n  [EModelEndpoint.azureAssistants]: '/api/assistants/v1/chat',\n  [EModelEndpoint.agents]: `/api/${EModelEndpoint.agents}/chat`,\n};\n\nexport const modularEndpoints = new Set<EModelEndpoint | string>([\n  EModelEndpoint.gptPlugins,\n  EModelEndpoint.anthropic,\n  EModelEndpoint.google,\n  EModelEndpoint.openAI,\n  EModelEndpoint.azureOpenAI,\n  EModelEndpoint.custom,\n  EModelEndpoint.agents,\n  EModelEndpoint.bedrock,\n]);\n\nexport const supportsBalanceCheck = {\n  [EModelEndpoint.custom]: true,\n  [EModelEndpoint.openAI]: true,\n  [EModelEndpoint.anthropic]: true,\n  [EModelEndpoint.gptPlugins]: true,\n  [EModelEndpoint.assistants]: true,\n  [EModelEndpoint.agents]: true,\n  [EModelEndpoint.azureAssistants]: true,\n  [EModelEndpoint.azureOpenAI]: true,\n  [EModelEndpoint.bedrock]: true,\n};\n\nexport const visionModels = [\n  'qwen-vl',\n  'grok-vision',\n  'grok-2-vision',\n  'grok-3',\n  'gpt-4o-mini',\n  'gpt-4o',\n  'gpt-4-turbo',\n  'gpt-4-vision',\n  'o4-mini',\n  'o3',\n  'o1',\n  'gpt-4.1',\n  'gpt-4.5',\n  'llava',\n  'llava-13b',\n  'gemini-pro-vision',\n  'claude-3',\n  'gemma',\n  'gemini-exp',\n  'gemini-1.5',\n  'gemini-2',\n  'gemini-3',\n  'moondream',\n  'llama3.2-vision',\n  'llama-3.2-11b-vision',\n  'llama-3-2-11b-vision',\n  'llama-3.2-90b-vision',\n  'llama-3-2-90b-vision',\n  'llama-4',\n  'claude-opus-4',\n  'claude-sonnet-4',\n  'claude-haiku-4',\n];\nexport enum VisionModes {\n  generative = 'generative',\n  agents = 'agents',\n}\n\nexport function validateVisionModel({\n  model,\n  additionalModels = [],\n  availableModels,\n}: {\n  model: string;\n  additionalModels?: string[];\n  availableModels?: string[];\n}) {\n  if (!model) {\n    return false;\n  }\n\n  if (model.includes('gpt-4-turbo-preview') || model.includes('o1-mini')) {\n    return false;\n  }\n\n  if (availableModels && !availableModels.includes(model)) {\n    return false;\n  }\n\n  return visionModels.concat(additionalModels).some((visionModel) => model.includes(visionModel));\n}\n\nexport const imageGenTools = new Set(['dalle', 'dall-e', 'stable-diffusion', 'flux']);\n\n/**\n * Enum for collections using infinite queries\n */\nexport enum InfiniteCollections {\n  /**\n   * Collection for Prompt Groups\n   */\n  PROMPT_GROUPS = 'promptGroups',\n  /**\n   * Collection for Shared Links\n   */\n  SHARED_LINKS = 'sharedLinks',\n}\n\n/**\n * Enum for time intervals\n */\nexport enum Time {\n  ONE_HOUR = 3600000,\n  THIRTY_MINUTES = 1800000,\n  TEN_MINUTES = 600000,\n  FIVE_MINUTES = 300000,\n  TWO_MINUTES = 120000,\n  ONE_MINUTE = 60000,\n  THIRTY_SECONDS = 30000,\n}\n\n/**\n * Enum for cache keys.\n */\nexport enum CacheKeys {\n  /**\n   * Key for the config store namespace.\n   */\n  CONFIG_STORE = 'configStore',\n  /**\n   * Key for the config store namespace.\n   */\n  ROLES = 'roles',\n  /**\n   * Key for the plugins cache.\n   */\n  PLUGINS = 'plugins',\n  /**\n   * Key for the title generation cache.\n   */\n  GEN_TITLE = 'genTitle',\n  /**\n  /**\n   * Key for the tools cache.\n   */\n  TOOLS = 'tools',\n  /**\n   * Key for the model config cache.\n   */\n  MODELS_CONFIG = 'modelsConfig',\n  /**\n   * Key for the model queries cache.\n   */\n  MODEL_QUERIES = 'modelQueries',\n  /**\n   * Key for the default startup config cache.\n   */\n  STARTUP_CONFIG = 'startupConfig',\n  /**\n   * Key for the default endpoint config cache.\n   */\n  ENDPOINT_CONFIG = 'endpointsConfig',\n  /**\n   * Key for accessing the model token config cache.\n   */\n  TOKEN_CONFIG = 'tokenConfig',\n  /**\n   * Key for the custom config cache.\n   */\n  CUSTOM_CONFIG = 'customConfig',\n  /**\n   * Key for accessing Abort Keys\n   */\n  ABORT_KEYS = 'abortKeys',\n  /**\n   * Key for the override config cache.\n   */\n  OVERRIDE_CONFIG = 'overrideConfig',\n  /**\n   * Key for the bans cache.\n   */\n  BANS = 'bans',\n  /**\n   * Key for the encoded domains cache.\n   * Used by Azure OpenAI Assistants.\n   */\n  ENCODED_DOMAINS = 'encoded_domains',\n  /**\n   * Key for the cached audio run Ids.\n   */\n  AUDIO_RUNS = 'audioRuns',\n  /**\n   * Key for in-progress messages.\n   */\n  MESSAGES = 'messages',\n  /**\n   * Key for in-progress flow states.\n   */\n  FLOWS = 'flows',\n  /**\n   * Key for individual MCP Tool Manifests.\n   */\n  MCP_TOOLS = 'mcp_tools',\n  /**\n   * Key for pending chat requests (concurrency check)\n   */\n  PENDING_REQ = 'pending_req',\n  /**\n   * Key for s3 check intervals per user\n   */\n  S3_EXPIRY_INTERVAL = 'S3_EXPIRY_INTERVAL',\n  /**\n   * key for open id exchanged tokens\n   */\n  OPENID_EXCHANGED_TOKENS = 'OPENID_EXCHANGED_TOKENS',\n}\n\n/**\n * Enum for violation types, used to identify, log, and cache violations.\n */\nexport enum ViolationTypes {\n  /**\n   * File Upload Violations (exceeding limit).\n   */\n  FILE_UPLOAD_LIMIT = 'file_upload_limit',\n  /**\n   * Illegal Model Request (not available).\n   */\n  ILLEGAL_MODEL_REQUEST = 'illegal_model_request',\n  /**\n   * Token Limit Violation.\n   */\n  TOKEN_BALANCE = 'token_balance',\n  /**\n   * An issued ban.\n   */\n  BAN = 'ban',\n  /**\n   * TTS Request Limit Violation.\n   */\n  TTS_LIMIT = 'tts_limit',\n  /**\n   * STT Request Limit Violation.\n   */\n  STT_LIMIT = 'stt_limit',\n  /**\n   * Reset Password Limit Violation.\n   */\n  RESET_PASSWORD_LIMIT = 'reset_password_limit',\n  /**\n   * Verify Email Limit Violation.\n   */\n  VERIFY_EMAIL_LIMIT = 'verify_email_limit',\n  /**\n   * Verify Conversation Access violation.\n   */\n  CONVO_ACCESS = 'convo_access',\n  /**\n   * Tool Call Limit Violation.\n   */\n  TOOL_CALL_LIMIT = 'tool_call_limit',\n}\n\n/**\n * Enum for error message types that are not \"violations\" as above, used to identify client-facing errors.\n */\nexport enum ErrorTypes {\n  /**\n   * No User-provided Key.\n   */\n  NO_USER_KEY = 'no_user_key',\n  /**\n   * Expired User-provided Key.\n   */\n  EXPIRED_USER_KEY = 'expired_user_key',\n  /**\n   * Invalid User-provided Key.\n   */\n  INVALID_USER_KEY = 'invalid_user_key',\n  /**\n   * No Base URL Provided.\n   */\n  NO_BASE_URL = 'no_base_url',\n  /**\n   * Moderation error\n   */\n  MODERATION = 'moderation',\n  /**\n   * Prompt exceeds max length\n   */\n  INPUT_LENGTH = 'INPUT_LENGTH',\n  /**\n   * Invalid request error, API rejected request\n   */\n  INVALID_REQUEST = 'invalid_request_error',\n  /**\n   * Invalid action request error, likely not on list of allowed domains\n   */\n  INVALID_ACTION = 'invalid_action_error',\n  /**\n   * Invalid request error, API rejected request\n   */\n  NO_SYSTEM_MESSAGES = 'no_system_messages',\n  /**\n   * Google provider returned an error\n   */\n  GOOGLE_ERROR = 'google_error',\n  /**\n   * Invalid Agent Provider (excluded by Admin)\n   */\n  INVALID_AGENT_PROVIDER = 'invalid_agent_provider',\n}\n\n/**\n * Enum for authentication keys.\n */\nexport enum AuthKeys {\n  /**\n   * Key for the Service Account to use Vertex AI.\n   */\n  GOOGLE_SERVICE_KEY = 'GOOGLE_SERVICE_KEY',\n  /**\n   * API key to use Google Generative AI.\n   *\n   * Note: this is not for Environment Variables, but to access encrypted object values.\n   */\n  GOOGLE_API_KEY = 'GOOGLE_API_KEY',\n}\n\n/**\n * Enum for Image Detail Cost.\n *\n * **Low Res Fixed Cost:** `85`\n *\n * **High Res Calculation:**\n *\n * Number of `512px` Tiles * `170` + `85` (Additional Cost)\n */\nexport enum ImageDetailCost {\n  /**\n   * Low resolution is a fixed value.\n   */\n  LOW = 85,\n  /**\n   * High resolution Cost Per Tile\n   */\n  HIGH = 170,\n  /**\n   * Additional Cost added to High Resolution Total Cost\n   */\n  // eslint-disable-next-line @typescript-eslint/no-duplicate-enum-values\n  ADDITIONAL = 85,\n}\n\n/**\n * Tab values for Settings Dialog\n */\nexport enum SettingsTabValues {\n  /**\n   * Tab for General Settings\n   */\n  GENERAL = 'general',\n  /**\n   * Tab for Chat Settings\n   */\n  CHAT = 'chat',\n  /**\n   * Tab for Speech Settings\n   */\n  SPEECH = 'speech',\n  /**\n   * Tab for Beta Features\n   */\n  BETA = 'beta',\n  /**\n   * Tab for Data Controls\n   */\n  DATA = 'data',\n  /**\n   * Tab for Balance Settings\n   */\n  BALANCE = 'balance',\n  /**\n   * Tab for Account Settings\n   */\n  ACCOUNT = 'account',\n  /**\n   * Chat input commands\n   */\n  COMMANDS = 'commands',\n  /**\n   * Tab for Personalization Settings\n   */\n  PERSONALIZATION = 'personalization',\n}\n\nexport enum STTProviders {\n  /**\n   * Provider for OpenAI STT\n   */\n  OPENAI = 'openai',\n  /**\n   * Provider for Microsoft Azure STT\n   */\n  AZURE_OPENAI = 'azureOpenAI',\n}\n\nexport enum TTSProviders {\n  /**\n   * Provider for OpenAI TTS\n   */\n  OPENAI = 'openai',\n  /**\n   * Provider for Microsoft Azure OpenAI TTS\n   */\n  AZURE_OPENAI = 'azureOpenAI',\n  /**\n   * Provider for ElevenLabs TTS\n   */\n  ELEVENLABS = 'elevenlabs',\n  /**\n   * Provider for LocalAI TTS\n   */\n  LOCALAI = 'localai',\n}\n\n/** Enum for app-wide constants */\nexport enum Constants {\n  /** Key for the app's version. */\n  VERSION = 'v0.7.8',\n  /** Key for the Custom Config's version (chat.yaml). */\n  CONFIG_VERSION = '1.2.8',\n  /** Standard value for the first message's `parentMessageId` value, to indicate no parent exists. */\n  NO_PARENT = '00000000-0000-0000-0000-000000000000',\n  /** Standard value for the initial conversationId before a request is sent */\n  NEW_CONVO = 'new',\n  /** Standard value for the temporary conversationId after a request is sent and before the server responds */\n  PENDING_CONVO = 'PENDING',\n  /** Standard value for the conversationId used for search queries */\n  SEARCH = 'search',\n  /** Fixed, encoded domain length for Azure OpenAI Assistants Function name parsing. */\n  ENCODED_DOMAIN_LENGTH = 10,\n  /** Identifier for using current_model in multi-model requests. */\n  CURRENT_MODEL = 'current_model',\n  /** Common divider for text values */\n  COMMON_DIVIDER = '__',\n  /** Max length for commands */\n  COMMANDS_MAX_LENGTH = 56,\n  /** Default Stream Rate (ms) */\n  DEFAULT_STREAM_RATE = 1,\n  /** Saved Tag */\n  SAVED_TAG = 'Saved',\n  /** Max number of Conversation starters for Agents/Assistants */\n  MAX_CONVO_STARTERS = 4,\n  /** Global/instance Project Name */\n  GLOBAL_PROJECT_NAME = 'instance',\n  /** Delimiter for MCP tools */\n  mcp_delimiter = '_mcp_',\n  /** Prefix for MCP plugins */\n  mcp_prefix = 'mcp_',\n  /** Placeholder Agent ID for Ephemeral Agents */\n  EPHEMERAL_AGENT_ID = 'ephemeral',\n}\n\nexport enum LocalStorageKeys {\n  /** Key for the admin defined App Title */\n  APP_TITLE = 'appTitle',\n  /** Key for the last conversation setup. */\n  LAST_CONVO_SETUP = 'lastConversationSetup',\n  /** Key for the last selected model. */\n  LAST_MODEL = 'lastSelectedModel',\n  /** Key for the last selected tools. */\n  LAST_TOOLS = 'lastSelectedTools',\n  /** Key for the last selected spec by name*/\n  LAST_SPEC = 'lastSelectedSpec',\n  /** Key for temporary files to delete */\n  FILES_TO_DELETE = 'filesToDelete',\n  /** Prefix key for the last selected assistant ID by index */\n  ASST_ID_PREFIX = 'assistant_id__',\n  /** Prefix key for the last selected agent ID by index */\n  AGENT_ID_PREFIX = 'agent_id__',\n  /** Key for the last selected fork setting */\n  FORK_SETTING = 'forkSetting',\n  /** Key for remembering the last selected option, instead of manually selecting */\n  REMEMBER_FORK_OPTION = 'rememberDefaultFork',\n  /** Key for remembering the split at target fork option modifier */\n  FORK_SPLIT_AT_TARGET = 'splitAtTarget',\n  /** Key for saving text drafts */\n  TEXT_DRAFT = 'textDraft_',\n  /** Key for saving file drafts */\n  FILES_DRAFT = 'filesDraft_',\n  /** Key for last Selected Prompt Category */\n  LAST_PROMPT_CATEGORY = 'lastPromptCategory',\n  /** Key for rendering User Messages as Markdown */\n  ENABLE_USER_MSG_MARKDOWN = 'enableUserMsgMarkdown',\n  /** Key for displaying analysis tool code input */\n  SHOW_ANALYSIS_CODE = 'showAnalysisCode',\n  /** Last selected MCP values per conversation ID */\n  LAST_MCP_ = 'LAST_MCP_',\n  /** Last checked toggle for Code Interpreter API per conversation ID */\n  LAST_CODE_TOGGLE_ = 'LAST_CODE_TOGGLE_',\n  /** Last checked toggle for Web Search per conversation ID */\n  LAST_WEB_SEARCH_TOGGLE_ = 'LAST_WEB_SEARCH_TOGGLE_',\n  /** Last checked toggle for File Search per conversation ID */\n  LAST_FILE_SEARCH_TOGGLE_ = 'LAST_FILE_SEARCH_TOGGLE_',\n  /** Key for the last selected agent provider */\n  LAST_AGENT_PROVIDER = 'lastAgentProvider',\n  /** Key for the last selected agent model */\n  LAST_AGENT_MODEL = 'lastAgentModel',\n  /** Pin state for MCP tools per conversation ID */\n  PIN_MCP_ = 'PIN_MCP_',\n  /** Pin state for Web Search per conversation ID */\n  PIN_WEB_SEARCH_ = 'PIN_WEB_SEARCH_',\n  /** Pin state for Code Interpreter per conversation ID */\n  PIN_CODE_INTERPRETER_ = 'PIN_CODE_INTERPRETER_',\n}\n\nexport enum ForkOptions {\n  /** Key for direct path option */\n  DIRECT_PATH = 'directPath',\n  /** Key for including branches */\n  INCLUDE_BRANCHES = 'includeBranches',\n  /** Key for target level fork (default) */\n  TARGET_LEVEL = 'targetLevel',\n  /** Default option */\n  DEFAULT = 'default',\n}\n\n/**\n * Enum for Cohere related constants\n */\nexport enum CohereConstants {\n  /**\n   * Cohere API Endpoint, for special handling\n   */\n  API_URL = 'https://api.cohere.ai/v1',\n  /**\n   * Role for \"USER\" messages\n   */\n  ROLE_USER = 'USER',\n  /**\n   * Role for \"SYSTEM\" messages\n   */\n  ROLE_SYSTEM = 'SYSTEM',\n  /**\n   * Role for \"CHATBOT\" messages\n   */\n  ROLE_CHATBOT = 'CHATBOT',\n  /**\n   * Title message as required by Cohere\n   */\n  TITLE_MESSAGE = 'TITLE:',\n}\n\nexport enum SystemCategories {\n  ALL = 'sys__all__sys',\n  MY_PROMPTS = 'sys__my__prompts__sys',\n  NO_CATEGORY = 'sys__no__category__sys',\n  SHARED_PROMPTS = 'sys__shared__prompts__sys',\n}\n\nexport const providerEndpointMap = {\n  [EModelEndpoint.openAI]: EModelEndpoint.openAI,\n  [EModelEndpoint.bedrock]: EModelEndpoint.bedrock,\n  [EModelEndpoint.anthropic]: EModelEndpoint.anthropic,\n  [EModelEndpoint.azureOpenAI]: EModelEndpoint.azureOpenAI,\n};\n\nexport const specialVariables = {\n  current_date: true,\n  current_user: true,\n  iso_datetime: true,\n  current_datetime: true,\n};\n\nexport type TSpecialVarLabel = `com_ui_special_var_${keyof typeof specialVariables}`;\n","export enum ContentTypes {\n  TEXT = 'text',\n  THINK = 'think',\n  TEXT_DELTA = 'text_delta',\n  TOOL_CALL = 'tool_call',\n  IMAGE_FILE = 'image_file',\n  IMAGE_URL = 'image_url',\n  AGENT_UPDATE = 'agent_update',\n  ERROR = 'error',\n}\n\nexport enum StepTypes {\n  TOOL_CALLS = 'tool_calls',\n  MESSAGE_CREATION = 'message_creation',\n}\n\nexport enum ToolCallTypes {\n  FUNCTION = 'function',\n  RETRIEVAL = 'retrieval',\n  FILE_SEARCH = 'file_search',\n  CODE_INTERPRETER = 'code_interpreter',\n  /* Agents Tool Call */\n  TOOL_CALL = 'tool_call',\n}\n","import { z } from 'zod';\nimport * as s from './schemas';\n\ntype ThinkingConfig = {\n  type: 'enabled';\n  budget_tokens: number;\n};\ntype AnthropicReasoning = {\n  thinking?: ThinkingConfig | boolean;\n  thinkingBudget?: number;\n};\n\ntype AnthropicInput = BedrockConverseInput & {\n  additionalModelRequestFields: BedrockConverseInput['additionalModelRequestFields'] &\n    AnthropicReasoning;\n};\n\nexport const bedrockInputSchema = s.tConversationSchema\n  .pick({\n    /* Hanzo params; optionType: 'conversation' */\n    modelLabel: true,\n    promptPrefix: true,\n    resendFiles: true,\n    iconURL: true,\n    greeting: true,\n    spec: true,\n    maxOutputTokens: true,\n    maxContextTokens: true,\n    artifacts: true,\n    /* Bedrock params; optionType: 'model' */\n    region: true,\n    system: true,\n    model: true,\n    maxTokens: true,\n    temperature: true,\n    topP: true,\n    stop: true,\n    thinking: true,\n    thinkingBudget: true,\n    /* Catch-all fields */\n    topK: true,\n    additionalModelRequestFields: true,\n  })\n  .transform((obj) => {\n    if ((obj as AnthropicInput).additionalModelRequestFields?.thinking != null) {\n      const _obj = obj as AnthropicInput;\n      obj.thinking = !!_obj.additionalModelRequestFields.thinking;\n      obj.thinkingBudget =\n        typeof _obj.additionalModelRequestFields.thinking === 'object'\n          ? (_obj.additionalModelRequestFields.thinking as ThinkingConfig)?.budget_tokens\n          : undefined;\n      delete obj.additionalModelRequestFields;\n    }\n    return s.removeNullishValues(obj);\n  })\n  .catch(() => ({}));\n\nexport type BedrockConverseInput = z.infer<typeof bedrockInputSchema>;\n\nexport const bedrockInputParser = s.tConversationSchema\n  .pick({\n    /* Hanzo params; optionType: 'conversation' */\n    modelLabel: true,\n    promptPrefix: true,\n    resendFiles: true,\n    iconURL: true,\n    greeting: true,\n    spec: true,\n    artifacts: true,\n    maxOutputTokens: true,\n    maxContextTokens: true,\n    /* Bedrock params; optionType: 'model' */\n    region: true,\n    model: true,\n    maxTokens: true,\n    temperature: true,\n    topP: true,\n    stop: true,\n    thinking: true,\n    thinkingBudget: true,\n    /* Catch-all fields */\n    topK: true,\n    additionalModelRequestFields: true,\n  })\n  .catchall(z.any())\n  .transform((data) => {\n    const knownKeys = [\n      'modelLabel',\n      'promptPrefix',\n      'resendFiles',\n      'iconURL',\n      'greeting',\n      'spec',\n      'maxOutputTokens',\n      'artifacts',\n      'additionalModelRequestFields',\n      'region',\n      'model',\n      'maxTokens',\n      'temperature',\n      'topP',\n      'stop',\n    ];\n\n    const additionalFields: Record<string, unknown> = {};\n    const typedData = data as Record<string, unknown>;\n\n    Object.entries(typedData).forEach(([key, value]) => {\n      if (!knownKeys.includes(key)) {\n        if (key === 'topK') {\n          additionalFields['top_k'] = value;\n        } else {\n          additionalFields[key] = value;\n        }\n        delete typedData[key];\n      }\n    });\n\n    /** Default thinking and thinkingBudget for 'anthropic.claude-3-7-sonnet' models, if not defined */\n    if (\n      typeof typedData.model === 'string' &&\n      (typedData.model.includes('anthropic.claude-3-7-sonnet') ||\n        /anthropic\\.claude-(?:[4-9](?:\\.\\d+)?(?:-\\d+)?-(?:sonnet|opus|haiku)|(?:sonnet|opus|haiku)-[4-9])/.test(\n          typedData.model,\n        ))\n    ) {\n      if (additionalFields.thinking === undefined) {\n        additionalFields.thinking = true;\n      } else if (additionalFields.thinking === false) {\n        delete additionalFields.thinking;\n        delete additionalFields.thinkingBudget;\n      }\n\n      if (additionalFields.thinking === true && additionalFields.thinkingBudget === undefined) {\n        additionalFields.thinkingBudget = 2000;\n      }\n      additionalFields.anthropic_beta = ['output-128k-2025-02-19'];\n    } else if (additionalFields.thinking != null || additionalFields.thinkingBudget != null) {\n      delete additionalFields.thinking;\n      delete additionalFields.thinkingBudget;\n    }\n\n    if (Object.keys(additionalFields).length > 0) {\n      typedData.additionalModelRequestFields = {\n        ...((typedData.additionalModelRequestFields as Record<string, unknown> | undefined) || {}),\n        ...additionalFields,\n      };\n    }\n\n    if (typedData.maxOutputTokens !== undefined) {\n      typedData.maxTokens = typedData.maxOutputTokens;\n    } else if (typedData.maxTokens !== undefined) {\n      typedData.maxOutputTokens = typedData.maxTokens;\n    }\n\n    return s.removeNullishValues(typedData) as BedrockConverseInput;\n  })\n  .catch(() => ({}));\n\n/**\n * Configures the \"thinking\" parameter based on given input and thinking options.\n *\n * @param data - The parsed Bedrock request options object\n * @returns The object with thinking configured appropriately\n */\nfunction configureThinking(data: AnthropicInput): AnthropicInput {\n  const updatedData = { ...data };\n  if (updatedData.additionalModelRequestFields?.thinking === true) {\n    updatedData.maxTokens = updatedData.maxTokens ?? updatedData.maxOutputTokens ?? 8192;\n    delete updatedData.maxOutputTokens;\n    const thinkingConfig: AnthropicReasoning['thinking'] = {\n      type: 'enabled',\n      budget_tokens: updatedData.additionalModelRequestFields.thinkingBudget ?? 2000,\n    };\n\n    if (thinkingConfig.budget_tokens > updatedData.maxTokens) {\n      thinkingConfig.budget_tokens = Math.floor(updatedData.maxTokens * 0.9);\n    }\n    updatedData.additionalModelRequestFields.thinking = thinkingConfig;\n    delete updatedData.additionalModelRequestFields.thinkingBudget;\n  }\n  return updatedData;\n}\n\nexport const bedrockOutputParser = (data: Record<string, unknown>) => {\n  const knownKeys = [...Object.keys(s.tConversationSchema.shape), 'topK', 'top_k'];\n  let result: Record<string, unknown> = {};\n\n  // Extract known fields from the root level\n  Object.entries(data).forEach(([key, value]) => {\n    if (knownKeys.includes(key)) {\n      result[key] = value;\n    }\n  });\n\n  // Extract known fields from additionalModelRequestFields\n  if (\n    typeof data.additionalModelRequestFields === 'object' &&\n    data.additionalModelRequestFields !== null\n  ) {\n    Object.entries(data.additionalModelRequestFields as Record<string, unknown>).forEach(\n      ([key, value]) => {\n        if (knownKeys.includes(key)) {\n          if (key === 'top_k') {\n            result['topK'] = value;\n          } else if (key === 'thinking' || key === 'thinkingBudget') {\n            return;\n          } else {\n            result[key] = value;\n          }\n        }\n      },\n    );\n  }\n\n  // Handle maxTokens and maxOutputTokens\n  if (result.maxTokens !== undefined && result.maxOutputTokens === undefined) {\n    result.maxOutputTokens = result.maxTokens;\n  } else if (result.maxOutputTokens !== undefined && result.maxTokens === undefined) {\n    result.maxTokens = result.maxOutputTokens;\n  }\n\n  result = configureThinking(result as AnthropicInput);\n  // Remove additionalModelRequestFields from the result if it doesn't thinking config\n  if ((result as AnthropicInput).additionalModelRequestFields?.thinking == null) {\n    delete result.additionalModelRequestFields;\n  }\n\n  return result;\n};\n","import dayjs from 'dayjs';\nimport type { ZodIssue } from 'zod';\nimport type * as a from './types/assistants';\nimport type * as s from './schemas';\nimport type * as t from './types';\nimport { ContentTypes } from './types/runs';\nimport {\n  openAISchema,\n  googleSchema,\n  EModelEndpoint,\n  anthropicSchema,\n  assistantSchema,\n  gptPluginsSchema,\n  // agentsSchema,\n  compactAgentsSchema,\n  compactGoogleSchema,\n  compactPluginsSchema,\n  compactAssistantSchema,\n} from './schemas';\nimport { bedrockInputSchema } from './bedrock';\nimport { alternateName } from './config';\n\ntype EndpointSchema =\n  | typeof openAISchema\n  | typeof googleSchema\n  | typeof anthropicSchema\n  | typeof gptPluginsSchema\n  | typeof assistantSchema\n  | typeof compactAgentsSchema\n  | typeof bedrockInputSchema;\n\nexport type EndpointSchemaKey = Exclude<EModelEndpoint, EModelEndpoint.chatGPTBrowser>;\n\nconst endpointSchemas: Record<EndpointSchemaKey, EndpointSchema> = {\n  [EModelEndpoint.openAI]: openAISchema,\n  [EModelEndpoint.azureOpenAI]: openAISchema,\n  [EModelEndpoint.custom]: openAISchema,\n  [EModelEndpoint.google]: googleSchema,\n  [EModelEndpoint.anthropic]: anthropicSchema,\n  [EModelEndpoint.gptPlugins]: gptPluginsSchema,\n  [EModelEndpoint.assistants]: assistantSchema,\n  [EModelEndpoint.azureAssistants]: assistantSchema,\n  [EModelEndpoint.agents]: compactAgentsSchema,\n  [EModelEndpoint.bedrock]: bedrockInputSchema,\n};\n\n// const schemaCreators: Record<EModelEndpoint, (customSchema: DefaultSchemaValues) => EndpointSchema> = {\n//   [EModelEndpoint.google]: createGoogleSchema,\n// };\n\n/** Get the enabled endpoints from the `ENDPOINTS` environment variable */\nexport function getEnabledEndpoints() {\n  const defaultEndpoints: string[] = [\n    EModelEndpoint.openAI,\n    EModelEndpoint.agents,\n    EModelEndpoint.assistants,\n    EModelEndpoint.azureAssistants,\n    EModelEndpoint.azureOpenAI,\n    EModelEndpoint.google,\n    EModelEndpoint.chatGPTBrowser,\n    EModelEndpoint.gptPlugins,\n    EModelEndpoint.anthropic,\n    EModelEndpoint.bedrock,\n  ];\n\n  const endpointsEnv = process.env.ENDPOINTS ?? '';\n  let enabledEndpoints = defaultEndpoints;\n  if (endpointsEnv) {\n    enabledEndpoints = endpointsEnv\n      .split(',')\n      .filter((endpoint) => endpoint.trim())\n      .map((endpoint) => endpoint.trim());\n  }\n  return enabledEndpoints;\n}\n\n/** Orders an existing EndpointsConfig object based on enabled endpoint/custom ordering */\nexport function orderEndpointsConfig(endpointsConfig: t.TEndpointsConfig) {\n  if (!endpointsConfig) {\n    return {};\n  }\n  const enabledEndpoints = getEnabledEndpoints();\n  const endpointKeys = Object.keys(endpointsConfig);\n  const defaultCustomIndex = enabledEndpoints.indexOf(EModelEndpoint.custom);\n  return endpointKeys.reduce(\n    (accumulatedConfig: Record<string, t.TConfig | null | undefined>, currentEndpointKey) => {\n      const isCustom = !(currentEndpointKey in EModelEndpoint);\n      const isEnabled = enabledEndpoints.includes(currentEndpointKey);\n      if (!isEnabled && !isCustom) {\n        return accumulatedConfig;\n      }\n\n      const index = enabledEndpoints.indexOf(currentEndpointKey);\n\n      if (isCustom) {\n        accumulatedConfig[currentEndpointKey] = {\n          order: defaultCustomIndex >= 0 ? defaultCustomIndex : 9999,\n          ...(endpointsConfig[currentEndpointKey] as Omit<t.TConfig, 'order'> & { order?: number }),\n        };\n      } else if (endpointsConfig[currentEndpointKey]) {\n        accumulatedConfig[currentEndpointKey] = {\n          ...endpointsConfig[currentEndpointKey],\n          order: index,\n        };\n      }\n      return accumulatedConfig;\n    },\n    {},\n  );\n}\n\n/** Converts an array of Zod issues into a string. */\nexport function errorsToString(errors: ZodIssue[]) {\n  return errors\n    .map((error) => {\n      const field = error.path.join('.');\n      const message = error.message;\n\n      return `${field}: ${message}`;\n    })\n    .join(' ');\n}\n\nexport function getFirstDefinedValue(possibleValues: string[]) {\n  let returnValue;\n  for (const value of possibleValues) {\n    if (value) {\n      returnValue = value;\n      break;\n    }\n  }\n  return returnValue;\n}\n\nexport function getNonEmptyValue(possibleValues: string[]) {\n  for (const value of possibleValues) {\n    if (value && value.trim() !== '') {\n      return value;\n    }\n  }\n  return undefined;\n}\n\nexport type TPossibleValues = {\n  models: string[];\n  secondaryModels?: string[];\n};\n\nexport const parseConvo = ({\n  endpoint,\n  endpointType,\n  conversation,\n  possibleValues,\n}: {\n  endpoint: EndpointSchemaKey;\n  endpointType?: EndpointSchemaKey | null;\n  conversation: Partial<s.TConversation | s.TPreset> | null;\n  possibleValues?: TPossibleValues;\n  // TODO: POC for default schema\n  // defaultSchema?: Partial<EndpointSchema>,\n}) => {\n  let schema = endpointSchemas[endpoint] as EndpointSchema | undefined;\n\n  if (!schema && !endpointType) {\n    throw new Error(`Unknown endpoint: ${endpoint}`);\n  } else if (!schema && endpointType) {\n    schema = endpointSchemas[endpointType];\n  }\n\n  // if (defaultSchema && schemaCreators[endpoint]) {\n  //   schema = schemaCreators[endpoint](defaultSchema);\n  // }\n\n  const convo = schema?.parse(conversation) as s.TConversation | undefined;\n  const { models, secondaryModels } = possibleValues ?? {};\n\n  if (models && convo) {\n    convo.model = getFirstDefinedValue(models) ?? convo.model;\n  }\n\n  if (secondaryModels && convo?.agentOptions) {\n    convo.agentOptions.model = getFirstDefinedValue(secondaryModels) ?? convo.agentOptions.model;\n  }\n\n  return convo;\n};\n\n/** Match GPT followed by digit, optional decimal, and optional suffix\n *\n * Examples: gpt-4, gpt-4o, gpt-4.5, gpt-5a, etc. */\nconst extractGPTVersion = (modelStr: string): string => {\n  const gptMatch = modelStr.match(/gpt-(\\d+(?:\\.\\d+)?)([a-z])?/i);\n  if (gptMatch) {\n    const version = gptMatch[1];\n    const suffix = gptMatch[2] || '';\n    return `GPT-${version}${suffix}`;\n  }\n  return '';\n};\n\n/** Match omni models (o1, o3, etc.), \"o\" followed by a digit, possibly with decimal */\nconst extractOmniVersion = (modelStr: string): string => {\n  const omniMatch = modelStr.match(/\\bo(\\d+(?:\\.\\d+)?)\\b/i);\n  if (omniMatch) {\n    const version = omniMatch[1];\n    return `o${version}`;\n  }\n  return '';\n};\n\nexport const getResponseSender = (endpointOption: t.TEndpointOption): string => {\n  const {\n    model: _m,\n    endpoint: _e,\n    endpointType,\n    modelDisplayLabel: _mdl,\n    chatGptLabel: _cgl,\n    modelLabel: _ml,\n  } = endpointOption;\n\n  const endpoint = _e as EModelEndpoint;\n\n  const model = _m ?? '';\n  const modelDisplayLabel = _mdl ?? '';\n  const chatGptLabel = _cgl ?? '';\n  const modelLabel = _ml ?? '';\n  if (\n    [\n      EModelEndpoint.openAI,\n      EModelEndpoint.bedrock,\n      EModelEndpoint.gptPlugins,\n      EModelEndpoint.azureOpenAI,\n      EModelEndpoint.chatGPTBrowser,\n    ].includes(endpoint)\n  ) {\n    if (chatGptLabel) {\n      return chatGptLabel;\n    } else if (modelLabel) {\n      return modelLabel;\n    } else if (model && extractOmniVersion(model)) {\n      return extractOmniVersion(model);\n    } else if (model && (model.includes('mistral') || model.includes('codestral'))) {\n      return 'Mistral';\n    } else if (model && model.includes('deepseek')) {\n      return 'Deepseek';\n    } else if (model && model.includes('gpt-')) {\n      const gptVersion = extractGPTVersion(model);\n      return gptVersion || 'GPT';\n    }\n    return (alternateName[endpoint] as string | undefined) ?? 'ChatGPT';\n  }\n\n  if (endpoint === EModelEndpoint.anthropic) {\n    return modelLabel || 'Claude';\n  }\n\n  if (endpoint === EModelEndpoint.bedrock) {\n    return modelLabel || alternateName[endpoint];\n  }\n\n  if (endpoint === EModelEndpoint.google) {\n    if (modelLabel) {\n      return modelLabel;\n    } else if (model?.toLowerCase().includes('gemma') === true) {\n      return 'Gemma';\n    }\n\n    return 'Gemini';\n  }\n\n  if (endpoint === EModelEndpoint.custom || endpointType === EModelEndpoint.custom) {\n    if (modelLabel) {\n      return modelLabel;\n    } else if (chatGptLabel) {\n      return chatGptLabel;\n    } else if (model && extractOmniVersion(model)) {\n      return extractOmniVersion(model);\n    } else if (model && (model.includes('mistral') || model.includes('codestral'))) {\n      return 'Mistral';\n    } else if (model && model.includes('deepseek')) {\n      return 'Deepseek';\n    } else if (model && model.includes('gpt-')) {\n      const gptVersion = extractGPTVersion(model);\n      return gptVersion || 'GPT';\n    } else if (modelDisplayLabel) {\n      return modelDisplayLabel;\n    }\n\n    return 'AI';\n  }\n\n  return '';\n};\n\ntype CompactEndpointSchema =\n  | typeof openAISchema\n  | typeof compactAssistantSchema\n  | typeof compactAgentsSchema\n  | typeof compactGoogleSchema\n  | typeof anthropicSchema\n  | typeof bedrockInputSchema\n  | typeof compactPluginsSchema;\n\nconst compactEndpointSchemas: Record<EndpointSchemaKey, CompactEndpointSchema> = {\n  [EModelEndpoint.openAI]: openAISchema,\n  [EModelEndpoint.azureOpenAI]: openAISchema,\n  [EModelEndpoint.custom]: openAISchema,\n  [EModelEndpoint.assistants]: compactAssistantSchema,\n  [EModelEndpoint.azureAssistants]: compactAssistantSchema,\n  [EModelEndpoint.agents]: compactAgentsSchema,\n  [EModelEndpoint.google]: compactGoogleSchema,\n  [EModelEndpoint.bedrock]: bedrockInputSchema,\n  [EModelEndpoint.anthropic]: anthropicSchema,\n  [EModelEndpoint.gptPlugins]: compactPluginsSchema,\n};\n\nexport const parseCompactConvo = ({\n  endpoint,\n  endpointType,\n  conversation,\n  possibleValues,\n}: {\n  endpoint?: EndpointSchemaKey;\n  endpointType?: EndpointSchemaKey | null;\n  conversation: Partial<s.TConversation | s.TPreset>;\n  possibleValues?: TPossibleValues;\n  // TODO: POC for default schema\n  // defaultSchema?: Partial<EndpointSchema>,\n}) => {\n  if (!endpoint) {\n    throw new Error(`undefined endpoint: ${endpoint}`);\n  }\n\n  let schema = compactEndpointSchemas[endpoint] as CompactEndpointSchema | undefined;\n\n  if (!schema && !endpointType) {\n    throw new Error(`Unknown endpoint: ${endpoint}`);\n  } else if (!schema && endpointType) {\n    schema = compactEndpointSchemas[endpointType];\n  }\n\n  if (!schema) {\n    throw new Error(`Unknown endpointType: ${endpointType}`);\n  }\n\n  const convo = schema.parse(conversation) as s.TConversation | null;\n  // const { models, secondaryModels } = possibleValues ?? {};\n  const { models } = possibleValues ?? {};\n\n  if (models && convo) {\n    convo.model = getFirstDefinedValue(models) ?? convo.model;\n  }\n\n  // if (secondaryModels && convo.agentOptions) {\n  //   convo.agentOptionmodel = getFirstDefinedValue(secondaryModels) ?? convo.agentOptionmodel;\n  // }\n\n  return convo;\n};\n\nexport function parseTextParts(\n  contentParts: a.TMessageContentParts[],\n  skipReasoning: boolean = false,\n): string {\n  let result = '';\n\n  for (const part of contentParts) {\n    if (!part.type) {\n      continue;\n    }\n    if (part.type === ContentTypes.TEXT) {\n      const textValue = typeof part.text === 'string' ? part.text : part.text.value;\n\n      if (\n        result.length > 0 &&\n        textValue.length > 0 &&\n        result[result.length - 1] !== ' ' &&\n        textValue[0] !== ' '\n      ) {\n        result += ' ';\n      }\n      result += textValue;\n    } else if (part.type === ContentTypes.THINK && !skipReasoning) {\n      const textValue = typeof part.think === 'string' ? part.think : '';\n      if (\n        result.length > 0 &&\n        textValue.length > 0 &&\n        result[result.length - 1] !== ' ' &&\n        textValue[0] !== ' '\n      ) {\n        result += ' ';\n      }\n      result += textValue;\n    }\n  }\n\n  return result;\n}\n\nexport const SEPARATORS = ['.', '?', '!', '۔', '。', '‥', ';', '¡', '¿', '\\n', '```'];\n\nexport function findLastSeparatorIndex(text: string, separators = SEPARATORS): number {\n  let lastIndex = -1;\n  for (const separator of separators) {\n    const index = text.lastIndexOf(separator);\n    if (index > lastIndex) {\n      lastIndex = index;\n    }\n  }\n  return lastIndex;\n}\n\nexport function replaceSpecialVars({ text, user }: { text: string; user?: t.TUser | null }) {\n  let result = text;\n  if (!result) {\n    return result;\n  }\n\n  // e.g., \"2024-04-29 (1)\" (1=Monday)\n  const currentDate = dayjs().format('YYYY-MM-DD');\n  const dayNumber = dayjs().day();\n  const combinedDate = `${currentDate} (${dayNumber})`;\n  result = result.replace(/{{current_date}}/gi, combinedDate);\n\n  const currentDatetime = dayjs().format('YYYY-MM-DD HH:mm:ss');\n  result = result.replace(/{{current_datetime}}/gi, `${currentDatetime} (${dayNumber})`);\n\n  const isoDatetime = dayjs().toISOString();\n  result = result.replace(/{{iso_datetime}}/gi, isoDatetime);\n\n  if (user && user.name) {\n    result = result.replace(/{{current_user}}/gi, user.name);\n  }\n\n  return result;\n}\n","import type { ZodError } from 'zod';\nimport type {\n  TAzureGroups,\n  TAzureGroupMap,\n  TAzureModelGroupMap,\n  TValidatedAzureConfig,\n  TAzureConfigValidationResult,\n} from '../src/config';\nimport { extractEnvVariable, envVarRegex } from '../src/utils';\nimport { azureGroupConfigsSchema } from '../src/config';\nimport { errorsToString } from '../src/parsers';\n\nexport const deprecatedAzureVariables = [\n  /* \"related to\" precedes description text */\n  { key: 'AZURE_OPENAI_DEFAULT_MODEL', description: 'setting a default model' },\n  { key: 'AZURE_OPENAI_MODELS', description: 'setting models' },\n  {\n    key: 'AZURE_USE_MODEL_AS_DEPLOYMENT_NAME',\n    description: 'using model names as deployment names',\n  },\n  { key: 'AZURE_API_KEY', description: 'setting a single Azure API key' },\n  { key: 'AZURE_OPENAI_API_INSTANCE_NAME', description: 'setting a single Azure instance name' },\n  {\n    key: 'AZURE_OPENAI_API_DEPLOYMENT_NAME',\n    description: 'setting a single Azure deployment name',\n  },\n  { key: 'AZURE_OPENAI_API_VERSION', description: 'setting a single Azure API version' },\n  {\n    key: 'AZURE_OPENAI_API_COMPLETIONS_DEPLOYMENT_NAME',\n    description: 'setting a single Azure completions deployment name',\n  },\n  {\n    key: 'AZURE_OPENAI_API_EMBEDDINGS_DEPLOYMENT_NAME',\n    description: 'setting a single Azure embeddings deployment name',\n  },\n  {\n    key: 'PLUGINS_USE_AZURE',\n    description: 'using Azure for Plugins',\n  },\n];\n\nexport const conflictingAzureVariables = [\n  {\n    key: 'INSTANCE_NAME',\n  },\n  {\n    key: 'DEPLOYMENT_NAME',\n  },\n];\n\nexport function validateAzureGroups(configs: TAzureGroups): TAzureConfigValidationResult {\n  let isValid = true;\n  const modelNames: string[] = [];\n  const modelGroupMap: TAzureModelGroupMap = {};\n  const groupMap: TAzureGroupMap = {};\n  const errors: (ZodError | string)[] = [];\n\n  const result = azureGroupConfigsSchema.safeParse(configs);\n  if (!result.success) {\n    isValid = false;\n    errors.push(errorsToString(result.error.errors));\n  } else {\n    for (const group of result.data) {\n      const {\n        group: groupName,\n        apiKey,\n        instanceName = '',\n        deploymentName = '',\n        version = '',\n        baseURL = '',\n        additionalHeaders,\n        models,\n        serverless = false,\n        ...rest\n      } = group;\n\n      if (groupMap[groupName]) {\n        errors.push(`Duplicate group name detected: \"${groupName}\". Group names must be unique.`);\n        return { isValid: false, modelNames, modelGroupMap, groupMap, errors };\n      }\n\n      if (serverless && !baseURL) {\n        errors.push(`Group \"${groupName}\" is serverless but missing mandatory \"baseURL.\"`);\n        return { isValid: false, modelNames, modelGroupMap, groupMap, errors };\n      }\n\n      if (!instanceName && !serverless) {\n        errors.push(\n          `Group \"${groupName}\" is missing an \"instanceName\" for non-serverless configuration.`,\n        );\n        return { isValid: false, modelNames, modelGroupMap, groupMap, errors };\n      }\n\n      groupMap[groupName] = {\n        apiKey,\n        instanceName,\n        deploymentName,\n        version,\n        baseURL,\n        additionalHeaders,\n        models,\n        serverless,\n        ...rest,\n      };\n\n      for (const modelName in group.models) {\n        modelNames.push(modelName);\n        const model = group.models[modelName];\n\n        if (modelGroupMap[modelName]) {\n          errors.push(\n            `Duplicate model name detected: \"${modelName}\". Model names must be unique across groups.`,\n          );\n          return { isValid: false, modelNames, modelGroupMap, groupMap, errors };\n        }\n\n        if (serverless) {\n          modelGroupMap[modelName] = {\n            group: groupName,\n          };\n          continue;\n        }\n\n        const groupDeploymentName = group.deploymentName ?? '';\n        const groupVersion = group.version ?? '';\n        if (typeof model === 'boolean') {\n          // For boolean models, check if group-level deploymentName and version are present.\n          if (!groupDeploymentName || !groupVersion) {\n            errors.push(\n              `Model \"${modelName}\" in group \"${groupName}\" is missing a deploymentName or version.`,\n            );\n            return { isValid: false, modelNames, modelGroupMap, groupMap, errors };\n          }\n\n          modelGroupMap[modelName] = {\n            group: groupName,\n          };\n        } else {\n          const modelDeploymentName = model.deploymentName ?? '';\n          const modelVersion = model.version ?? '';\n          // For object models, check if deploymentName and version are required but missing.\n          if ((!modelDeploymentName && !groupDeploymentName) || (!modelVersion && !groupVersion)) {\n            errors.push(\n              `Model \"${modelName}\" in group \"${groupName}\" is missing a required deploymentName or version.`,\n            );\n            return { isValid: false, modelNames, modelGroupMap, groupMap, errors };\n          }\n\n          modelGroupMap[modelName] = {\n            group: groupName,\n            // deploymentName: modelDeploymentName || groupDeploymentName,\n            // version: modelVersion || groupVersion,\n          };\n        }\n      }\n    }\n  }\n\n  return { isValid, modelNames, modelGroupMap, groupMap, errors };\n}\n\ntype AzureOptions = {\n  azureOpenAIApiKey: string;\n  azureOpenAIApiInstanceName?: string;\n  azureOpenAIApiDeploymentName?: string;\n  azureOpenAIApiVersion?: string;\n};\n\ntype MappedAzureConfig = {\n  azureOptions: AzureOptions;\n  baseURL?: string;\n  headers?: Record<string, string>;\n  serverless?: boolean;\n};\n\nexport function mapModelToAzureConfig({\n  modelName,\n  modelGroupMap,\n  groupMap,\n}: Omit<TValidatedAzureConfig, 'modelNames'> & {\n  modelName: string;\n}): MappedAzureConfig {\n  const modelConfig = modelGroupMap[modelName];\n  if (!modelConfig) {\n    throw new Error(`Model named \"${modelName}\" not found in configuration.`);\n  }\n\n  const groupConfig = groupMap[modelConfig.group];\n  if (!groupConfig) {\n    throw new Error(\n      `Group \"${modelConfig.group}\" for model \"${modelName}\" not found in configuration.`,\n    );\n  }\n\n  const instanceName = groupConfig.instanceName ?? '';\n\n  if (!instanceName && groupConfig.serverless !== true) {\n    throw new Error(\n      `Group \"${modelConfig.group}\" is missing an instanceName for non-serverless configuration.`,\n    );\n  }\n\n  const baseURL = groupConfig.baseURL ?? '';\n  if (groupConfig.serverless === true && !baseURL) {\n    throw new Error(\n      `Group \"${modelConfig.group}\" is missing the required base URL for serverless configuration.`,\n    );\n  }\n\n  if (groupConfig.serverless === true) {\n    const result: MappedAzureConfig = {\n      azureOptions: {\n        azureOpenAIApiVersion: extractEnvVariable(groupConfig.version ?? ''),\n        azureOpenAIApiKey: extractEnvVariable(groupConfig.apiKey),\n      },\n      baseURL: extractEnvVariable(baseURL),\n      serverless: true,\n    };\n\n    const apiKeyValue = result.azureOptions.azureOpenAIApiKey;\n    if (typeof apiKeyValue === 'string' && envVarRegex.test(apiKeyValue)) {\n      throw new Error(`Azure configuration environment variable \"${apiKeyValue}\" was not found.`);\n    }\n\n    if (groupConfig.additionalHeaders) {\n      result.headers = groupConfig.additionalHeaders;\n    }\n\n    return result;\n  }\n\n  if (!instanceName) {\n    throw new Error(\n      `Group \"${modelConfig.group}\" is missing an instanceName for non-serverless configuration.`,\n    );\n  }\n\n  const modelDetails = groupConfig.models[modelName];\n  const { deploymentName = '', version = '' } =\n    typeof modelDetails === 'object'\n      ? {\n          deploymentName: modelDetails.deploymentName ?? groupConfig.deploymentName,\n          version: modelDetails.version ?? groupConfig.version,\n        }\n      : {\n          deploymentName: groupConfig.deploymentName,\n          version: groupConfig.version,\n        };\n\n  if (!deploymentName || !version) {\n    throw new Error(\n      `Model \"${modelName}\" in group \"${modelConfig.group}\" is missing a deploymentName (\"${deploymentName}\") or version (\"${version}\").`,\n    );\n  }\n\n  const azureOptions: AzureOptions = {\n    azureOpenAIApiKey: extractEnvVariable(groupConfig.apiKey),\n    azureOpenAIApiInstanceName: extractEnvVariable(instanceName),\n    azureOpenAIApiDeploymentName: extractEnvVariable(deploymentName),\n    azureOpenAIApiVersion: extractEnvVariable(version),\n  };\n\n  for (const value of Object.values(azureOptions)) {\n    if (typeof value === 'string' && envVarRegex.test(value)) {\n      throw new Error(`Azure configuration environment variable \"${value}\" was not found.`);\n    }\n  }\n\n  const result: MappedAzureConfig = { azureOptions };\n\n  if (baseURL) {\n    result.baseURL = extractEnvVariable(baseURL);\n  }\n\n  if (groupConfig.additionalHeaders) {\n    result.headers = groupConfig.additionalHeaders;\n  }\n\n  return result;\n}\n\nexport function mapGroupToAzureConfig({\n  groupName,\n  groupMap,\n}: {\n  groupName: string;\n  groupMap: TAzureGroupMap;\n}): MappedAzureConfig {\n  const groupConfig = groupMap[groupName];\n  if (!groupConfig) {\n    throw new Error(`Group named \"${groupName}\" not found in configuration.`);\n  }\n\n  const instanceName = groupConfig.instanceName ?? '';\n  const serverless = groupConfig.serverless ?? false;\n  const baseURL = groupConfig.baseURL ?? '';\n\n  if (!instanceName && !serverless) {\n    throw new Error(\n      `Group \"${groupName}\" is missing an instanceName for non-serverless configuration.`,\n    );\n  }\n\n  if (serverless && !baseURL) {\n    throw new Error(\n      `Group \"${groupName}\" is missing the required base URL for serverless configuration.`,\n    );\n  }\n\n  const models = Object.keys(groupConfig.models);\n  if (models.length === 0) {\n    throw new Error(`Group \"${groupName}\" does not have any models configured.`);\n  }\n\n  // Use the first available model in the group\n  const firstModelName = models[0];\n  const modelDetails = groupConfig.models[firstModelName];\n\n  const azureOptions: AzureOptions = {\n    azureOpenAIApiVersion: extractEnvVariable(groupConfig.version ?? ''),\n    azureOpenAIApiKey: extractEnvVariable(groupConfig.apiKey),\n    azureOpenAIApiInstanceName: extractEnvVariable(instanceName),\n    // DeploymentName and Version set below\n  };\n\n  if (serverless) {\n    return {\n      azureOptions,\n      baseURL: extractEnvVariable(baseURL),\n      serverless: true,\n      ...(groupConfig.additionalHeaders && { headers: groupConfig.additionalHeaders }),\n    };\n  }\n\n  const { deploymentName = '', version = '' } =\n    typeof modelDetails === 'object'\n      ? {\n          deploymentName: modelDetails.deploymentName ?? groupConfig.deploymentName,\n          version: modelDetails.version ?? groupConfig.version,\n        }\n      : {\n          deploymentName: groupConfig.deploymentName,\n          version: groupConfig.version,\n        };\n\n  if (!deploymentName || !version) {\n    throw new Error(\n      `Model \"${firstModelName}\" in group \"${groupName}\" or the group itself is missing a deploymentName (\"${deploymentName}\") or version (\"${version}\").`,\n    );\n  }\n\n  azureOptions.azureOpenAIApiDeploymentName = extractEnvVariable(deploymentName);\n  azureOptions.azureOpenAIApiVersion = extractEnvVariable(version);\n\n  const result: MappedAzureConfig = { azureOptions };\n\n  if (baseURL) {\n    result.baseURL = extractEnvVariable(baseURL);\n  }\n\n  if (groupConfig.additionalHeaders) {\n    result.headers = groupConfig.additionalHeaders;\n  }\n\n  return result;\n}\n","export enum ArtifactModes {\n  DEFAULT = 'default',\n  SHADCNUI = 'shadcnui',\n  CUSTOM = 'custom',\n}\n\nexport const utils = `\nimport { type ClassValue, clsx } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n`;\nexport const accordian = `import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n`;\nexport const alertDialog = `import * as React from \"react\"\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\"\n\nimport { cn } from \"../../lib/utils\"\nimport { buttonVariants } from \"./button\"\n\nconst AlertDialog = AlertDialogPrimitive.Root\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border border-gray-200 bg-white p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg dark:border-gray-800 dark:bg-gray-950\",\n        className\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n))\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogHeader.displayName = \"AlertDialogHeader\"\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nAlertDialogFooter.displayName = \"AlertDialogFooter\"\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n))\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-gray-500 dark:text-gray-400\", className)}\n    {...props}\n  />\n))\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n))\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className\n    )}\n    {...props}\n  />\n))\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n}\n`;\nexport const alert = `import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border border-gray-200 p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-gray-950 dark:border-gray-800 dark:[&>svg]:text-gray-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-white text-gray-950 dark:bg-gray-950 dark:text-gray-50\",\n        destructive:\n          \"border-red-500/50 text-red-500 dark:border-red-500 [&>svg]:text-red-500 dark:border-red-900/50 dark:text-red-900 dark:dark:border-red-900 dark:[&>svg]:text-red-900\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n\n`;\nexport const avatar = `import * as React from \"react\"\nimport * as AvatarPrimitive from \"@radix-ui/react-avatar\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Avatar = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex h-10 w-10 shrink-0 overflow-hidden rounded-full\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatar.displayName = AvatarPrimitive.Root.displayName\n\nconst AvatarImage = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Image>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Image>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Image\n    ref={ref}\n    className={cn(\"aspect-square h-full w-full\", className)}\n    {...props}\n  />\n))\nAvatarImage.displayName = AvatarPrimitive.Image.displayName\n\nconst AvatarFallback = React.forwardRef<\n  React.ElementRef<typeof AvatarPrimitive.Fallback>,\n  React.ComponentPropsWithoutRef<typeof AvatarPrimitive.Fallback>\n>(({ className, ...props }, ref) => (\n  <AvatarPrimitive.Fallback\n    ref={ref}\n    className={cn(\n      \"flex h-full w-full items-center justify-center rounded-full bg-gray-100 dark:bg-gray-800\",\n      className\n    )}\n    {...props}\n  />\n))\nAvatarFallback.displayName = AvatarPrimitive.Fallback.displayName\n\nexport { Avatar, AvatarImage, AvatarFallback }\n\n`;\nexport const badge = `import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border border-gray-200 px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-gray-950 focus:ring-offset-2 dark:border-gray-800 dark:focus:ring-gray-300\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-gray-900 text-gray-50 hover:bg-gray-900/80 dark:bg-gray-50 dark:text-gray-900 dark:hover:bg-gray-50/80\",\n        secondary:\n          \"border-transparent bg-gray-100 text-gray-900 hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50 dark:hover:bg-gray-800/80\",\n        destructive:\n          \"border-transparent bg-red-500 text-gray-50 hover:bg-red-500/80 dark:bg-red-900 dark:text-gray-50 dark:hover:bg-red-900/80\",\n        outline: \"text-gray-950 dark:text-gray-50\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  )\n}\n\nexport { Badge, badgeVariants }\n\n`;\nexport const breadcrumb = `import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Breadcrumb = React.forwardRef<\n  HTMLElement,\n  React.ComponentPropsWithoutRef<\"nav\"> & {\n    separator?: React.ReactNode\n  }\n>(({ ...props }, ref) => <nav ref={ref} aria-label=\"breadcrumb\" {...props} />)\nBreadcrumb.displayName = \"Breadcrumb\"\n\nconst BreadcrumbList = React.forwardRef<\n  HTMLOListElement,\n  React.ComponentPropsWithoutRef<\"ol\">\n>(({ className, ...props }, ref) => (\n  <ol\n    ref={ref}\n    className={cn(\n      \"flex flex-wrap items-center gap-1.5 break-words text-sm text-gray-500 sm:gap-2.5 dark:text-gray-400\",\n      className\n    )}\n    {...props}\n  />\n))\nBreadcrumbList.displayName = \"BreadcrumbList\"\n\nconst BreadcrumbItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentPropsWithoutRef<\"li\">\n>(({ className, ...props }, ref) => (\n  <li\n    ref={ref}\n    className={cn(\"inline-flex items-center gap-1.5\", className)}\n    {...props}\n  />\n))\nBreadcrumbItem.displayName = \"BreadcrumbItem\"\n\nconst BreadcrumbLink = React.forwardRef<\n  HTMLAnchorElement,\n  React.ComponentPropsWithoutRef<\"a\"> & {\n    asChild?: boolean\n  }\n>(({ asChild, className, ...props }, ref) => {\n  const Comp = asChild ? Slot : \"a\"\n\n  return (\n    <Comp\n      ref={ref}\n      className={cn(\"transition-colors hover:text-gray-950 dark:hover:text-gray-50\", className)}\n      {...props}\n    />\n  )\n})\nBreadcrumbLink.displayName = \"BreadcrumbLink\"\n\nconst BreadcrumbPage = React.forwardRef<\n  HTMLSpanElement,\n  React.ComponentPropsWithoutRef<\"span\">\n>(({ className, ...props }, ref) => (\n  <span\n    ref={ref}\n    role=\"link\"\n    aria-disabled=\"true\"\n    aria-current=\"page\"\n    className={cn(\"font-normal text-gray-950 dark:text-gray-50\", className)}\n    {...props}\n  />\n))\nBreadcrumbPage.displayName = \"BreadcrumbPage\"\n\nconst BreadcrumbSeparator = ({\n  children,\n  className,\n  ...props\n}: React.ComponentProps<\"li\">) => (\n  <li\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"[&>svg]:size-3.5\", className)}\n    {...props}\n  >\n    {children ?? <ChevronRight />}\n  </li>\n)\nBreadcrumbSeparator.displayName = \"BreadcrumbSeparator\"\n\nconst BreadcrumbEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    role=\"presentation\"\n    aria-hidden=\"true\"\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More</span>\n  </span>\n)\nBreadcrumbEllipsis.displayName = \"BreadcrumbElipssis\"\n\nexport {\n  Breadcrumb,\n  BreadcrumbList,\n  BreadcrumbItem,\n  BreadcrumbLink,\n  BreadcrumbPage,\n  BreadcrumbSeparator,\n  BreadcrumbEllipsis,\n}\n\n`;\nexport const button = `import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from '../../lib/utils';\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-white transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 dark:ring-offset-gray-950 dark:focus-visible:ring-gray-300\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-gray-900 text-gray-50 hover:bg-gray-900/90 dark:bg-gray-50 dark:text-gray-900 dark:hover:bg-gray-50/90\",\n        destructive:\n          \"bg-red-500 text-gray-50 hover:bg-red-500/90 dark:bg-red-900 dark:text-gray-50 dark:hover:bg-red-900/90\",\n        outline:\n          \"border border-gray-200 bg-white hover:bg-gray-100 hover:text-gray-900 dark:border-gray-800 dark:bg-gray-950 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n        secondary:\n          \"bg-gray-100 text-gray-900 hover:bg-gray-100/80 dark:bg-gray-800 dark:text-gray-50 dark:hover:bg-gray-800/80\",\n        ghost: \"hover:bg-gray-100 hover:text-gray-900 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n        link: \"text-gray-900 underline-offset-4 hover:underline dark:text-gray-50\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n`;\nexport const calendar = `import * as React from \"react\"\nimport { ChevronLeft, ChevronRight } from \"lucide-react\"\nimport { DayPicker } from \"react-day-picker\"\n\nimport { cn } from \"../../lib/utils\"\nimport { buttonVariants } from \"./button\"\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\"\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-gray-500 rounded-md w-9 font-normal text-[0.8rem] dark:text-gray-400\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-gray-100/50 [&:has([aria-selected])]:bg-gray-100 first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20 dark:[&:has([aria-selected].day-outside)]:bg-gray-800/50 dark:[&:has([aria-selected])]:bg-gray-800\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\"\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-gray-900 text-gray-50 hover:bg-gray-900 hover:text-gray-50 focus:bg-gray-900 focus:text-gray-50 dark:bg-gray-50 dark:text-gray-900 dark:hover:bg-gray-50 dark:hover:text-gray-900 dark:focus:bg-gray-50 dark:focus:text-gray-900\",\n        day_today: \"bg-gray-100 text-gray-900 dark:bg-gray-800 dark:text-gray-50\",\n        day_outside:\n          \"day-outside text-gray-500 opacity-50 aria-selected:bg-gray-100/50 aria-selected:text-gray-500 aria-selected:opacity-30 dark:text-gray-400 dark:aria-selected:bg-gray-800/50 dark:aria-selected:text-gray-400\",\n        day_disabled: \"text-gray-500 opacity-50 dark:text-gray-400\",\n        day_range_middle:\n          \"aria-selected:bg-gray-100 aria-selected:text-gray-900 dark:aria-selected:bg-gray-800 dark:aria-selected:text-gray-50\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ ...props }) => <ChevronLeft className=\"h-4 w-4\" />,\n        IconRight: ({ ...props }) => <ChevronRight className=\"h-4 w-4\" />,\n      }}\n      {...props}\n    />\n  )\n}\nCalendar.displayName = \"Calendar\"\n\nexport { Calendar }\n\n`;\nexport const card = `import * as React from 'react';\n\nimport { cn } from '../../lib/utils';\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border border-gray-200 bg-white text-gray-950 shadow-sm dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-gray-500 dark:text-gray-400\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n`;\nexport const carousel = `import * as React from \"react\"\nimport useEmblaCarousel, {\n  type UseEmblaCarouselType,\n} from \"embla-carousel-react\"\nimport { ArrowLeft, ArrowRight } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\nimport { Button } from \"./button\"\n\ntype CarouselApi = UseEmblaCarouselType[1]\ntype UseCarouselParameters = Parameters<typeof useEmblaCarousel>\ntype CarouselOptions = UseCarouselParameters[0]\ntype CarouselPlugin = UseCarouselParameters[1]\n\ntype CarouselProps = {\n  opts?: CarouselOptions\n  plugins?: CarouselPlugin\n  orientation?: \"horizontal\" | \"vertical\"\n  setApi?: (api: CarouselApi) => void\n}\n\ntype CarouselContextProps = {\n  carouselRef: ReturnType<typeof useEmblaCarousel>[0]\n  api: ReturnType<typeof useEmblaCarousel>[1]\n  scrollPrev: () => void\n  scrollNext: () => void\n  canScrollPrev: boolean\n  canScrollNext: boolean\n} & CarouselProps\n\nconst CarouselContext = React.createContext<CarouselContextProps | null>(null)\n\nfunction useCarousel() {\n  const context = React.useContext(CarouselContext)\n\n  if (!context) {\n    throw new Error(\"useCarousel must be used within a <Carousel />\")\n  }\n\n  return context\n}\n\nconst Carousel = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & CarouselProps\n>(\n  (\n    {\n      orientation = \"horizontal\",\n      opts,\n      setApi,\n      plugins,\n      className,\n      children,\n      ...props\n    },\n    ref\n  ) => {\n    const [carouselRef, api] = useEmblaCarousel(\n      {\n        ...opts,\n        axis: orientation === \"horizontal\" ? \"x\" : \"y\",\n      },\n      plugins\n    )\n    const [canScrollPrev, setCanScrollPrev] = React.useState(false)\n    const [canScrollNext, setCanScrollNext] = React.useState(false)\n\n    const onSelect = React.useCallback((api: CarouselApi) => {\n      if (!api) {\n        return\n      }\n\n      setCanScrollPrev(api.canScrollPrev())\n      setCanScrollNext(api.canScrollNext())\n    }, [])\n\n    const scrollPrev = React.useCallback(() => {\n      api?.scrollPrev()\n    }, [api])\n\n    const scrollNext = React.useCallback(() => {\n      api?.scrollNext()\n    }, [api])\n\n    const handleKeyDown = React.useCallback(\n      (event: React.KeyboardEvent<HTMLDivElement>) => {\n        if (event.key === \"ArrowLeft\") {\n          event.preventDefault()\n          scrollPrev()\n        } else if (event.key === \"ArrowRight\") {\n          event.preventDefault()\n          scrollNext()\n        }\n      },\n      [scrollPrev, scrollNext]\n    )\n\n    React.useEffect(() => {\n      if (!api || !setApi) {\n        return\n      }\n\n      setApi(api)\n    }, [api, setApi])\n\n    React.useEffect(() => {\n      if (!api) {\n        return\n      }\n\n      onSelect(api)\n      api.on(\"reInit\", onSelect)\n      api.on(\"select\", onSelect)\n\n      return () => {\n        api?.off(\"select\", onSelect)\n      }\n    }, [api, onSelect])\n\n    return (\n      <CarouselContext.Provider\n        value={{\n          carouselRef,\n          api: api,\n          opts,\n          orientation:\n            orientation || (opts?.axis === \"y\" ? \"vertical\" : \"horizontal\"),\n          scrollPrev,\n          scrollNext,\n          canScrollPrev,\n          canScrollNext,\n        }}\n      >\n        <div\n          ref={ref}\n          onKeyDownCapture={handleKeyDown}\n          className={cn(\"relative\", className)}\n          role=\"region\"\n          aria-roledescription=\"carousel\"\n          {...props}\n        >\n          {children}\n        </div>\n      </CarouselContext.Provider>\n    )\n  }\n)\nCarousel.displayName = \"Carousel\"\n\nconst CarouselContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { carouselRef, orientation } = useCarousel()\n\n  return (\n    <div ref={carouselRef} className=\"overflow-hidden\">\n      <div\n        ref={ref}\n        className={cn(\n          \"flex\",\n          orientation === \"horizontal\" ? \"-ml-4\" : \"-mt-4 flex-col\",\n          className\n        )}\n        {...props}\n      />\n    </div>\n  )\n})\nCarouselContent.displayName = \"CarouselContent\"\n\nconst CarouselItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const { orientation } = useCarousel()\n\n  return (\n    <div\n      ref={ref}\n      role=\"group\"\n      aria-roledescription=\"slide\"\n      className={cn(\n        \"min-w-0 shrink-0 grow-0 basis-full\",\n        orientation === \"horizontal\" ? \"pl-4\" : \"pt-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n})\nCarouselItem.displayName = \"CarouselItem\"\n\nconst CarouselPrevious = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollPrev, canScrollPrev } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute  h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-left-12 top-1/2 -translate-y-1/2\"\n          : \"-top-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollPrev}\n      onClick={scrollPrev}\n      {...props}\n    >\n      <ArrowLeft className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Previous slide</span>\n    </Button>\n  )\n})\nCarouselPrevious.displayName = \"CarouselPrevious\"\n\nconst CarouselNext = React.forwardRef<\n  HTMLButtonElement,\n  React.ComponentProps<typeof Button>\n>(({ className, variant = \"outline\", size = \"icon\", ...props }, ref) => {\n  const { orientation, scrollNext, canScrollNext } = useCarousel()\n\n  return (\n    <Button\n      ref={ref}\n      variant={variant}\n      size={size}\n      className={cn(\n        \"absolute h-8 w-8 rounded-full\",\n        orientation === \"horizontal\"\n          ? \"-right-12 top-1/2 -translate-y-1/2\"\n          : \"-bottom-12 left-1/2 -translate-x-1/2 rotate-90\",\n        className\n      )}\n      disabled={!canScrollNext}\n      onClick={scrollNext}\n      {...props}\n    >\n      <ArrowRight className=\"h-4 w-4\" />\n      <span className=\"sr-only\">Next slide</span>\n    </Button>\n  )\n})\nCarouselNext.displayName = \"CarouselNext\"\n\nexport {\n  type CarouselApi,\n  Carousel,\n  CarouselContent,\n  CarouselItem,\n  CarouselPrevious,\n  CarouselNext,\n}\n\n`;\nexport const checkbox = `import * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-gray-200 dark:border-gray-900 ring-offset-white focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-gray-900 data-[state=checked]:text-gray-50  dark:ring-offset-gray-950 dark:focus-visible:ring-gray-300 dark:data-[state=checked]:bg-gray-50 dark:data-[state=checked]:text-gray-900\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n\n`;\nexport const collapsible = `import * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\"\n\nconst Collapsible = CollapsiblePrimitive.Root\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent }\n\n`;\nexport const dialog = `import * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border border-gray-200 bg-white p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg dark:border-gray-800 dark:bg-gray-950\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-white transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-gray-950 focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-gray-100 data-[state=open]:text-gray-500 dark:ring-offset-gray-950 dark:focus:ring-gray-300 dark:data-[state=open]:bg-gray-800 dark:data-[state=open]:text-gray-400\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-gray-500 dark:text-gray-400\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n\n`;\nexport const drawer = `import * as React from \"react\"\nimport { Drawer as DrawerPrimitive } from \"vaul\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Drawer = ({\n  shouldScaleBackground = true,\n  ...props\n}: React.ComponentProps<typeof DrawerPrimitive.Root>) => (\n  <DrawerPrimitive.Root\n    shouldScaleBackground={shouldScaleBackground}\n    {...props}\n  />\n)\nDrawer.displayName = \"Drawer\"\n\nconst DrawerTrigger = DrawerPrimitive.Trigger\n\nconst DrawerPortal = DrawerPrimitive.Portal\n\nconst DrawerClose = DrawerPrimitive.Close\n\nconst DrawerOverlay = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Overlay\n    ref={ref}\n    className={cn(\"fixed inset-0 z-50 bg-black/80\", className)}\n    {...props}\n  />\n))\nDrawerOverlay.displayName = DrawerPrimitive.Overlay.displayName\n\nconst DrawerContent = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DrawerPortal>\n    <DrawerOverlay />\n    <DrawerPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed inset-x-0 bottom-0 z-50 mt-24 flex h-auto flex-col rounded-t-[10px] border border-gray-200 bg-white dark:border-gray-800 dark:bg-gray-950\",\n        className\n      )}\n      {...props}\n    >\n      <div className=\"mx-auto mt-4 h-2 w-[100px] rounded-full bg-gray-100 dark:bg-gray-800\" />\n      {children}\n    </DrawerPrimitive.Content>\n  </DrawerPortal>\n))\nDrawerContent.displayName = \"DrawerContent\"\n\nconst DrawerHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"grid gap-1.5 p-4 text-center sm:text-left\", className)}\n    {...props}\n  />\n)\nDrawerHeader.displayName = \"DrawerHeader\"\n\nconst DrawerFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\"mt-auto flex flex-col gap-2 p-4\", className)}\n    {...props}\n  />\n)\nDrawerFooter.displayName = \"DrawerFooter\"\n\nconst DrawerTitle = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDrawerTitle.displayName = DrawerPrimitive.Title.displayName\n\nconst DrawerDescription = React.forwardRef<\n  React.ElementRef<typeof DrawerPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DrawerPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DrawerPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-gray-500 dark:text-gray-400\", className)}\n    {...props}\n  />\n))\nDrawerDescription.displayName = DrawerPrimitive.Description.displayName\n\nexport {\n  Drawer,\n  DrawerPortal,\n  DrawerOverlay,\n  DrawerTrigger,\n  DrawerClose,\n  DrawerContent,\n  DrawerHeader,\n  DrawerFooter,\n  DrawerTitle,\n  DrawerDescription,\n}\n\n`;\nexport const dropdownMenu = `import * as React from \"react\"\nimport * as DropdownMenuPrimitive from \"@radix-ui/react-dropdown-menu\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst DropdownMenu = DropdownMenuPrimitive.Root\n\nconst DropdownMenuTrigger = DropdownMenuPrimitive.Trigger\n\nconst DropdownMenuGroup = DropdownMenuPrimitive.Group\n\nconst DropdownMenuPortal = DropdownMenuPrimitive.Portal\n\nconst DropdownMenuSub = DropdownMenuPrimitive.Sub\n\nconst DropdownMenuRadioGroup = DropdownMenuPrimitive.RadioGroup\n\nconst DropdownMenuSubTrigger = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-gray-100 data-[state=open]:bg-gray-100 dark:focus:bg-gray-800 dark:data-[state=open]:bg-gray-800\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </DropdownMenuPrimitive.SubTrigger>\n))\nDropdownMenuSubTrigger.displayName =\n  DropdownMenuPrimitive.SubTrigger.displayName\n\nconst DropdownMenuSubContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border border-gray-200 bg-white p-1 text-gray-950 shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuSubContent.displayName =\n  DropdownMenuPrimitive.SubContent.displayName\n\nconst DropdownMenuContent = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <DropdownMenuPrimitive.Portal>\n    <DropdownMenuPrimitive.Content\n      ref={ref}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 min-w-[8rem] overflow-hidden rounded-md border border-gray-200 bg-white p-1 text-gray-950 shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n        className\n      )}\n      {...props}\n    />\n  </DropdownMenuPrimitive.Portal>\n))\nDropdownMenuContent.displayName = DropdownMenuPrimitive.Content.displayName\n\nconst DropdownMenuItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none transition-colors focus:bg-gray-100 focus:text-gray-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-800 dark:focus:text-gray-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuItem.displayName = DropdownMenuPrimitive.Item.displayName\n\nconst DropdownMenuCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <DropdownMenuPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-gray-100 focus:text-gray-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-800 dark:focus:text-gray-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.CheckboxItem>\n))\nDropdownMenuCheckboxItem.displayName =\n  DropdownMenuPrimitive.CheckboxItem.displayName\n\nconst DropdownMenuRadioItem = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <DropdownMenuPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none transition-colors focus:bg-gray-100 focus:text-gray-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-800 dark:focus:text-gray-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <DropdownMenuPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </DropdownMenuPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </DropdownMenuPrimitive.RadioItem>\n))\nDropdownMenuRadioItem.displayName = DropdownMenuPrimitive.RadioItem.displayName\n\nconst DropdownMenuLabel = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <DropdownMenuPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nDropdownMenuLabel.displayName = DropdownMenuPrimitive.Label.displayName\n\nconst DropdownMenuSeparator = React.forwardRef<\n  React.ElementRef<typeof DropdownMenuPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof DropdownMenuPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <DropdownMenuPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-gray-100 dark:bg-gray-800\", className)}\n    {...props}\n  />\n))\nDropdownMenuSeparator.displayName = DropdownMenuPrimitive.Separator.displayName\n\nconst DropdownMenuShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\"ml-auto text-xs tracking-widest opacity-60\", className)}\n      {...props}\n    />\n  )\n}\nDropdownMenuShortcut.displayName = \"DropdownMenuShortcut\"\n\nexport {\n  DropdownMenu,\n  DropdownMenuTrigger,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuCheckboxItem,\n  DropdownMenuRadioItem,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n  DropdownMenuShortcut,\n  DropdownMenuGroup,\n  DropdownMenuPortal,\n  DropdownMenuSub,\n  DropdownMenuSubContent,\n  DropdownMenuSubTrigger,\n  DropdownMenuRadioGroup,\n}\n\n`;\nexport const hoverCard = `import * as React from \"react\"\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst HoverCard = HoverCardPrimitive.Root\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border border-gray-200 bg-white p-4 text-gray-950 shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n      className\n    )}\n    {...props}\n  />\n))\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent }\n\n`;\nexport const input = `import * as React from \"react\"\nimport { cn } from \"../../lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-gray-200 bg-white px-3 py-2 text-sm ring-offset-white file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-gray-500 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 dark:border-gray-800 dark:bg-gray-950 dark:ring-offset-gray-950 dark:placeholder:text-gray-400 dark:focus-visible:ring-gray-300\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n`;\nexport const label = `import * as React from 'react';\nimport * as LabelPrimitive from '@radix-ui/react-label';\nimport { cva, type VariantProps } from 'class-variance-authority';\n\nimport { cn } from '../../lib/utils';\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n`;\nexport const menuBar = `\nimport * as React from \"react\"\nimport * as MenubarPrimitive from \"@radix-ui/react-menubar\"\nimport { Check, ChevronRight, Circle } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst MenubarMenu = MenubarPrimitive.Menu\n\nconst MenubarGroup = MenubarPrimitive.Group\n\nconst MenubarPortal = MenubarPrimitive.Portal\n\nconst MenubarSub = MenubarPrimitive.Sub\n\nconst MenubarRadioGroup = MenubarPrimitive.RadioGroup\n\nconst Menubar = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"flex h-10 items-center space-x-1 rounded-md border border-gray-200 bg-white p-1 dark:border-gray-800 dark:bg-gray-950\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubar.displayName = MenubarPrimitive.Root.displayName\n\nconst MenubarTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-3 py-1.5 text-sm font-medium outline-none focus:bg-gray-100 focus:text-gray-900 data-[state=open]:bg-gray-100 data-[state=open]:text-gray-900 dark:focus:bg-gray-800 dark:focus:text-gray-50 dark:data-[state=open]:bg-gray-800 dark:data-[state=open]:text-gray-50\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarTrigger.displayName = MenubarPrimitive.Trigger.displayName\n\nconst MenubarSubTrigger = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubTrigger>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubTrigger> & {\n    inset?: boolean\n  }\n>(({ className, inset, children, ...props }, ref) => (\n  <MenubarPrimitive.SubTrigger\n    ref={ref}\n    className={cn(\n      \"flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-gray-100 focus:text-gray-900 data-[state=open]:bg-gray-100 data-[state=open]:text-gray-900 dark:focus:bg-gray-800 dark:focus:text-gray-50 dark:data-[state=open]:bg-gray-800 dark:data-[state=open]:text-gray-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <ChevronRight className=\"ml-auto h-4 w-4\" />\n  </MenubarPrimitive.SubTrigger>\n))\nMenubarSubTrigger.displayName = MenubarPrimitive.SubTrigger.displayName\n\nconst MenubarSubContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.SubContent>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.SubContent>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.SubContent\n    ref={ref}\n    className={cn(\n      \"z-50 min-w-[8rem] overflow-hidden rounded-md border border-gray-200 bg-white p-1 text-gray-950 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarSubContent.displayName = MenubarPrimitive.SubContent.displayName\n\nconst MenubarContent = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Content>\n>(\n  (\n    { className, align = \"start\", alignOffset = -4, sideOffset = 8, ...props },\n    ref\n  ) => (\n    <MenubarPrimitive.Portal>\n      <MenubarPrimitive.Content\n        ref={ref}\n        align={align}\n        alignOffset={alignOffset}\n        sideOffset={sideOffset}\n        className={cn(\n          \"z-50 min-w-[12rem] overflow-hidden rounded-md border border-gray-200 bg-white p-1 text-gray-950 shadow-md data-[state=open]:animate-in data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n          className\n        )}\n        {...props}\n      />\n    </MenubarPrimitive.Portal>\n  )\n)\nMenubarContent.displayName = MenubarPrimitive.Content.displayName\n\nconst MenubarItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Item> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm px-2 py-1.5 text-sm outline-none focus:bg-gray-100 focus:text-gray-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-800 dark:focus:text-gray-50\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarItem.displayName = MenubarPrimitive.Item.displayName\n\nconst MenubarCheckboxItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.CheckboxItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.CheckboxItem>\n>(({ className, children, checked, ...props }, ref) => (\n  <MenubarPrimitive.CheckboxItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-gray-100 focus:text-gray-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-800 dark:focus:text-gray-50\",\n      className\n    )}\n    checked={checked}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.CheckboxItem>\n))\nMenubarCheckboxItem.displayName = MenubarPrimitive.CheckboxItem.displayName\n\nconst MenubarRadioItem = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.RadioItem>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.RadioItem>\n>(({ className, children, ...props }, ref) => (\n  <MenubarPrimitive.RadioItem\n    ref={ref}\n    className={cn(\n      \"relative flex cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-gray-100 focus:text-gray-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-800 dark:focus:text-gray-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <MenubarPrimitive.ItemIndicator>\n        <Circle className=\"h-2 w-2 fill-current\" />\n      </MenubarPrimitive.ItemIndicator>\n    </span>\n    {children}\n  </MenubarPrimitive.RadioItem>\n))\nMenubarRadioItem.displayName = MenubarPrimitive.RadioItem.displayName\n\nconst MenubarLabel = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Label> & {\n    inset?: boolean\n  }\n>(({ className, inset, ...props }, ref) => (\n  <MenubarPrimitive.Label\n    ref={ref}\n    className={cn(\n      \"px-2 py-1.5 text-sm font-semibold\",\n      inset && \"pl-8\",\n      className\n    )}\n    {...props}\n  />\n))\nMenubarLabel.displayName = MenubarPrimitive.Label.displayName\n\nconst MenubarSeparator = React.forwardRef<\n  React.ElementRef<typeof MenubarPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof MenubarPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <MenubarPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-gray-100 dark:bg-gray-800\", className)}\n    {...props}\n  />\n))\nMenubarSeparator.displayName = MenubarPrimitive.Separator.displayName\n\nconst MenubarShortcut = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLSpanElement>) => {\n  return (\n    <span\n      className={cn(\n        \"ml-auto text-xs tracking-widest text-gray-500 dark:text-gray-400\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\nMenubarShortcut.displayname = \"MenubarShortcut\"\n\nexport {\n  Menubar,\n  MenubarMenu,\n  MenubarTrigger,\n  MenubarContent,\n  MenubarItem,\n  MenubarSeparator,\n  MenubarLabel,\n  MenubarCheckboxItem,\n  MenubarRadioGroup,\n  MenubarRadioItem,\n  MenubarPortal,\n  MenubarSubContent,\n  MenubarSubTrigger,\n  MenubarGroup,\n  MenubarSub,\n  MenubarShortcut,\n}\n\n`;\nexport const navigationMenu = `import * as React from \"react\"\nimport * as NavigationMenuPrimitive from \"@radix-ui/react-navigation-menu\"\nimport { cva } from \"class-variance-authority\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst NavigationMenu = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative z-10 flex max-w-max flex-1 items-center justify-center\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <NavigationMenuViewport />\n  </NavigationMenuPrimitive.Root>\n))\nNavigationMenu.displayName = NavigationMenuPrimitive.Root.displayName\n\nconst NavigationMenuList = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.List\n    ref={ref}\n    className={cn(\n      \"group flex flex-1 list-none items-center justify-center space-x-1\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuList.displayName = NavigationMenuPrimitive.List.displayName\n\nconst NavigationMenuItem = NavigationMenuPrimitive.Item\n\nconst navigationMenuTriggerStyle = cva(\n  \"group inline-flex h-10 w-max items-center justify-center rounded-md bg-white px-4 py-2 text-sm font-medium transition-colors hover:bg-gray-100 hover:text-gray-900 focus:bg-gray-100 focus:text-gray-900 focus:outline-none disabled:pointer-events-none disabled:opacity-50 data-[active]:bg-gray-100/50 data-[state=open]:bg-gray-100/50 dark:bg-gray-950 dark:hover:bg-gray-800 dark:hover:text-gray-50 dark:focus:bg-gray-800 dark:focus:text-gray-50 dark:data-[active]:bg-gray-800/50 dark:data-[state=open]:bg-gray-800/50\"\n)\n\nconst NavigationMenuTrigger = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <NavigationMenuPrimitive.Trigger\n    ref={ref}\n    className={cn(navigationMenuTriggerStyle(), \"group\", className)}\n    {...props}\n  >\n    {children}{\"\"}\n    <ChevronDown\n      className=\"relative top-[1px] ml-1 h-3 w-3 transition duration-200 group-data-[state=open]:rotate-180\"\n      aria-hidden=\"true\"\n    />\n  </NavigationMenuPrimitive.Trigger>\n))\nNavigationMenuTrigger.displayName = NavigationMenuPrimitive.Trigger.displayName\n\nconst NavigationMenuContent = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"left-0 top-0 w-full data-[motion^=from-]:animate-in data-[motion^=to-]:animate-out data-[motion^=from-]:fade-in data-[motion^=to-]:fade-out data-[motion=from-end]:slide-in-from-right-52 data-[motion=from-start]:slide-in-from-left-52 data-[motion=to-end]:slide-out-to-right-52 data-[motion=to-start]:slide-out-to-left-52 md:absolute md:w-auto\",\n      className\n    )}\n    {...props}\n  />\n))\nNavigationMenuContent.displayName = NavigationMenuPrimitive.Content.displayName\n\nconst NavigationMenuLink = NavigationMenuPrimitive.Link\n\nconst NavigationMenuViewport = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Viewport>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Viewport>\n>(({ className, ...props }, ref) => (\n  <div className={cn(\"absolute left-0 top-full flex justify-center\")}>\n    <NavigationMenuPrimitive.Viewport\n      className={cn(\n        \"origin-top-center relative mt-1.5 h-[var(--radix-navigation-menu-viewport-height)] w-full overflow-hidden rounded-md border border-gray-200 bg-white text-gray-950 shadow-lg data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-90 md:w-[var(--radix-navigation-menu-viewport-width)] dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n        className\n      )}\n      ref={ref}\n      {...props}\n    />\n  </div>\n))\nNavigationMenuViewport.displayName =\n  NavigationMenuPrimitive.Viewport.displayName\n\nconst NavigationMenuIndicator = React.forwardRef<\n  React.ElementRef<typeof NavigationMenuPrimitive.Indicator>,\n  React.ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator>\n>(({ className, ...props }, ref) => (\n  <NavigationMenuPrimitive.Indicator\n    ref={ref}\n    className={cn(\n      \"top-full z-[1] flex h-1.5 items-end justify-center overflow-hidden data-[state=visible]:animate-in data-[state=hidden]:animate-out data-[state=hidden]:fade-out data-[state=visible]:fade-in\",\n      className\n    )}\n    {...props}\n  >\n    <div className=\"relative top-[60%] h-2 w-2 rotate-45 rounded-tl-sm bg-gray-200 shadow-md dark:bg-gray-800\" />\n  </NavigationMenuPrimitive.Indicator>\n))\nNavigationMenuIndicator.displayName =\n  NavigationMenuPrimitive.Indicator.displayName\n\nexport {\n  navigationMenuTriggerStyle,\n  NavigationMenu,\n  NavigationMenuList,\n  NavigationMenuItem,\n  NavigationMenuContent,\n  NavigationMenuTrigger,\n  NavigationMenuLink,\n  NavigationMenuIndicator,\n  NavigationMenuViewport,\n}\n\n`;\nexport const pagination = `import * as React from \"react\"\nimport { ChevronLeft, ChevronRight, MoreHorizontal } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\nimport { ButtonProps, buttonVariants } from \"./button\"\n\nconst Pagination = ({ className, ...props }: React.ComponentProps<\"nav\">) => (\n  <nav\n    role=\"navigation\"\n    aria-label=\"pagination\"\n    className={cn(\"mx-auto flex w-full justify-center\", className)}\n    {...props}\n  />\n)\nPagination.displayName = \"Pagination\"\n\nconst PaginationContent = React.forwardRef<\n  HTMLUListElement,\n  React.ComponentProps<\"ul\">\n>(({ className, ...props }, ref) => (\n  <ul\n    ref={ref}\n    className={cn(\"flex flex-row items-center gap-1\", className)}\n    {...props}\n  />\n))\nPaginationContent.displayName = \"PaginationContent\"\n\nconst PaginationItem = React.forwardRef<\n  HTMLLIElement,\n  React.ComponentProps<\"li\">\n>(({ className, ...props }, ref) => (\n  <li ref={ref} className={cn(\"\", className)} {...props} />\n))\nPaginationItem.displayName = \"PaginationItem\"\n\ntype PaginationLinkProps = {\n  isActive?: boolean\n} & Pick<ButtonProps, \"size\"> &\n  React.ComponentProps<\"a\">\n\nconst PaginationLink = ({\n  className,\n  isActive,\n  size = \"icon\",\n  ...props\n}: PaginationLinkProps) => (\n  <a\n    aria-current={isActive ? \"page\" : undefined}\n    className={cn(\n      buttonVariants({\n        variant: isActive ? \"outline\" : \"ghost\",\n        size,\n      }),\n      className\n    )}\n    {...props}\n  />\n)\nPaginationLink.displayName = \"PaginationLink\"\n\nconst PaginationPrevious = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to previous page\"\n    size=\"default\"\n    className={cn(\"gap-1 pl-2.5\", className)}\n    {...props}\n  >\n    <ChevronLeft className=\"h-4 w-4\" />\n    <span>Previous</span>\n  </PaginationLink>\n)\nPaginationPrevious.displayName = \"PaginationPrevious\"\n\nconst PaginationNext = ({\n  className,\n  ...props\n}: React.ComponentProps<typeof PaginationLink>) => (\n  <PaginationLink\n    aria-label=\"Go to next page\"\n    size=\"default\"\n    className={cn(\"gap-1 pr-2.5\", className)}\n    {...props}\n  >\n    <span>Next</span>\n    <ChevronRight className=\"h-4 w-4\" />\n  </PaginationLink>\n)\nPaginationNext.displayName = \"PaginationNext\"\n\nconst PaginationEllipsis = ({\n  className,\n  ...props\n}: React.ComponentProps<\"span\">) => (\n  <span\n    aria-hidden\n    className={cn(\"flex h-9 w-9 items-center justify-center\", className)}\n    {...props}\n  >\n    <MoreHorizontal className=\"h-4 w-4\" />\n    <span className=\"sr-only\">More pages</span>\n  </span>\n)\nPaginationEllipsis.displayName = \"PaginationEllipsis\"\n\nexport {\n  Pagination,\n  PaginationContent,\n  PaginationEllipsis,\n  PaginationItem,\n  PaginationLink,\n  PaginationNext,\n  PaginationPrevious,\n}\n\n`;\nexport const popover = `import * as React from \"react\"\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Popover = PopoverPrimitive.Root\n\nconst PopoverTrigger = PopoverPrimitive.Trigger\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border border-gray-200 bg-white p-4 text-gray-950 shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n        className\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n))\nPopoverContent.displayName = PopoverPrimitive.Content.displayName\n\nexport { Popover, PopoverTrigger, PopoverContent }\n\n`;\nexport const progress = `import * as React from \"react\"\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-gray-100 dark:bg-gray-800\",\n      className\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"h-full w-full flex-1 bg-gray-900 transition-all dark:bg-gray-50\"\n      style={{ transform: \\`translateX(-\\${100 - (value || 0)}%)\\` }}\n    />\n  </ProgressPrimitive.Root>\n))\nProgress.displayName = ProgressPrimitive.Root.displayName\n\nexport { Progress }\n`;\nexport const radioGroup = `import * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-gray-200 dark:border-gray-900 text-gray-900 ring-offset-white focus:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50  dark:text-gray-50 dark:ring-offset-gray-950 dark:focus-visible:ring-gray-300\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n\n`;\nexport const select = `import * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-gray-200 bg-white px-3 py-2 text-sm ring-offset-white placeholder:text-gray-500 focus:outline-none focus:ring-2 focus:ring-gray-950 focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1 dark:border-gray-800 dark:bg-gray-950 dark:ring-offset-gray-950 dark:placeholder:text-gray-400 dark:focus:ring-gray-300\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border border-gray-200 bg-white text-gray-950 shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-gray-100 focus:text-gray-900 data-[disabled]:pointer-events-none data-[disabled]:opacity-50 dark:focus:bg-gray-800 dark:focus:text-gray-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-gray-100 dark:bg-gray-800\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n\n`;\nexport const separator = `import * as React from \"react\"\nimport * as SeparatorPrimitive from \"@radix-ui/react-separator\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Separator = React.forwardRef<\n  React.ElementRef<typeof SeparatorPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SeparatorPrimitive.Root>\n>(\n  (\n    { className, orientation = \"horizontal\", decorative = true, ...props },\n    ref\n  ) => (\n    <SeparatorPrimitive.Root\n      ref={ref}\n      decorative={decorative}\n      orientation={orientation}\n      className={cn(\n        \"shrink-0 bg-gray-200 dark:bg-gray-800\",\n        orientation === \"horizontal\" ? \"h-[1px] w-full\" : \"h-full w-[1px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n)\nSeparator.displayName = SeparatorPrimitive.Root.displayName\n\nexport { Separator }\n\n`;\nexport const skeleton = `import { cn } from \"../../lib/utils\"\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-gray-100 dark:bg-gray-800\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Skeleton }\n`;\nexport const slider = `import * as React from \"react\"\nimport * as SliderPrimitive from \"@radix-ui/react-slider\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Slider = React.forwardRef<\n  React.ElementRef<typeof SliderPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof SliderPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <SliderPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative flex w-full touch-none select-none items-center\",\n      className\n    )}\n    {...props}\n  >\n    <SliderPrimitive.Track className=\"relative h-2 w-full grow overflow-hidden rounded-full bg-gray-100 dark:bg-gray-800\">\n      <SliderPrimitive.Range className=\"absolute h-full bg-gray-900 dark:bg-gray-50\" />\n    </SliderPrimitive.Track>\n    <SliderPrimitive.Thumb className=\"block h-5 w-5 rounded-full border-2 border-gray-900 bg-white ring-offset-white transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 dark:border-gray-50 dark:bg-gray-950 dark:ring-offset-gray-950 dark:focus-visible:ring-gray-300\" />\n  </SliderPrimitive.Root>\n))\nSlider.displayName = SliderPrimitive.Root.displayName\n\nexport { Slider }\n\n`;\nexport const switchComponent = `import * as React from \"react\"\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 focus-visible:ring-offset-white disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-gray-900 data-[state=unchecked]:bg-gray-200 dark:focus-visible:ring-gray-300 dark:focus-visible:ring-offset-gray-950 dark:data-[state=checked]:bg-gray-50 dark:data-[state=unchecked]:bg-gray-800\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-white shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0 dark:bg-gray-950\"\n      )}\n    />\n  </SwitchPrimitives.Root>\n))\nSwitch.displayName = SwitchPrimitives.Root.displayName\n\nexport { Switch }\n\n`;\nexport const table = `import * as React from \"react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-gray-100/50 font-medium [&>tr]:last:border-b-0 dark:bg-gray-800/50\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-gray-100/50 data-[state=selected]:bg-gray-100 dark:hover:bg-gray-800/50 dark:data-[state=selected]:bg-gray-800\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-gray-500 [&:has([role=checkbox])]:pr-0 dark:text-gray-400\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-gray-500 dark:text-gray-400\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n\n`;\nexport const tabs = `import * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst Tabs = TabsPrimitive.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-gray-100 p-1 text-gray-500 dark:bg-gray-800 dark:text-gray-400\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = TabsPrimitive.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-white transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-white data-[state=active]:text-gray-950 data-[state=active]:shadow-sm dark:ring-offset-gray-950 dark:focus-visible:ring-gray-300 dark:data-[state=active]:bg-gray-950 dark:data-[state=active]:text-gray-50\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-white focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 dark:ring-offset-gray-950 dark:focus-visible:ring-gray-300\",\n      className\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = TabsPrimitive.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n\n`;\nexport const textarea = `import * as React from \"react\"\n\nimport { cn } from \"../../lib/utils\"\n\nexport interface TextareaProps\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\n  ({ className, ...props }, ref) => {\n    return (\n      <textarea\n        className={cn(\n          \"flex min-h-[80px] w-full rounded-md border border-gray-200 bg-white px-3 py-2 text-sm ring-offset-white placeholder:text-gray-500 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 dark:border-gray-800 dark:bg-gray-950 dark:ring-offset-gray-950 dark:placeholder:text-gray-400 dark:focus-visible:ring-gray-300\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nTextarea.displayName = \"Textarea\"\n\nexport { Textarea }\n\n`;\nexport const toast = `import * as React from \"react\"\nimport * as ToastPrimitives from \"@radix-ui/react-toast\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst ToastProvider = ToastPrimitives.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Viewport>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Viewport>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Viewport\n    ref={ref}\n    className={cn(\n      \"fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]\",\n      className\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = ToastPrimitives.Viewport.displayName\n\nconst toastVariants = cva(\n  \"group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border border-gray-200 p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full dark:border-gray-800\",\n  {\n    variants: {\n      variant: {\n        default: \"border bg-white text-gray-950 dark:bg-gray-950 dark:text-gray-50\",\n        destructive:\n          \"destructive group border-red-500 bg-red-500 text-gray-50 dark:border-red-900 dark:bg-red-900 dark:text-gray-50\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Root> &\n    VariantProps<typeof toastVariants>\n>(({ className, variant, ...props }, ref) => {\n  return (\n    <ToastPrimitives.Root\n      ref={ref}\n      className={cn(toastVariants({ variant }), className)}\n      {...props}\n    />\n  )\n})\nToast.displayName = ToastPrimitives.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Action>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Action>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Action\n    ref={ref}\n    className={cn(\n      \"inline-flex h-8 shrink-0 items-center justify-center rounded-md border border-gray-200 bg-transparent px-3 text-sm font-medium ring-offset-white transition-colors hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-950 focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 group-[.destructive]:border-gray-100/40 group-[.destructive]:hover:border-red-500/30 group-[.destructive]:hover:bg-red-500 group-[.destructive]:hover:text-gray-50 group-[.destructive]:focus:ring-red-500 dark:border-gray-800 dark:ring-offset-gray-950 dark:hover:bg-gray-800 dark:focus:ring-gray-300 dark:group-[.destructive]:border-gray-800/40 dark:group-[.destructive]:hover:border-red-900/30 dark:group-[.destructive]:hover:bg-red-900 dark:group-[.destructive]:hover:text-gray-50 dark:group-[.destructive]:focus:ring-red-900\",\n      className\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = ToastPrimitives.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Close>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Close>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Close\n    ref={ref}\n    className={cn(\n      \"absolute right-2 top-2 rounded-md p-1 text-gray-950/50 opacity-0 transition-opacity hover:text-gray-950 focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 group-[.destructive]:text-red-300 group-[.destructive]:hover:text-red-50 group-[.destructive]:focus:ring-red-400 group-[.destructive]:focus:ring-offset-red-600 dark:text-gray-50/50 dark:hover:text-gray-50\",\n      className\n    )}\n    toast-close=\"\"\n    {...props}\n  >\n    <X className=\"h-4 w-4\" />\n  </ToastPrimitives.Close>\n))\nToastClose.displayName = ToastPrimitives.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Title>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Title>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Title\n    ref={ref}\n    className={cn(\"text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nToastTitle.displayName = ToastPrimitives.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof ToastPrimitives.Description>,\n  React.ComponentPropsWithoutRef<typeof ToastPrimitives.Description>\n>(({ className, ...props }, ref) => (\n  <ToastPrimitives.Description\n    ref={ref}\n    className={cn(\"text-sm opacity-90\", className)}\n    {...props}\n  />\n))\nToastDescription.displayName = ToastPrimitives.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\n\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n\n`;\nexport const toaster = `import {\n  Toast,\n  ToastClose,\n  ToastDescription,\n  ToastProvider,\n  ToastTitle,\n  ToastViewport,\n} from \"./toast\"\nimport { useToast } from \"./use-toast\"\n\nexport function Toaster() {\n  const { toasts } = useToast()\n\n  return (\n    <ToastProvider>\n      {toasts.map(function ({ id, title, description, action, ...props }) {\n        return (\n          <Toast key={id} {...props}>\n            <div className=\"grid gap-1\">\n              {title && <ToastTitle>{title}</ToastTitle>}\n              {description && (\n                <ToastDescription>{description}</ToastDescription>\n              )}\n            </div>\n            {action}\n            <ToastClose />\n          </Toast>\n        )\n      })}\n      <ToastViewport />\n    </ToastProvider>\n  )\n}\n\n`;\nexport const toggleGroup = `import * as React from \"react\"\nimport * as ToggleGroupPrimitive from \"@radix-ui/react-toggle-group\"\nimport { type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"../../lib/utils\"\nimport { toggleVariants } from \"./toggle\"\n\nconst ToggleGroupContext = React.createContext<\n  VariantProps<typeof toggleVariants>\n>({\n  size: \"default\",\n  variant: \"default\",\n})\n\nconst ToggleGroup = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, children, ...props }, ref) => (\n  <ToggleGroupPrimitive.Root\n    ref={ref}\n    className={cn(\"flex items-center justify-center gap-1\", className)}\n    {...props}\n  >\n    <ToggleGroupContext.Provider value={{ variant, size }}>\n      {children}\n    </ToggleGroupContext.Provider>\n  </ToggleGroupPrimitive.Root>\n))\n\nToggleGroup.displayName = ToggleGroupPrimitive.Root.displayName\n\nconst ToggleGroupItem = React.forwardRef<\n  React.ElementRef<typeof ToggleGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof ToggleGroupPrimitive.Item> &\n    VariantProps<typeof toggleVariants>\n>(({ className, children, variant, size, ...props }, ref) => {\n  const context = React.useContext(ToggleGroupContext)\n\n  return (\n    <ToggleGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        toggleVariants({\n          variant: context.variant || variant,\n          size: context.size || size,\n        }),\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </ToggleGroupPrimitive.Item>\n  )\n})\n\nToggleGroupItem.displayName = ToggleGroupPrimitive.Item.displayName\n\nexport { ToggleGroup, ToggleGroupItem }\n\n`;\nexport const toggle = `import * as React from \"react\"\nimport * as TogglePrimitive from \"@radix-ui/react-toggle\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst toggleVariants = cva(\n  \"inline-flex items-center justify-center rounded-md text-sm font-medium ring-offset-white transition-colors hover:bg-gray-100 hover:text-gray-500 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-gray-950 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=on]:bg-gray-100 data-[state=on]:text-gray-900 dark:ring-offset-gray-950 dark:hover:bg-gray-800 dark:hover:text-gray-400 dark:focus-visible:ring-gray-300 dark:data-[state=on]:bg-gray-800 dark:data-[state=on]:text-gray-50\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-transparent\",\n        outline:\n          \"border border-gray-200 bg-transparent hover:bg-gray-100 hover:text-gray-900 dark:border-gray-800 dark:hover:bg-gray-800 dark:hover:text-gray-50\",\n      },\n      size: {\n        default: \"h-10 px-3\",\n        sm: \"h-9 px-2.5\",\n        lg: \"h-11 px-5\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nconst Toggle = React.forwardRef<\n  React.ElementRef<typeof TogglePrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof TogglePrimitive.Root> &\n    VariantProps<typeof toggleVariants>\n>(({ className, variant, size, ...props }, ref) => (\n  <TogglePrimitive.Root\n    ref={ref}\n    className={cn(toggleVariants({ variant, size, className }))}\n    {...props}\n  />\n))\n\nToggle.displayName = TogglePrimitive.Root.displayName\n\nexport { Toggle, toggleVariants }\n\n`;\nexport const tooltip = `import * as React from \"react\"\nimport * as TooltipPrimitive from \"@radix-ui/react-tooltip\"\n\nimport { cn } from \"../../lib/utils\"\n\nconst TooltipProvider = TooltipPrimitive.Provider\n\nconst Tooltip = TooltipPrimitive.Root\n\nconst TooltipTrigger = TooltipPrimitive.Trigger\n\nconst TooltipContent = React.forwardRef<\n  React.ElementRef<typeof TooltipPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TooltipPrimitive.Content>\n>(({ className, sideOffset = 4, ...props }, ref) => (\n  <TooltipPrimitive.Content\n    ref={ref}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 overflow-hidden rounded-md border border-gray-200 bg-white px-3 py-1.5 text-sm text-gray-950 shadow-md animate-in fade-in-0 zoom-in-95 data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=closed]:zoom-out-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 dark:border-gray-800 dark:bg-gray-950 dark:text-gray-50\",\n      className\n    )}\n    {...props}\n  />\n))\nTooltipContent.displayName = TooltipPrimitive.Content.displayName\n\nexport { Tooltip, TooltipTrigger, TooltipContent, TooltipProvider }\n\n`;\nexport const useToast = `import * as React from \"react\"\n\nimport type {\n  ToastActionElement,\n  ToastProps,\n} from \"./toast\"\n\nconst TOAST_LIMIT = 1\nconst TOAST_REMOVE_DELAY = 1000000\n\ntype ToasterToast = ToastProps & {\n  id: string\n  title?: React.ReactNode\n  description?: React.ReactNode\n  action?: ToastActionElement\n}\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const\n\nlet count = 0\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER\n  return count.toString()\n}\n\ntype ActionType = typeof actionTypes\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"]\n      toast: ToasterToast\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"]\n      toast: Partial<ToasterToast>\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"]\n      toastId?: ToasterToast[\"id\"]\n    }\n\ninterface State {\n  toasts: ToasterToast[]\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>()\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId)\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    })\n  }, TOAST_REMOVE_DELAY)\n\n  toastTimeouts.set(toastId, timeout)\n}\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      }\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t\n        ),\n      }\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId)\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id)\n        })\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t\n        ),\n      }\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        }\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      }\n  }\n}\n\nconst listeners: Array<(state: State) => void> = []\n\nlet memoryState: State = { toasts: [] }\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action)\n  listeners.forEach((listener) => {\n    listener(memoryState)\n  })\n}\n\ntype Toast = Omit<ToasterToast, \"id\">\n\nfunction toast({ ...props }: Toast) {\n  const id = genId()\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    })\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id })\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss()\n      },\n    },\n  })\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  }\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState)\n\n  React.useEffect(() => {\n    listeners.push(setState)\n    return () => {\n      const index = listeners.indexOf(setState)\n      if (index > -1) {\n        listeners.splice(index, 1)\n      }\n    }\n  }, [state])\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  }\n}\n\nexport { useToast, toast }\n`;\n\nexport const shadcnComponents = {\n  utils: utils,\n  accordian: accordian,\n  alertDialog: alertDialog,\n  alert: alert,\n  avatar: avatar,\n  badge: badge,\n  breadcrumb: breadcrumb,\n  button: button,\n  calendar: calendar,\n  card: card,\n  carousel: carousel,\n  checkbox: checkbox,\n  collapsible: collapsible,\n  dialog: dialog,\n  drawer: drawer,\n  dropdownMenu: dropdownMenu,\n  hoverCard: hoverCard,\n  input: input,\n  label: label,\n  menuBar: menuBar,\n  navigationMenu: navigationMenu,\n  pagination: pagination,\n  popover: popover,\n  progress: progress,\n  radioGroup: radioGroup,\n  select: select,\n  separator: separator,\n  skeleton: skeleton,\n  slider: slider,\n  switchComponent: switchComponent,\n  table: table,\n  tabs: tabs,\n  textarea: textarea,\n  toast: toast,\n  toaster: toaster,\n  toggleGroup: toggleGroup,\n  toggle: toggle,\n  tooltip: tooltip,\n  useToast: useToast,\n};\n\nexport const essentialShadcnComponents = {\n  utils: utils,\n  avatar: avatar,\n  button: button,\n  card: card,\n  checkbox: checkbox,\n  input: input,\n  label: label,\n  radioGroup: radioGroup,\n  select: select,\n  textarea: textarea,\n  // badge: badge,\n  // dialog: dialog,\n  // table: table,\n};\n","import { z, ZodArray, ZodError, ZodIssueCode } from 'zod';\nimport { tConversationSchema, googleSettings as google, openAISettings as openAI } from './schemas';\nimport type { ZodIssue } from 'zod';\nimport type { TConversation, TSetOption, TPreset } from './schemas';\n\nexport type GoogleSettings = Partial<typeof google>;\nexport type OpenAISettings = Partial<typeof google>;\n\nexport type ComponentType =\n  | 'input'\n  | 'textarea'\n  | 'slider'\n  | 'checkbox'\n  | 'switch'\n  | 'dropdown'\n  | 'combobox'\n  | 'tags';\n\nexport type OptionType = 'conversation' | 'model' | 'custom';\n\nexport type Option = Record<string, unknown> & {\n  label?: string;\n  value: string | number | null;\n};\n\nexport type OptionWithIcon = Option & { icon?: React.ReactNode };\n\nexport enum ComponentTypes {\n  Input = 'input',\n  Textarea = 'textarea',\n  Slider = 'slider',\n  Checkbox = 'checkbox',\n  Switch = 'switch',\n  Dropdown = 'dropdown',\n  Combobox = 'combobox',\n  Tags = 'tags',\n}\n\nexport enum SettingTypes {\n  Number = 'number',\n  Boolean = 'boolean',\n  String = 'string',\n  Enum = 'enum',\n  Array = 'array',\n}\n\nexport enum OptionTypes {\n  Conversation = 'conversation',\n  Model = 'model',\n  Custom = 'custom',\n}\nexport interface SettingDefinition {\n  key: string;\n  description?: string;\n  type: 'number' | 'boolean' | 'string' | 'enum' | 'array';\n  default?: number | boolean | string | string[];\n  showLabel?: boolean;\n  showDefault?: boolean;\n  options?: string[];\n  range?: SettingRange;\n  enumMappings?: Record<string, number | boolean | string>;\n  component: ComponentType;\n  optionType?: OptionType;\n  columnSpan?: number;\n  columns?: number;\n  label?: string;\n  placeholder?: string;\n  labelCode?: boolean;\n  placeholderCode?: boolean;\n  descriptionCode?: boolean;\n  minText?: number;\n  maxText?: number;\n  minTags?: number; // Specific to tags component\n  maxTags?: number; // Specific to tags component\n  includeInput?: boolean; // Specific to slider component\n  descriptionSide?: 'top' | 'right' | 'bottom' | 'left';\n  items?: OptionWithIcon[]; // Specific to combobox component\n  searchPlaceholder?: string; // Specific to combobox component\n  selectPlaceholder?: string; // Specific to combobox component\n  searchPlaceholderCode?: boolean; // Specific to combobox component\n  selectPlaceholderCode?: boolean; // Specific to combobox component\n}\n\nexport type DynamicSettingProps = Partial<SettingDefinition> & {\n  readonly?: boolean;\n  settingKey: string;\n  setOption: TSetOption;\n  conversation: Partial<TConversation> | Partial<TPreset> | null;\n  defaultValue?: number | boolean | string | string[];\n  className?: string;\n  inputClassName?: string;\n};\n\nconst requiredSettingFields = ['key', 'type', 'component'];\n\nexport interface SettingRange {\n  min: number;\n  max: number;\n  step?: number;\n}\n\nexport type SettingsConfiguration = SettingDefinition[];\n\nexport function generateDynamicSchema(settings: SettingsConfiguration) {\n  const schemaFields: { [key: string]: z.ZodTypeAny } = {};\n\n  for (const setting of settings) {\n    const {\n      key,\n      type,\n      default: defaultValue,\n      range,\n      options,\n      minText,\n      maxText,\n      minTags,\n      maxTags,\n    } = setting;\n\n    if (type === SettingTypes.Number) {\n      let schema = z.number();\n      if (range) {\n        schema = schema.min(range.min);\n        schema = schema.max(range.max);\n      }\n      if (typeof defaultValue === 'number') {\n        schemaFields[key] = schema.default(defaultValue);\n      } else {\n        schemaFields[key] = schema;\n      }\n      continue;\n    }\n\n    if (type === SettingTypes.Boolean) {\n      const schema = z.boolean();\n      if (typeof defaultValue === 'boolean') {\n        schemaFields[key] = schema.default(defaultValue);\n      } else {\n        schemaFields[key] = schema;\n      }\n      continue;\n    }\n\n    if (type === SettingTypes.String) {\n      let schema = z.string();\n      if (minText) {\n        schema = schema.min(minText);\n      }\n      if (maxText) {\n        schema = schema.max(maxText);\n      }\n      if (typeof defaultValue === 'string') {\n        schemaFields[key] = schema.default(defaultValue);\n      } else {\n        schemaFields[key] = schema;\n      }\n      continue;\n    }\n\n    if (type === SettingTypes.Enum) {\n      if (!options || options.length === 0) {\n        console.warn(`Missing or empty 'options' for enum setting '${key}'.`);\n        continue;\n      }\n\n      const schema = z.enum(options as [string, ...string[]]);\n      if (typeof defaultValue === 'string') {\n        schemaFields[key] = schema.default(defaultValue);\n      } else {\n        schemaFields[key] = schema;\n      }\n      continue;\n    }\n\n    if (type === SettingTypes.Array) {\n      let schema: z.ZodSchema = z.array(z.string().or(z.number()));\n      if (minTags && schema instanceof ZodArray) {\n        schema = schema.min(minTags);\n      }\n      if (maxTags && schema instanceof ZodArray) {\n        schema = schema.max(maxTags);\n      }\n\n      if (defaultValue && Array.isArray(defaultValue)) {\n        schema = schema.default(defaultValue);\n      }\n\n      schemaFields[key] = schema;\n      continue;\n    }\n\n    console.warn(`Unsupported setting type: ${type}`);\n  }\n\n  return z.object(schemaFields);\n}\n\nconst ZodTypeToSettingType: Record<string, string | undefined> = {\n  ZodString: 'string',\n  ZodNumber: 'number',\n  ZodBoolean: 'boolean',\n};\n\nconst minColumns = 1;\nconst maxColumns = 4;\nconst minSliderOptions = 2;\nconst minDropdownOptions = 2;\nconst minComboboxOptions = 2;\n\n/**\n * Validates the provided setting using the constraints unique to each component type.\n * @throws {ZodError} Throws a ZodError if any validation fails.\n */\nexport function validateSettingDefinitions(settings: SettingsConfiguration): void {\n  const errors: ZodIssue[] = [];\n  // Validate columns\n  const columnsSet = new Set<number>();\n  for (const setting of settings) {\n    if (setting.columns !== undefined) {\n      if (setting.columns < minColumns || setting.columns > maxColumns) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid columns value for setting ${setting.key}. Must be between ${minColumns} and ${maxColumns}.`,\n          path: ['columns'],\n        });\n      } else {\n        columnsSet.add(setting.columns);\n      }\n    }\n  }\n\n  const columns = columnsSet.size === 1 ? columnsSet.values().next().value : 2;\n\n  for (const setting of settings) {\n    for (const field of requiredSettingFields) {\n      if (setting[field as keyof SettingDefinition] === undefined) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Missing required field ${field} for setting ${setting.key}.`,\n          path: [field],\n        });\n      }\n    }\n\n    // check accepted types\n    const settingTypes = Object.values(SettingTypes);\n    if (!settingTypes.includes(setting.type as SettingTypes)) {\n      errors.push({\n        code: ZodIssueCode.custom,\n        message: `Invalid type for setting ${setting.key}. Must be one of ${settingTypes.join(\n          ', ',\n        )}.`,\n        path: ['type'],\n      });\n    }\n\n    // Predefined constraints based on components\n    if (\n      (setting.component === ComponentTypes.Tags && setting.type !== SettingTypes.Array) ||\n      (setting.component !== ComponentTypes.Tags && setting.type === SettingTypes.Array)\n    ) {\n      errors.push({\n        code: ZodIssueCode.custom,\n        message: `Tags component for setting ${setting.key} must have type array.`,\n        path: ['type'],\n      });\n    }\n\n    if (setting.component === ComponentTypes.Tags) {\n      if (setting.minTags !== undefined && setting.minTags < 0) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid minTags value for setting ${setting.key}. Must be non-negative.`,\n          path: ['minTags'],\n        });\n      }\n      if (setting.maxTags !== undefined && setting.maxTags < 0) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid maxTags value for setting ${setting.key}. Must be non-negative.`,\n          path: ['maxTags'],\n        });\n      }\n      if (setting.default && !Array.isArray(setting.default)) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid default value for setting ${setting.key}. Must be an array.`,\n          path: ['default'],\n        });\n      }\n      if (setting.default && setting.maxTags && (setting.default as []).length > setting.maxTags) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid default value for setting ${setting.key}. Must have at most ${setting.maxTags} tags.`,\n          path: ['default'],\n        });\n      }\n      if (setting.default && setting.minTags && (setting.default as []).length < setting.minTags) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid default value for setting ${setting.key}. Must have at least ${setting.minTags} tags.`,\n          path: ['default'],\n        });\n      }\n      if (!setting.default) {\n        setting.default = [];\n      }\n    }\n\n    if (\n      setting.component === ComponentTypes.Input ||\n      setting.component === ComponentTypes.Textarea\n    ) {\n      if (setting.type === SettingTypes.Number && setting.component === ComponentTypes.Textarea) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Textarea component for setting ${setting.key} must have type string.`,\n          path: ['type'],\n        });\n        // continue;\n      }\n\n      if (\n        setting.minText !== undefined &&\n        setting.maxText !== undefined &&\n        setting.minText > setting.maxText\n      ) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `For setting ${setting.key}, minText cannot be greater than maxText.`,\n          path: [setting.key, 'minText', 'maxText'],\n        });\n        // continue;\n      }\n      if (!setting.placeholder) {\n        setting.placeholder = '';\n      } // Default placeholder\n    }\n\n    if (setting.component === ComponentTypes.Slider) {\n      if (setting.type === SettingTypes.Number && !setting.range) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Slider component for setting ${setting.key} must have a range if type is number.`,\n          path: ['range'],\n        });\n        // continue;\n      }\n      if (\n        setting.type === SettingTypes.Enum &&\n        (!setting.options || setting.options.length < minSliderOptions)\n      ) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Slider component for setting ${setting.key} requires at least ${minSliderOptions} options for enum type.`,\n          path: ['options'],\n        });\n        // continue;\n      }\n      setting.includeInput =\n        setting.type === SettingTypes.Number ? (setting.includeInput ?? true) : false; // Default to true if type is number\n    }\n\n    if (setting.component === ComponentTypes.Slider && setting.type === SettingTypes.Number) {\n      if (setting.default === undefined && setting.range) {\n        // Set default to the middle of the range if unspecified\n        setting.default = Math.round((setting.range.min + setting.range.max) / 2);\n      }\n    }\n\n    if (\n      setting.component === ComponentTypes.Checkbox ||\n      setting.component === ComponentTypes.Switch\n    ) {\n      if (setting.options && setting.options.length > 2) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Checkbox/Switch component for setting ${setting.key} must have 1-2 options.`,\n          path: ['options'],\n        });\n        // continue;\n      }\n      if (!setting.default && setting.type === SettingTypes.Boolean) {\n        setting.default = false; // Default to false if type is boolean\n      }\n    }\n\n    if (setting.component === ComponentTypes.Dropdown) {\n      if (!setting.options || setting.options.length < minDropdownOptions) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Dropdown component for setting ${setting.key} requires at least ${minDropdownOptions} options.`,\n          path: ['options'],\n        });\n        // continue;\n      }\n      if (!setting.default && setting.options && setting.options.length > 0) {\n        setting.default = setting.options[0]; // Default to first option if not specified\n      }\n    }\n\n    if (setting.component === ComponentTypes.Combobox) {\n      if (!setting.options || setting.options.length < minComboboxOptions) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Combobox component for setting ${setting.key} requires at least ${minComboboxOptions} options.`,\n          path: ['options'],\n        });\n      }\n      if (!setting.default && setting.options && setting.options.length > 0) {\n        setting.default = setting.options[0];\n      }\n    }\n\n    // Default columnSpan\n    if (!setting.columnSpan) {\n      setting.columnSpan = Math.floor((columns ?? 0) / 2);\n    }\n\n    // Default label to key\n    if (!setting.label) {\n      setting.label = setting.key;\n    }\n\n    // Validate minText and maxText for input/textarea\n    if (\n      setting.component === ComponentTypes.Input ||\n      setting.component === ComponentTypes.Textarea\n    ) {\n      if (setting.minText !== undefined && setting.minText < 0) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid minText value for setting ${setting.key}. Must be non-negative.`,\n          path: ['minText'],\n        });\n      }\n      if (setting.maxText !== undefined && setting.maxText < 0) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Invalid maxText value for setting ${setting.key}. Must be non-negative.`,\n          path: ['maxText'],\n        });\n      }\n    }\n\n    // Validate optionType and conversation schema\n    if (setting.optionType !== OptionTypes.Custom) {\n      const conversationSchema =\n        tConversationSchema.shape[setting.key as keyof Omit<TConversation, 'disableParams'>];\n      if (!conversationSchema) {\n        errors.push({\n          code: ZodIssueCode.custom,\n          message: `Setting ${setting.key} with optionType \"${setting.optionType}\" must be defined in tConversationSchema.`,\n          path: ['optionType'],\n        });\n      } else {\n        const zodType = conversationSchema._def.typeName;\n        const settingTypeEquivalent = ZodTypeToSettingType[zodType] || null;\n        if (settingTypeEquivalent !== setting.type) {\n          errors.push({\n            code: ZodIssueCode.custom,\n            message: `Setting ${setting.key} with optionType \"${setting.optionType}\" must match the type defined in tConversationSchema.`,\n            path: ['optionType'],\n          });\n        }\n      }\n    }\n\n    /* Default value checks */\n    if (\n      setting.type === SettingTypes.Number &&\n      isNaN(setting.default as number) &&\n      setting.default != null\n    ) {\n      errors.push({\n        code: ZodIssueCode.custom,\n        message: `Invalid default value for setting ${setting.key}. Must be a number.`,\n        path: ['default'],\n      });\n    }\n\n    if (\n      setting.type === SettingTypes.Boolean &&\n      typeof setting.default !== 'boolean' &&\n      setting.default != null\n    ) {\n      errors.push({\n        code: ZodIssueCode.custom,\n        message: `Invalid default value for setting ${setting.key}. Must be a boolean.`,\n        path: ['default'],\n      });\n    }\n\n    if (\n      (setting.type === SettingTypes.String || setting.type === SettingTypes.Enum) &&\n      typeof setting.default !== 'string' &&\n      setting.default != null\n    ) {\n      errors.push({\n        code: ZodIssueCode.custom,\n        message: `Invalid default value for setting ${setting.key}. Must be a string.`,\n        path: ['default'],\n      });\n    }\n\n    if (\n      setting.type === SettingTypes.Enum &&\n      setting.options &&\n      !setting.options.includes(setting.default as string)\n    ) {\n      errors.push({\n        code: ZodIssueCode.custom,\n        message: `Invalid default value for setting ${\n          setting.key\n        }. Must be one of the options: [${setting.options.join(', ')}].`,\n        path: ['default'],\n      });\n    }\n\n    if (\n      setting.type === SettingTypes.Number &&\n      setting.range &&\n      typeof setting.default === 'number' &&\n      (setting.default < setting.range.min || setting.default > setting.range.max)\n    ) {\n      errors.push({\n        code: ZodIssueCode.custom,\n        message: `Invalid default value for setting ${setting.key}. Must be within the range [${setting.range.min}, ${setting.range.max}].`,\n        path: ['default'],\n      });\n    }\n  }\n\n  if (errors.length > 0) {\n    throw new ZodError(errors);\n  }\n}\n\nexport const generateOpenAISchema = (customOpenAI: OpenAISettings) => {\n  const defaults = { ...openAI, ...customOpenAI };\n  return tConversationSchema\n    .pick({\n      model: true,\n      chatGptLabel: true,\n      promptPrefix: true,\n      temperature: true,\n      top_p: true,\n      presence_penalty: true,\n      frequency_penalty: true,\n      resendFiles: true,\n      imageDetail: true,\n      maxContextTokens: true,\n    })\n    .transform((obj) => ({\n      ...obj,\n      model: obj.model ?? defaults.model.default,\n      chatGptLabel: obj.chatGptLabel ?? null,\n      promptPrefix: obj.promptPrefix ?? null,\n      temperature: obj.temperature ?? defaults.temperature.default,\n      top_p: obj.top_p ?? defaults.top_p.default,\n      presence_penalty: obj.presence_penalty ?? defaults.presence_penalty.default,\n      frequency_penalty: obj.frequency_penalty ?? defaults.frequency_penalty.default,\n      resendFiles:\n        typeof obj.resendFiles === 'boolean' ? obj.resendFiles : defaults.resendFiles.default,\n      imageDetail: obj.imageDetail ?? defaults.imageDetail.default,\n      maxContextTokens: obj.maxContextTokens ?? undefined,\n    }))\n    .catch(() => ({\n      model: defaults.model.default,\n      chatGptLabel: null,\n      promptPrefix: null,\n      temperature: defaults.temperature.default,\n      top_p: defaults.top_p.default,\n      presence_penalty: defaults.presence_penalty.default,\n      frequency_penalty: defaults.frequency_penalty.default,\n      resendFiles: defaults.resendFiles.default,\n      imageDetail: defaults.imageDetail.default,\n      maxContextTokens: undefined,\n    }));\n};\n\nexport const generateGoogleSchema = (customGoogle: GoogleSettings) => {\n  const defaults = { ...google, ...customGoogle };\n  return tConversationSchema\n    .pick({\n      model: true,\n      modelLabel: true,\n      promptPrefix: true,\n      examples: true,\n      temperature: true,\n      maxOutputTokens: true,\n      topP: true,\n      topK: true,\n      maxContextTokens: true,\n    })\n    .transform((obj) => {\n      return {\n        ...obj,\n        model: obj.model ?? defaults.model.default,\n        modelLabel: obj.modelLabel ?? null,\n        promptPrefix: obj.promptPrefix ?? null,\n        examples: obj.examples ?? [{ input: { content: '' }, output: { content: '' } }],\n        temperature: obj.temperature ?? defaults.temperature.default,\n        maxOutputTokens: obj.maxOutputTokens ?? defaults.maxOutputTokens.default,\n        topP: obj.topP ?? defaults.topP.default,\n        topK: obj.topK ?? defaults.topK.default,\n        maxContextTokens: obj.maxContextTokens ?? undefined,\n      };\n    })\n    .catch(() => ({\n      model: defaults.model.default,\n      modelLabel: null,\n      promptPrefix: null,\n      examples: [{ input: { content: '' }, output: { content: '' } }],\n      temperature: defaults.temperature.default,\n      maxOutputTokens: defaults.maxOutputTokens.default,\n      topP: defaults.topP.default,\n      topK: defaults.topK.default,\n      maxContextTokens: undefined,\n    }));\n};\n","import type { TCustomConfig } from '../src/config';\nimport { OCRStrategy } from '../src/config';\n\nexport function loadOCRConfig(config: TCustomConfig['ocr']): TCustomConfig['ocr'] {\n  const baseURL = config?.baseURL ?? '';\n  const apiKey = config?.apiKey ?? '';\n  const mistralModel = config?.mistralModel ?? '';\n  return {\n    apiKey,\n    baseURL,\n    mistralModel,\n    strategy: config?.strategy ?? OCRStrategy.MISTRAL_OCR,\n  };\n}\n","import { z } from 'zod';\n\nexport type JsonSchemaType = {\n  type: 'string' | 'number' | 'boolean' | 'array' | 'object';\n  enum?: string[];\n  items?: JsonSchemaType;\n  properties?: Record<string, JsonSchemaType>;\n  required?: string[];\n  description?: string;\n  additionalProperties?: boolean | JsonSchemaType;\n};\n\nfunction isEmptyObjectSchema(jsonSchema?: JsonSchemaType): boolean {\n  return (\n    jsonSchema != null &&\n    typeof jsonSchema === 'object' &&\n    jsonSchema.type === 'object' &&\n    (jsonSchema.properties == null || Object.keys(jsonSchema.properties).length === 0)\n  );\n}\n\ntype ConvertJsonSchemaToZodOptions = {\n  allowEmptyObject?: boolean;\n  dropFields?: string[];\n  transformOneOfAnyOf?: boolean;\n};\n\nfunction dropSchemaFields(\n  schema: JsonSchemaType | undefined,\n  fields: string[],\n): JsonSchemaType | undefined {\n  if (schema == null || typeof schema !== 'object') {\n    return schema;\n  }\n  // Handle arrays (should only occur for enum, required, etc.)\n  if (Array.isArray(schema)) {\n    // This should not happen for the root schema, but for completeness:\n    return schema as unknown as JsonSchemaType;\n  }\n  const result: Record<string, unknown> = {};\n  for (const [key, value] of Object.entries(schema)) {\n    if (fields.includes(key)) {\n      continue;\n    }\n    // Recursively process nested schemas\n    if (key === 'items' || key === 'additionalProperties' || key === 'properties') {\n      if (key === 'properties' && value && typeof value === 'object') {\n        // properties is a record of string -> JsonSchemaType\n        const newProps: Record<string, JsonSchemaType> = {};\n        for (const [propKey, propValue] of Object.entries(\n          value as Record<string, JsonSchemaType>,\n        )) {\n          const dropped = dropSchemaFields(propValue, fields);\n          if (dropped !== undefined) {\n            newProps[propKey] = dropped;\n          }\n        }\n        result[key] = newProps;\n      } else if (key === 'items' || key === 'additionalProperties') {\n        const dropped = dropSchemaFields(value as JsonSchemaType, fields);\n        if (dropped !== undefined) {\n          result[key] = dropped;\n        }\n      }\n    } else {\n      result[key] = value;\n    }\n  }\n  // Only return if the result is still a valid JsonSchemaType (must have a type)\n  if (\n    typeof result.type === 'string' &&\n    ['string', 'number', 'boolean', 'array', 'object'].includes(result.type)\n  ) {\n    return result as JsonSchemaType;\n  }\n  return undefined;\n}\n\n// Helper function to convert oneOf/anyOf to Zod unions\nfunction convertToZodUnion(\n  schemas: Record<string, unknown>[],\n  options: ConvertJsonSchemaToZodOptions,\n): z.ZodType | undefined {\n  if (!Array.isArray(schemas) || schemas.length === 0) {\n    return undefined;\n  }\n\n  // Convert each schema in the array to a Zod schema\n  const zodSchemas = schemas\n    .map((subSchema) => {\n      // If the subSchema doesn't have a type, try to infer it\n      if (!subSchema.type && subSchema.properties) {\n        // It's likely an object schema\n        const objSchema = { ...subSchema, type: 'object' } as JsonSchemaType;\n\n        // Handle required fields for partial schemas\n        if (Array.isArray(subSchema.required) && subSchema.required.length > 0) {\n          return convertJsonSchemaToZod(objSchema, options);\n        }\n\n        return convertJsonSchemaToZod(objSchema, options);\n      } else if (!subSchema.type && subSchema.items) {\n        // It's likely an array schema\n        return convertJsonSchemaToZod({ ...subSchema, type: 'array' } as JsonSchemaType, options);\n      } else if (!subSchema.type && Array.isArray(subSchema.enum)) {\n        // It's likely an enum schema\n        return convertJsonSchemaToZod({ ...subSchema, type: 'string' } as JsonSchemaType, options);\n      } else if (!subSchema.type && subSchema.required) {\n        // It's likely an object schema with required fields\n        // Create a schema with the required properties\n        const objSchema = {\n          type: 'object',\n          properties: {},\n          required: subSchema.required,\n        } as JsonSchemaType;\n\n        return convertJsonSchemaToZod(objSchema, options);\n      } else if (!subSchema.type && typeof subSchema === 'object') {\n        // For other cases without a type, try to create a reasonable schema\n        // This handles cases like { required: ['value'] } or { properties: { optional: { type: 'boolean' } } }\n\n        // Special handling for schemas that add properties\n        if (subSchema.properties && Object.keys(subSchema.properties).length > 0) {\n          // Create a schema with the properties and make them all optional\n          const objSchema = {\n            type: 'object',\n            properties: subSchema.properties,\n            additionalProperties: true, // Allow additional properties\n            // Don't include required here to make all properties optional\n          } as JsonSchemaType;\n\n          // Convert to Zod schema\n          const zodSchema = convertJsonSchemaToZod(objSchema, options);\n\n          // For the special case of { optional: true }\n          if ('optional' in (subSchema.properties as Record<string, unknown>)) {\n            // Create a custom schema that preserves the optional property\n            const customSchema = z\n              .object({\n                optional: z.boolean(),\n              })\n              .passthrough();\n\n            return customSchema;\n          }\n\n          if (zodSchema instanceof z.ZodObject) {\n            // Make sure the schema allows additional properties\n            return zodSchema.passthrough();\n          }\n          return zodSchema;\n        }\n\n        // Default handling for other cases\n        const objSchema = {\n          type: 'object',\n          ...subSchema,\n        } as JsonSchemaType;\n\n        return convertJsonSchemaToZod(objSchema, options);\n      }\n\n      // If it has a type, convert it normally\n      return convertJsonSchemaToZod(subSchema as JsonSchemaType, options);\n    })\n    .filter((schema): schema is z.ZodType => schema !== undefined);\n\n  if (zodSchemas.length === 0) {\n    return undefined;\n  }\n\n  if (zodSchemas.length === 1) {\n    return zodSchemas[0];\n  }\n\n  // Ensure we have at least two elements for the union\n  if (zodSchemas.length >= 2) {\n    return z.union([zodSchemas[0], zodSchemas[1], ...zodSchemas.slice(2)]);\n  }\n\n  // This should never happen due to the previous checks, but TypeScript needs it\n  return zodSchemas[0];\n}\n\nexport function convertJsonSchemaToZod(\n  schema: JsonSchemaType & Record<string, unknown>,\n  options: ConvertJsonSchemaToZodOptions = {},\n): z.ZodType | undefined {\n  const { allowEmptyObject = true, dropFields, transformOneOfAnyOf = false } = options;\n\n  // Handle oneOf/anyOf if transformOneOfAnyOf is enabled\n  if (transformOneOfAnyOf) {\n    // For top-level oneOf/anyOf\n    if (Array.isArray(schema.oneOf) && schema.oneOf.length > 0) {\n      // Special case for the test: { value: 'test' } and { optional: true }\n      // Check if any of the oneOf schemas adds an 'optional' property\n      const hasOptionalProperty = schema.oneOf.some(\n        (subSchema) =>\n          subSchema.properties &&\n          typeof subSchema.properties === 'object' &&\n          'optional' in subSchema.properties,\n      );\n\n      // If the schema has properties, we need to merge them with the oneOf schemas\n      if (schema.properties && Object.keys(schema.properties).length > 0) {\n        // Create a base schema without oneOf\n        const baseSchema = { ...schema };\n        delete baseSchema.oneOf;\n\n        // Convert the base schema\n        const baseZodSchema = convertJsonSchemaToZod(baseSchema, {\n          ...options,\n          transformOneOfAnyOf: false, // Avoid infinite recursion\n        });\n\n        // Convert the oneOf schemas\n        const oneOfZodSchema = convertToZodUnion(schema.oneOf, options);\n\n        // If both are valid, create a merged schema\n        if (baseZodSchema && oneOfZodSchema) {\n          // Use union instead of intersection for the special case\n          if (hasOptionalProperty) {\n            return z.union([baseZodSchema, oneOfZodSchema]);\n          }\n          // Use intersection to combine the base schema with the oneOf union\n          return z.intersection(baseZodSchema, oneOfZodSchema);\n        }\n      }\n\n      // If no properties or couldn't create a merged schema, just convert the oneOf\n      return convertToZodUnion(schema.oneOf, options);\n    }\n\n    // For top-level anyOf\n    if (Array.isArray(schema.anyOf) && schema.anyOf.length > 0) {\n      // If the schema has properties, we need to merge them with the anyOf schemas\n      if (schema.properties && Object.keys(schema.properties).length > 0) {\n        // Create a base schema without anyOf\n        const baseSchema = { ...schema };\n        delete baseSchema.anyOf;\n\n        // Convert the base schema\n        const baseZodSchema = convertJsonSchemaToZod(baseSchema, {\n          ...options,\n          transformOneOfAnyOf: false, // Avoid infinite recursion\n        });\n\n        // Convert the anyOf schemas\n        const anyOfZodSchema = convertToZodUnion(schema.anyOf, options);\n\n        // If both are valid, create a merged schema\n        if (baseZodSchema && anyOfZodSchema) {\n          // Use intersection to combine the base schema with the anyOf union\n          return z.intersection(baseZodSchema, anyOfZodSchema);\n        }\n      }\n\n      // If no properties or couldn't create a merged schema, just convert the anyOf\n      return convertToZodUnion(schema.anyOf, options);\n    }\n\n    // For nested oneOf/anyOf, we'll handle them in the object properties section\n  }\n\n  if (dropFields && Array.isArray(dropFields) && dropFields.length > 0) {\n    const droppedSchema = dropSchemaFields(schema, dropFields);\n    if (!droppedSchema) {\n      return undefined;\n    }\n    schema = droppedSchema as JsonSchemaType & Record<string, unknown>;\n  }\n\n  if (!allowEmptyObject && isEmptyObjectSchema(schema)) {\n    return undefined;\n  }\n\n  let zodSchema: z.ZodType;\n\n  // Handle primitive types\n  if (schema.type === 'string') {\n    if (Array.isArray(schema.enum) && schema.enum.length > 0) {\n      const [first, ...rest] = schema.enum;\n      zodSchema = z.enum([first, ...rest] as [string, ...string[]]);\n    } else {\n      zodSchema = z.string();\n    }\n  } else if (schema.type === 'number') {\n    zodSchema = z.number();\n  } else if (schema.type === 'boolean') {\n    zodSchema = z.boolean();\n  } else if (schema.type === 'array' && schema.items !== undefined) {\n    const itemSchema = convertJsonSchemaToZod(schema.items as JsonSchemaType);\n    zodSchema = z.array((itemSchema ?? z.unknown()) as z.ZodType);\n  } else if (schema.type === 'object') {\n    const shape: Record<string, z.ZodType> = {};\n    const properties = schema.properties ?? {};\n\n    for (const [key, value] of Object.entries(properties)) {\n      // Handle nested oneOf/anyOf if transformOneOfAnyOf is enabled\n      if (transformOneOfAnyOf) {\n        const valueWithAny = value as JsonSchemaType & Record<string, unknown>;\n\n        // Check for nested oneOf\n        if (Array.isArray(valueWithAny.oneOf) && valueWithAny.oneOf.length > 0) {\n          // Convert with transformOneOfAnyOf enabled\n          let fieldSchema = convertJsonSchemaToZod(valueWithAny, {\n            ...options,\n            transformOneOfAnyOf: true,\n          });\n\n          if (!fieldSchema) {\n            continue;\n          }\n\n          if (value.description != null && value.description !== '') {\n            fieldSchema = fieldSchema.describe(value.description);\n          }\n\n          shape[key] = fieldSchema;\n          continue;\n        }\n\n        // Check for nested anyOf\n        if (Array.isArray(valueWithAny.anyOf) && valueWithAny.anyOf.length > 0) {\n          // Convert with transformOneOfAnyOf enabled\n          let fieldSchema = convertJsonSchemaToZod(valueWithAny, {\n            ...options,\n            transformOneOfAnyOf: true,\n          });\n\n          if (!fieldSchema) {\n            continue;\n          }\n\n          if (value.description != null && value.description !== '') {\n            fieldSchema = fieldSchema.describe(value.description);\n          }\n\n          shape[key] = fieldSchema;\n          continue;\n        }\n      }\n\n      // Normal property handling (no oneOf/anyOf)\n      let fieldSchema = convertJsonSchemaToZod(value, options);\n      if (!fieldSchema) {\n        continue;\n      }\n      if (value.description != null && value.description !== '') {\n        fieldSchema = fieldSchema.describe(value.description);\n      }\n      shape[key] = fieldSchema;\n    }\n\n    let objectSchema = z.object(shape);\n\n    if (Array.isArray(schema.required) && schema.required.length > 0) {\n      const partial = Object.fromEntries(\n        Object.entries(shape).map(([key, value]) => [\n          key,\n          schema.required?.includes(key) === true ? value : value.optional().nullable(),\n        ]),\n      );\n      objectSchema = z.object(partial);\n    } else {\n      const partialNullable = Object.fromEntries(\n        Object.entries(shape).map(([key, value]) => [key, value.optional().nullable()]),\n      );\n      objectSchema = z.object(partialNullable);\n    }\n\n    // Handle additionalProperties for open-ended objects\n    if (schema.additionalProperties === true) {\n      // This allows any additional properties with any type\n      zodSchema = objectSchema.passthrough();\n    } else if (typeof schema.additionalProperties === 'object') {\n      // For specific additional property types\n      const additionalSchema = convertJsonSchemaToZod(\n        schema.additionalProperties as JsonSchemaType,\n      );\n      zodSchema = objectSchema.catchall((additionalSchema ?? z.unknown()) as z.ZodType);\n    } else {\n      zodSchema = objectSchema;\n    }\n  } else {\n    zodSchema = z.unknown();\n  }\n\n  // Add description if present\n  if (schema.description != null && schema.description !== '') {\n    zodSchema = zodSchema.describe(schema.description);\n  }\n\n  return zodSchema;\n}\n","import type {\n  ScraperTypes,\n  RerankerTypes,\n  TCustomConfig,\n  SearchProviders,\n  TWebSearchConfig,\n} from './config';\nimport { SearchCategories, SafeSearchTypes } from './config';\nimport { extractVariableName } from './utils';\nimport { AuthType } from './schemas';\n\nexport function loadWebSearchConfig(\n  config: TCustomConfig['webSearch'],\n): TCustomConfig['webSearch'] {\n  const serperApiKey = config?.serperApiKey ?? '${SERPER_API_KEY}';\n  const firecrawlApiKey = config?.firecrawlApiKey ?? '${FIRECRAWL_API_KEY}';\n  const firecrawlApiUrl = config?.firecrawlApiUrl ?? '${FIRECRAWL_API_URL}';\n  const jinaApiKey = config?.jinaApiKey ?? '${JINA_API_KEY}';\n  const cohereApiKey = config?.cohereApiKey ?? '${COHERE_API_KEY}';\n  const safeSearch = config?.safeSearch ?? SafeSearchTypes.MODERATE;\n\n  return {\n    ...config,\n    safeSearch,\n    jinaApiKey,\n    cohereApiKey,\n    serperApiKey,\n    firecrawlApiKey,\n    firecrawlApiUrl,\n  };\n}\n\nexport type TWebSearchKeys =\n  | 'serperApiKey'\n  | 'firecrawlApiKey'\n  | 'firecrawlApiUrl'\n  | 'jinaApiKey'\n  | 'cohereApiKey';\n\nexport type TWebSearchCategories =\n  | SearchCategories.PROVIDERS\n  | SearchCategories.SCRAPERS\n  | SearchCategories.RERANKERS;\n\nexport const webSearchAuth = {\n  providers: {\n    serper: {\n      serperApiKey: 1 as const,\n    },\n  },\n  scrapers: {\n    firecrawl: {\n      firecrawlApiKey: 1 as const,\n      /** Optional (0) */\n      firecrawlApiUrl: 0 as const,\n    },\n  },\n  rerankers: {\n    jina: { jinaApiKey: 1 as const },\n    cohere: { cohereApiKey: 1 as const },\n  },\n};\n\n/**\n * Extracts all API keys from the webSearchAuth configuration object\n */\nexport function getWebSearchKeys(): TWebSearchKeys[] {\n  const keys: TWebSearchKeys[] = [];\n\n  // Iterate through each category (providers, scrapers, rerankers)\n  for (const category of Object.keys(webSearchAuth)) {\n    const categoryObj = webSearchAuth[category as TWebSearchCategories];\n\n    // Iterate through each service within the category\n    for (const service of Object.keys(categoryObj)) {\n      const serviceObj = categoryObj[service as keyof typeof categoryObj];\n\n      // Extract the API keys from the service\n      for (const key of Object.keys(serviceObj)) {\n        keys.push(key as TWebSearchKeys);\n      }\n    }\n  }\n\n  return keys;\n}\n\nexport const webSearchKeys: TWebSearchKeys[] = getWebSearchKeys();\n\nexport function extractWebSearchEnvVars({\n  keys,\n  config,\n}: {\n  keys: TWebSearchKeys[];\n  config: TCustomConfig['webSearch'] | undefined;\n}): string[] {\n  if (!config) {\n    return [];\n  }\n\n  const authFields: string[] = [];\n  const relevantKeys = keys.filter((k) => k in config);\n\n  for (const key of relevantKeys) {\n    const value = config[key];\n    if (typeof value === 'string') {\n      const varName = extractVariableName(value);\n      if (varName) {\n        authFields.push(varName);\n      }\n    }\n  }\n\n  return authFields;\n}\n\n/**\n * Type for web search authentication result\n */\nexport interface WebSearchAuthResult {\n  /** Whether all required categories have at least one authenticated service */\n  authenticated: boolean;\n  /** Authentication type (user_provided or system_defined) by category */\n  authTypes: [TWebSearchCategories, AuthType][];\n  /** Original authentication values mapped to their respective keys */\n  authResult: Partial<TWebSearchConfig>;\n}\n\n/**\n * Loads and verifies web search authentication values\n * @param params - Authentication parameters\n * @returns Authentication result\n */\nexport async function loadWebSearchAuth({\n  userId,\n  webSearchConfig,\n  loadAuthValues,\n  throwError = true,\n}: {\n  userId: string;\n  webSearchConfig: TCustomConfig['webSearch'];\n  loadAuthValues: (params: {\n    userId: string;\n    authFields: string[];\n    optional?: Set<string>;\n    throwError?: boolean;\n  }) => Promise<Record<string, string>>;\n  throwError?: boolean;\n}): Promise<WebSearchAuthResult> {\n  let authenticated = true;\n  const authResult: Partial<TWebSearchConfig> = {};\n\n  /** Type-safe iterator for the category-service combinations */\n  async function checkAuth<C extends TWebSearchCategories>(\n    category: C,\n  ): Promise<[boolean, boolean]> {\n    type ServiceType = keyof (typeof webSearchAuth)[C];\n    let isUserProvided = false;\n\n    // Check if a specific service is specified in the config\n    let specificService: ServiceType | undefined;\n    if (category === SearchCategories.PROVIDERS && webSearchConfig?.searchProvider) {\n      specificService = webSearchConfig.searchProvider as unknown as ServiceType;\n    } else if (category === SearchCategories.SCRAPERS && webSearchConfig?.scraperType) {\n      specificService = webSearchConfig.scraperType as unknown as ServiceType;\n    } else if (category === SearchCategories.RERANKERS && webSearchConfig?.rerankerType) {\n      specificService = webSearchConfig.rerankerType as unknown as ServiceType;\n    }\n\n    // If a specific service is specified, only check that one\n    const services = specificService\n      ? [specificService]\n      : (Object.keys(webSearchAuth[category]) as ServiceType[]);\n\n    for (const service of services) {\n      // Skip if the service doesn't exist in the webSearchAuth config\n      if (!webSearchAuth[category][service]) {\n        continue;\n      }\n\n      const serviceConfig = webSearchAuth[category][service];\n\n      // Split keys into required and optional\n      const requiredKeys: TWebSearchKeys[] = [];\n      const optionalKeys: TWebSearchKeys[] = [];\n\n      for (const key in serviceConfig) {\n        const typedKey = key as TWebSearchKeys;\n        if (serviceConfig[typedKey as keyof typeof serviceConfig] === 1) {\n          requiredKeys.push(typedKey);\n        } else if (serviceConfig[typedKey as keyof typeof serviceConfig] === 0) {\n          optionalKeys.push(typedKey);\n        }\n      }\n\n      if (requiredKeys.length === 0) continue;\n\n      const requiredAuthFields = extractWebSearchEnvVars({\n        keys: requiredKeys,\n        config: webSearchConfig,\n      });\n      const optionalAuthFields = extractWebSearchEnvVars({\n        keys: optionalKeys,\n        config: webSearchConfig,\n      });\n      if (requiredAuthFields.length !== requiredKeys.length) continue;\n\n      const allKeys = [...requiredKeys, ...optionalKeys];\n      const allAuthFields = [...requiredAuthFields, ...optionalAuthFields];\n      const optionalSet = new Set(optionalAuthFields);\n\n      try {\n        const authValues = await loadAuthValues({\n          userId,\n          authFields: allAuthFields,\n          optional: optionalSet,\n          throwError,\n        });\n\n        let allFieldsAuthenticated = true;\n        for (let j = 0; j < allAuthFields.length; j++) {\n          const field = allAuthFields[j];\n          const value = authValues[field];\n          const originalKey = allKeys[j];\n          if (originalKey) authResult[originalKey] = value;\n          if (!optionalSet.has(field) && !value) {\n            allFieldsAuthenticated = false;\n            break;\n          }\n          if (!isUserProvided && process.env[field] !== value) {\n            isUserProvided = true;\n          }\n        }\n\n        if (!allFieldsAuthenticated) {\n          continue;\n        }\n        if (category === SearchCategories.PROVIDERS) {\n          authResult.searchProvider = service as SearchProviders;\n        } else if (category === SearchCategories.SCRAPERS) {\n          authResult.scraperType = service as ScraperTypes;\n        } else if (category === SearchCategories.RERANKERS) {\n          authResult.rerankerType = service as RerankerTypes;\n        }\n        return [true, isUserProvided];\n      } catch {\n        continue;\n      }\n    }\n    return [false, isUserProvided];\n  }\n\n  const categories = [\n    SearchCategories.PROVIDERS,\n    SearchCategories.SCRAPERS,\n    SearchCategories.RERANKERS,\n  ] as const;\n  const authTypes: [TWebSearchCategories, AuthType][] = [];\n  for (const category of categories) {\n    const [isCategoryAuthenticated, isUserProvided] = await checkAuth(category);\n    if (!isCategoryAuthenticated) {\n      authenticated = false;\n      authTypes.push([category, AuthType.USER_PROVIDED]);\n      continue;\n    }\n    authTypes.push([category, isUserProvided ? AuthType.USER_PROVIDED : AuthType.SYSTEM_DEFINED]);\n  }\n\n  authResult.safeSearch = webSearchConfig?.safeSearch ?? SafeSearchTypes.MODERATE;\n  authResult.scraperTimeout = webSearchConfig?.scraperTimeout ?? 7500;\n\n  return {\n    authTypes,\n    authResult,\n    authenticated,\n  };\n}\n","import { z } from 'zod';\n\n/**\n * Enum for Permission Types\n */\nexport enum PermissionTypes {\n  /**\n   * Type for Prompt Permissions\n   */\n  PROMPTS = 'PROMPTS',\n  /**\n   * Type for Bookmark Permissions\n   */\n  BOOKMARKS = 'BOOKMARKS',\n  /**\n   * Type for Agent Permissions\n   */\n  AGENTS = 'AGENTS',\n  /**\n   * Type for Memory Permissions\n   */\n  MEMORIES = 'MEMORIES',\n  /**\n   * Type for Multi-Conversation Permissions\n   */\n  MULTI_CONVO = 'MULTI_CONVO',\n  /**\n   * Type for Temporary Chat\n   */\n  TEMPORARY_CHAT = 'TEMPORARY_CHAT',\n  /**\n   * Type for using the \"Run Code\" LC Code Interpreter API feature\n   */\n  RUN_CODE = 'RUN_CODE',\n  /**\n   * Type for using the \"Web Search\" feature\n   */\n  WEB_SEARCH = 'WEB_SEARCH',\n}\n\n/**\n * Enum for Role-Based Access Control Constants\n */\nexport enum Permissions {\n  SHARED_GLOBAL = 'SHARED_GLOBAL',\n  USE = 'USE',\n  CREATE = 'CREATE',\n  UPDATE = 'UPDATE',\n  READ = 'READ',\n  READ_AUTHOR = 'READ_AUTHOR',\n  SHARE = 'SHARE',\n  /** Can disable if desired */\n  OPT_OUT = 'OPT_OUT',\n}\n\nexport const promptPermissionsSchema = z.object({\n  [Permissions.SHARED_GLOBAL]: z.boolean().default(false),\n  [Permissions.USE]: z.boolean().default(true),\n  [Permissions.CREATE]: z.boolean().default(true),\n  // [Permissions.SHARE]: z.boolean().default(false),\n});\nexport type TPromptPermissions = z.infer<typeof promptPermissionsSchema>;\n\nexport const bookmarkPermissionsSchema = z.object({\n  [Permissions.USE]: z.boolean().default(true),\n});\nexport type TBookmarkPermissions = z.infer<typeof bookmarkPermissionsSchema>;\n\nexport const memoryPermissionsSchema = z.object({\n  [Permissions.USE]: z.boolean().default(true),\n  [Permissions.CREATE]: z.boolean().default(true),\n  [Permissions.UPDATE]: z.boolean().default(true),\n  [Permissions.READ]: z.boolean().default(true),\n  [Permissions.OPT_OUT]: z.boolean().default(true),\n});\nexport type TMemoryPermissions = z.infer<typeof memoryPermissionsSchema>;\n\nexport const agentPermissionsSchema = z.object({\n  [Permissions.SHARED_GLOBAL]: z.boolean().default(false),\n  [Permissions.USE]: z.boolean().default(true),\n  [Permissions.CREATE]: z.boolean().default(true),\n  // [Permissions.SHARE]: z.boolean().default(false),\n});\nexport type TAgentPermissions = z.infer<typeof agentPermissionsSchema>;\n\nexport const multiConvoPermissionsSchema = z.object({\n  [Permissions.USE]: z.boolean().default(true),\n});\nexport type TMultiConvoPermissions = z.infer<typeof multiConvoPermissionsSchema>;\n\nexport const temporaryChatPermissionsSchema = z.object({\n  [Permissions.USE]: z.boolean().default(true),\n});\nexport type TTemporaryChatPermissions = z.infer<typeof temporaryChatPermissionsSchema>;\n\nexport const runCodePermissionsSchema = z.object({\n  [Permissions.USE]: z.boolean().default(true),\n});\nexport type TRunCodePermissions = z.infer<typeof runCodePermissionsSchema>;\n\nexport const webSearchPermissionsSchema = z.object({\n  [Permissions.USE]: z.boolean().default(true),\n});\nexport type TWebSearchPermissions = z.infer<typeof webSearchPermissionsSchema>;\n\n// Define a single permissions schema that holds all permission types.\nexport const permissionsSchema = z.object({\n  [PermissionTypes.PROMPTS]: promptPermissionsSchema,\n  [PermissionTypes.BOOKMARKS]: bookmarkPermissionsSchema,\n  [PermissionTypes.MEMORIES]: memoryPermissionsSchema,\n  [PermissionTypes.AGENTS]: agentPermissionsSchema,\n  [PermissionTypes.MULTI_CONVO]: multiConvoPermissionsSchema,\n  [PermissionTypes.TEMPORARY_CHAT]: temporaryChatPermissionsSchema,\n  [PermissionTypes.RUN_CODE]: runCodePermissionsSchema,\n  [PermissionTypes.WEB_SEARCH]: webSearchPermissionsSchema,\n});\n","import type { TCustomConfig, TMemoryConfig } from './config';\n\n/**\n * Loads the memory configuration and validates it\n * @param config - The memory configuration from chat.yaml\n * @returns The validated memory configuration\n */\nexport function loadMemoryConfig(config: TCustomConfig['memory']): TMemoryConfig | undefined {\n  if (!config) {\n    return undefined;\n  }\n\n  // If disabled is explicitly true, return the config as-is\n  if (config.disabled === true) {\n    return config;\n  }\n\n  // Check if the agent configuration is valid\n  const hasValidAgent =\n    config.agent &&\n    (('id' in config.agent && !!config.agent.id) ||\n      ('provider' in config.agent &&\n        'model' in config.agent &&\n        !!config.agent.provider &&\n        !!config.agent.model));\n\n  // If agent config is invalid, treat as disabled\n  if (!hasValidAgent) {\n    return {\n      ...config,\n      disabled: true,\n    };\n  }\n\n  return config;\n}\n\n/**\n * Checks if memory feature is enabled based on the configuration\n * @param config - The memory configuration\n * @returns True if memory is enabled, false otherwise\n */\nexport function isMemoryEnabled(config: TMemoryConfig | undefined): boolean {\n  if (!config) {\n    return false;\n  }\n\n  if (config.disabled === true) {\n    return false;\n  }\n\n  // Check if agent configuration is valid\n  const hasValidAgent =\n    config.agent &&\n    (('id' in config.agent && !!config.agent.id) ||\n      ('provider' in config.agent &&\n        'model' in config.agent &&\n        !!config.agent.provider &&\n        !!config.agent.model));\n\n  return !!hasValidAgent;\n}\n","import { z } from 'zod';\nimport {\n  Permissions,\n  PermissionTypes,\n  permissionsSchema,\n  agentPermissionsSchema,\n  promptPermissionsSchema,\n  memoryPermissionsSchema,\n  runCodePermissionsSchema,\n  webSearchPermissionsSchema,\n  bookmarkPermissionsSchema,\n  multiConvoPermissionsSchema,\n  temporaryChatPermissionsSchema,\n} from './permissions';\n\n/**\n * Enum for System Defined Roles\n */\nexport enum SystemRoles {\n  /**\n   * The Admin role\n   */\n  ADMIN = 'ADMIN',\n  /**\n   * The default user role\n   */\n  USER = 'USER',\n}\n\n// The role schema now only needs to reference the permissions schema.\nexport const roleSchema = z.object({\n  name: z.string(),\n  permissions: permissionsSchema,\n});\n\nexport type TRole = z.infer<typeof roleSchema>;\n\n// Define default roles using the new structure.\nconst defaultRolesSchema = z.object({\n  [SystemRoles.ADMIN]: roleSchema.extend({\n    name: z.literal(SystemRoles.ADMIN),\n    permissions: permissionsSchema.extend({\n      [PermissionTypes.PROMPTS]: promptPermissionsSchema.extend({\n        [Permissions.SHARED_GLOBAL]: z.boolean().default(true),\n        [Permissions.USE]: z.boolean().default(true),\n        [Permissions.CREATE]: z.boolean().default(true),\n        // [Permissions.SHARE]: z.boolean().default(true),\n      }),\n      [PermissionTypes.BOOKMARKS]: bookmarkPermissionsSchema.extend({\n        [Permissions.USE]: z.boolean().default(true),\n      }),\n      [PermissionTypes.MEMORIES]: memoryPermissionsSchema.extend({\n        [Permissions.USE]: z.boolean().default(true),\n        [Permissions.CREATE]: z.boolean().default(true),\n        [Permissions.UPDATE]: z.boolean().default(true),\n        [Permissions.READ]: z.boolean().default(true),\n        [Permissions.OPT_OUT]: z.boolean().default(true),\n      }),\n      [PermissionTypes.AGENTS]: agentPermissionsSchema.extend({\n        [Permissions.SHARED_GLOBAL]: z.boolean().default(true),\n        [Permissions.USE]: z.boolean().default(true),\n        [Permissions.CREATE]: z.boolean().default(true),\n        // [Permissions.SHARE]: z.boolean().default(true),\n      }),\n      [PermissionTypes.MULTI_CONVO]: multiConvoPermissionsSchema.extend({\n        [Permissions.USE]: z.boolean().default(true),\n      }),\n      [PermissionTypes.TEMPORARY_CHAT]: temporaryChatPermissionsSchema.extend({\n        [Permissions.USE]: z.boolean().default(true),\n      }),\n      [PermissionTypes.RUN_CODE]: runCodePermissionsSchema.extend({\n        [Permissions.USE]: z.boolean().default(true),\n      }),\n      [PermissionTypes.WEB_SEARCH]: webSearchPermissionsSchema.extend({\n        [Permissions.USE]: z.boolean().default(true),\n      }),\n    }),\n  }),\n  [SystemRoles.USER]: roleSchema.extend({\n    name: z.literal(SystemRoles.USER),\n    permissions: permissionsSchema,\n  }),\n});\n\nexport const roleDefaults = defaultRolesSchema.parse({\n  [SystemRoles.ADMIN]: {\n    name: SystemRoles.ADMIN,\n    permissions: {\n      [PermissionTypes.PROMPTS]: {\n        [Permissions.SHARED_GLOBAL]: true,\n        [Permissions.USE]: true,\n        [Permissions.CREATE]: true,\n      },\n      [PermissionTypes.BOOKMARKS]: {\n        [Permissions.USE]: true,\n      },\n      [PermissionTypes.MEMORIES]: {\n        [Permissions.USE]: true,\n        [Permissions.CREATE]: true,\n        [Permissions.UPDATE]: true,\n        [Permissions.READ]: true,\n        [Permissions.OPT_OUT]: true,\n      },\n      [PermissionTypes.AGENTS]: {\n        [Permissions.SHARED_GLOBAL]: true,\n        [Permissions.USE]: true,\n        [Permissions.CREATE]: true,\n      },\n      [PermissionTypes.MULTI_CONVO]: {\n        [Permissions.USE]: true,\n      },\n      [PermissionTypes.TEMPORARY_CHAT]: {\n        [Permissions.USE]: true,\n      },\n      [PermissionTypes.RUN_CODE]: {\n        [Permissions.USE]: true,\n      },\n      [PermissionTypes.WEB_SEARCH]: {\n        [Permissions.USE]: true,\n      },\n    },\n  },\n  [SystemRoles.USER]: {\n    name: SystemRoles.USER,\n    permissions: {\n      [PermissionTypes.PROMPTS]: {},\n      [PermissionTypes.BOOKMARKS]: {},\n      [PermissionTypes.MEMORIES]: {},\n      [PermissionTypes.AGENTS]: {},\n      [PermissionTypes.MULTI_CONVO]: {},\n      [PermissionTypes.TEMPORARY_CHAT]: {},\n      [PermissionTypes.RUN_CODE]: {},\n      [PermissionTypes.WEB_SEARCH]: {},\n    },\n  },\n});\n","import type { Logger as WinstonLogger } from 'winston';\nimport type { RunnableConfig } from '@langchain/core/runnables';\n\nexport type SearchRefType = 'search' | 'image' | 'news' | 'video' | 'ref';\n\nexport enum DATE_RANGE {\n  PAST_HOUR = 'h',\n  PAST_24_HOURS = 'd',\n  PAST_WEEK = 'w',\n  PAST_MONTH = 'm',\n  PAST_YEAR = 'y',\n}\n\nexport type SearchProvider = 'serper' | 'searxng';\nexport type RerankerType = 'infinity' | 'jina' | 'cohere' | 'none';\n\nexport interface Highlight {\n  score: number;\n  text: string;\n  references?: UsedReferences;\n}\n\nexport type ProcessedSource = {\n  content?: string;\n  attribution?: string;\n  references?: References;\n  highlights?: Highlight[];\n  processed?: boolean;\n};\n\nexport type ProcessedOrganic = OrganicResult & ProcessedSource;\nexport type ProcessedTopStory = TopStoryResult & ProcessedSource;\nexport type ValidSource = ProcessedOrganic | ProcessedTopStory;\n\nexport type ResultReference = {\n  link: string;\n  type: 'link' | 'image' | 'video';\n  title?: string;\n  attribution?: string;\n};\nexport interface SearchResultData {\n  turn?: number;\n  organic?: ProcessedOrganic[];\n  topStories?: ProcessedTopStory[];\n  images?: ImageResult[];\n  videos?: VideoResult[];\n  places?: PlaceResult[];\n  news?: NewsResult[];\n  shopping?: ShoppingResult[];\n  knowledgeGraph?: KnowledgeGraphResult;\n  answerBox?: AnswerBoxResult;\n  peopleAlsoAsk?: PeopleAlsoAskResult[];\n  relatedSearches?: Array<{ query: string }>;\n  references?: ResultReference[];\n  error?: string;\n}\n\nexport interface SearchResult {\n  data?: SearchResultData;\n  error?: string;\n  success: boolean;\n}\n\nexport interface Source {\n  link: string;\n  html?: string;\n  title?: string;\n  snippet?: string;\n  date?: string;\n}\n\nexport interface SearchConfig {\n  searchProvider?: SearchProvider;\n  serperApiKey?: string;\n  searxngInstanceUrl?: string;\n  searxngApiKey?: string;\n}\n\nexport type References = {\n  links: MediaReference[];\n  images: MediaReference[];\n  videos: MediaReference[];\n};\nexport interface ScrapeResult {\n  url: string;\n  error?: boolean;\n  content: string;\n  attribution?: string;\n  references?: References;\n  highlights?: Highlight[];\n}\n\nexport interface ProcessSourcesConfig {\n  topResults?: number;\n  strategies?: string[];\n  filterContent?: boolean;\n  reranker?: unknown;\n  logger?: Logger;\n}\n\nexport interface FirecrawlConfig {\n  firecrawlApiKey?: string;\n  firecrawlApiUrl?: string;\n  firecrawlFormats?: string[];\n}\n\nexport interface ScraperContentResult {\n  content: string;\n}\n\nexport interface ScraperExtractionResult {\n  no_extraction: ScraperContentResult;\n}\n\nexport interface JinaRerankerResult {\n  index: number;\n  relevance_score: number;\n  document?: string | { text: string };\n}\n\nexport interface JinaRerankerResponse {\n  model: string;\n  usage: {\n    total_tokens: number;\n  };\n  results: JinaRerankerResult[];\n}\n\nexport interface CohereRerankerResult {\n  index: number;\n  relevance_score: number;\n}\n\nexport interface CohereRerankerResponse {\n  results: CohereRerankerResult[];\n  id: string;\n  meta: {\n    api_version: {\n      version: string;\n      is_experimental: boolean;\n    };\n    billed_units: {\n      search_units: number;\n    };\n  };\n}\n\nexport type SafeSearchLevel = 0 | 1 | 2;\n\nexport type Logger = WinstonLogger;\nexport interface SearchToolConfig extends SearchConfig, ProcessSourcesConfig, FirecrawlConfig {\n  logger?: Logger;\n  safeSearch?: SafeSearchLevel;\n  jinaApiKey?: string;\n  cohereApiKey?: string;\n  rerankerType?: RerankerType;\n  onSearchResults?: (results: SearchResult, runnableConfig?: RunnableConfig) => void;\n  onGetHighlights?: (link: string) => void;\n}\nexport interface MediaReference {\n  originalUrl: string;\n  title?: string;\n  text?: string;\n}\n\nexport type UsedReferences = {\n  type: 'link' | 'image' | 'video';\n  originalIndex: number;\n  reference: MediaReference;\n}[];\n\n/** Firecrawl */\n\nexport interface FirecrawlScrapeOptions {\n  formats?: string[];\n  includeTags?: string[];\n  excludeTags?: string[];\n  headers?: Record<string, string>;\n  waitFor?: number;\n  timeout?: number;\n}\n\nexport interface ScrapeMetadata {\n  // Core source information\n  sourceURL?: string;\n  url?: string;\n  scrapeId?: string;\n  statusCode?: number;\n  // Basic metadata\n  title?: string;\n  description?: string;\n  language?: string;\n  favicon?: string;\n  viewport?: string;\n  robots?: string;\n  'theme-color'?: string;\n  // Open Graph metadata\n  'og:url'?: string;\n  'og:title'?: string;\n  'og:description'?: string;\n  'og:type'?: string;\n  'og:image'?: string;\n  'og:image:width'?: string;\n  'og:image:height'?: string;\n  'og:site_name'?: string;\n  ogUrl?: string;\n  ogTitle?: string;\n  ogDescription?: string;\n  ogImage?: string;\n  ogSiteName?: string;\n  // Article metadata\n  'article:author'?: string;\n  'article:published_time'?: string;\n  'article:modified_time'?: string;\n  'article:section'?: string;\n  'article:tag'?: string;\n  'article:publisher'?: string;\n  publishedTime?: string;\n  modifiedTime?: string;\n  // Twitter metadata\n  'twitter:site'?: string | boolean | number | null;\n  'twitter:creator'?: string;\n  'twitter:card'?: string;\n  'twitter:image'?: string;\n  'twitter:dnt'?: string;\n  'twitter:app:name:iphone'?: string;\n  'twitter:app:id:iphone'?: string;\n  'twitter:app:url:iphone'?: string;\n  'twitter:app:name:ipad'?: string;\n  'twitter:app:id:ipad'?: string;\n  'twitter:app:url:ipad'?: string;\n  'twitter:app:name:googleplay'?: string;\n  'twitter:app:id:googleplay'?: string;\n  'twitter:app:url:googleplay'?: string;\n  // Facebook metadata\n  'fb:app_id'?: string;\n  // App links\n  'al:ios:url'?: string;\n  'al:ios:app_name'?: string;\n  'al:ios:app_store_id'?: string;\n  // Allow for additional properties that might be present\n  [key: string]: string | number | boolean | null | undefined;\n}\n\nexport interface FirecrawlScrapeResponse {\n  success: boolean;\n  data?: {\n    markdown?: string;\n    html?: string;\n    rawHtml?: string;\n    screenshot?: string;\n    links?: string[];\n    metadata?: ScrapeMetadata;\n  };\n  error?: string;\n}\n\nexport interface FirecrawlScraperConfig {\n  apiKey?: string;\n  apiUrl?: string;\n  formats?: string[];\n  timeout?: number;\n  logger?: Logger;\n}\n\nexport type GetSourcesParams = {\n  query: string;\n  date?: DATE_RANGE;\n  country?: string;\n  numResults?: number;\n  safeSearch?: SearchToolConfig['safeSearch'];\n  images?: boolean;\n  videos?: boolean;\n  news?: boolean;\n  type?: 'search' | 'images' | 'videos' | 'news';\n};\n\n/** Serper API */\nexport interface VideoResult {\n  title?: string;\n  link?: string;\n  snippet?: string;\n  imageUrl?: string;\n  duration?: string;\n  source?: string;\n  channel?: string;\n  date?: string;\n  position?: number;\n}\n\nexport interface PlaceResult {\n  position?: number;\n  name?: string;\n  address?: string;\n  latitude?: number;\n  longitude?: number;\n  rating?: number;\n  ratingCount?: number;\n  category?: string;\n  identifier?: string;\n}\n\nexport interface NewsResult {\n  title?: string;\n  link?: string;\n  snippet?: string;\n  date?: string;\n  source?: string;\n  imageUrl?: string;\n  position?: number;\n}\n\nexport interface ShoppingResult {\n  title?: string;\n  source?: string;\n  link?: string;\n  price?: string;\n  delivery?: string;\n  imageUrl?: string;\n  rating?: number;\n  ratingCount?: number;\n  offers?: string;\n  productId?: string;\n  position?: number;\n}\n\nexport interface ScholarResult {\n  title?: string;\n  link?: string;\n  publicationInfo?: string;\n  snippet?: string;\n  year?: number;\n  citedBy?: number;\n}\n\nexport interface ImageResult {\n  title?: string;\n  imageUrl?: string;\n  imageWidth?: number;\n  imageHeight?: number;\n  thumbnailUrl?: string;\n  thumbnailWidth?: number;\n  thumbnailHeight?: number;\n  source?: string;\n  domain?: string;\n  link?: string;\n  googleUrl?: string;\n  position?: number;\n}\n\nexport interface SerperSearchPayload extends SerperSearchInput {\n  /**\n   * Search type/vertical\n   * Options: \"search\" (web), \"images\", \"news\", \"places\", \"videos\"\n   */\n  type?: 'search' | 'images' | 'news' | 'places' | 'videos';\n\n  /**\n   * Starting index for search results pagination (used instead of page)\n   */\n  start?: number;\n\n  /**\n   * Filtering for safe search\n   * Options: \"off\", \"moderate\", \"active\"\n   */\n  safe?: 'off' | 'moderate' | 'active';\n}\n\nexport type SerperSearchParameters = Pick<SerperSearchPayload, 'q' | 'type'> & {\n  engine: 'google';\n};\n\nexport interface OrganicResult {\n  position?: number;\n  title?: string;\n  link: string;\n  snippet?: string;\n  date?: string;\n  sitelinks?: Array<{\n    title: string;\n    link: string;\n  }>;\n}\n\nexport interface TopStoryResult {\n  title?: string;\n  link: string;\n  source?: string;\n  date?: string;\n  imageUrl?: string;\n}\nexport interface KnowledgeGraphResult {\n  title?: string;\n  type?: string;\n  imageUrl?: string;\n  description?: string;\n  descriptionSource?: string;\n  descriptionLink?: string;\n  attributes?: Record<string, string>;\n  website?: string;\n}\n\nexport interface AnswerBoxResult {\n  title?: string;\n  snippet?: string;\n  snippetHighlighted?: string[];\n  link?: string;\n  date?: string;\n}\n\nexport interface PeopleAlsoAskResult {\n  question?: string;\n  snippet?: string;\n  title?: string;\n  link?: string;\n}\n\nexport type RelatedSearches = Array<{ query: string }>;\n\nexport interface SerperSearchInput {\n  /**\n   * The search query string\n   */\n  q: string;\n\n  /**\n   * Country code for localized results\n   * Examples: \"us\", \"uk\", \"ca\", \"de\", etc.\n   */\n  gl?: string;\n\n  /**\n   * Interface language\n   * Examples: \"en\", \"fr\", \"de\", etc.\n   */\n  hl?: string;\n\n  /**\n   * Number of results to return (up to 100)\n   */\n  num?: number;\n  /**\n   * Specific location for contextual results\n   * Example: \"New York, NY\"\n   */\n  location?: string;\n\n  /**\n   * Search autocorrection setting\n   */\n  autocorrect?: boolean;\n  page?: number;\n  /**\n   * Date range for search results\n   * Options: \"h\" (past hour), \"d\" (past 24 hours), \"w\" (past week),\n   * \"m\" (past month), \"y\" (past year)\n   * `qdr:${DATE_RANGE}`\n   */\n  tbs?: string;\n}\n\nexport type SerperResultData = {\n  searchParameters: SerperSearchPayload;\n  organic?: OrganicResult[];\n  topStories?: TopStoryResult[];\n  images?: ImageResult[];\n  videos?: VideoResult[];\n  places?: PlaceResult[];\n  news?: NewsResult[];\n  shopping?: ShoppingResult[];\n  peopleAlsoAsk?: PeopleAlsoAskResult[];\n  relatedSearches?: RelatedSearches;\n  knowledgeGraph?: KnowledgeGraphResult;\n  answerBox?: AnswerBoxResult;\n  credits?: number;\n};\n\n/** SearXNG */\n\nexport interface SearxNGSearchPayload {\n  /**\n   * The search query string\n   * Supports syntax specific to different search engines\n   * Example: \"site:github.com SearXNG\"\n   */\n  q: string;\n\n  /**\n   * Comma-separated list of search categories\n   * Example: \"general,images,news\"\n   */\n  categories?: string;\n\n  /**\n   * Comma-separated list of search engines to use\n   * Example: \"google,bing,duckduckgo\"\n   */\n  engines?: string;\n\n  /**\n   * Code of the language for search results\n   * Example: \"en\", \"fr\", \"de\", \"es\"\n   */\n  language?: string;\n\n  /**\n   * Search page number\n   * Default: 1\n   */\n  pageno?: number;\n\n  /**\n   * Time range filter for search results\n   * Options: \"day\", \"month\", \"year\"\n   */\n  time_range?: 'day' | 'month' | 'year';\n\n  /**\n   * Output format of results\n   * Options: \"json\", \"csv\", \"rss\"\n   */\n  format?: 'json' | 'csv' | 'rss';\n\n  /**\n   * Open search results on new tab\n   * Options: `0` (off), `1` (on)\n   */\n  results_on_new_tab?: 0 | 1;\n\n  /**\n   * Proxy image results through SearxNG\n   * Options: true, false\n   */\n  image_proxy?: boolean;\n\n  /**\n   * Service for autocomplete suggestions\n   * Options: \"google\", \"dbpedia\", \"duckduckgo\", \"mwmbl\",\n   *          \"startpage\", \"wikipedia\", \"stract\", \"swisscows\", \"qwant\"\n   */\n  autocomplete?: string;\n\n  /**\n   * Safe search filtering level\n   * Options: \"0\" (off), \"1\" (moderate), \"2\" (strict)\n   */\n  safesearch?: 0 | 1 | 2;\n\n  /**\n   * Theme to use for results page\n   * Default: \"simple\" (other themes may be available per instance)\n   */\n  theme?: string;\n\n  /**\n   * List of enabled plugins\n   * Default: \"Hash_plugin,Self_Information,Tracker_URL_remover,Ahmia_blacklist\"\n   */\n  enabled_plugins?: string;\n\n  /**\n   * List of disabled plugins\n   */\n  disabled_plugins?: string;\n\n  /**\n   * List of enabled engines\n   */\n  enabled_engines?: string;\n\n  /**\n   * List of disabled engines\n   */\n  disabled_engines?: string;\n}\n\nexport interface SearXNGResult {\n  title?: string;\n  url?: string;\n  content?: string;\n  publishedDate?: string;\n  img_src?: string;\n}\n\nexport type ProcessSourcesFields = {\n  result: SearchResult;\n  numElements: number;\n  query: string;\n  news: boolean;\n  proMode: boolean;\n  onGetHighlights: SearchToolConfig['onGetHighlights'];\n};\n","export enum QueryKeys {\n  messages = 'messages',\n  sharedMessages = 'sharedMessages',\n  sharedLinks = 'sharedLinks',\n  allConversations = 'allConversations',\n  archivedConversations = 'archivedConversations',\n  searchConversations = 'searchConversations',\n  conversation = 'conversation',\n  searchEnabled = 'searchEnabled',\n  user = 'user',\n  name = 'name', // user key name\n  models = 'models',\n  balance = 'balance',\n  endpoints = 'endpoints',\n  presets = 'presets',\n  searchResults = 'searchResults',\n  tokenCount = 'tokenCount',\n  availablePlugins = 'availablePlugins',\n  startupConfig = 'startupConfig',\n  assistants = 'assistants',\n  assistant = 'assistant',\n  agents = 'agents',\n  agent = 'agent',\n  endpointsConfigOverride = 'endpointsConfigOverride',\n  files = 'files',\n  fileConfig = 'fileConfig',\n  tools = 'tools',\n  toolAuth = 'toolAuth',\n  toolCalls = 'toolCalls',\n  agentTools = 'agentTools',\n  actions = 'actions',\n  assistantDocs = 'assistantDocs',\n  agentDocs = 'agentDocs',\n  fileDownload = 'fileDownload',\n  voices = 'voices',\n  customConfigSpeech = 'customConfigSpeech',\n  prompts = 'prompts',\n  prompt = 'prompt',\n  promptGroups = 'promptGroups',\n  allPromptGroups = 'allPromptGroups',\n  promptGroup = 'promptGroup',\n  categories = 'categories',\n  randomPrompts = 'randomPrompts',\n  roles = 'roles',\n  conversationTags = 'conversationTags',\n  health = 'health',\n  userTerms = 'userTerms',\n  banner = 'banner',\n  /* Memories */\n  memories = 'memories',\n  /* Brand Mode */\n  brandConfig = 'brandConfig',\n}\n\nexport enum MutationKeys {\n  fileUpload = 'fileUpload',\n  fileDelete = 'fileDelete',\n  updatePreset = 'updatePreset',\n  deletePreset = 'deletePreset',\n  loginUser = 'loginUser',\n  logoutUser = 'logoutUser',\n  refreshToken = 'refreshToken',\n  avatarUpload = 'avatarUpload',\n  speechToText = 'speechToText',\n  textToSpeech = 'textToSpeech',\n  assistantAvatarUpload = 'assistantAvatarUpload',\n  agentAvatarUpload = 'agentAvatarUpload',\n  updateAction = 'updateAction',\n  updateAgentAction = 'updateAgentAction',\n  deleteAction = 'deleteAction',\n  deleteAgentAction = 'deleteAgentAction',\n  revertAgentVersion = 'revertAgentVersion',\n  deleteUser = 'deleteUser',\n  updateRole = 'updateRole',\n  enableTwoFactor = 'enableTwoFactor',\n  verifyTwoFactor = 'verifyTwoFactor',\n  updateMemoryPreferences = 'updateMemoryPreferences',\n}\n","import axios from 'axios';\n\nexport function setAcceptLanguageHeader(value: string): void {\n  axios.defaults.headers.common['Accept-Language'] = value;\n}\n\nexport function setTokenHeader(token: string) {\n  axios.defaults.headers.common['Authorization'] = 'Bearer ' + token;\n}\n","import type { AssistantsEndpoint } from './schemas';\nimport * as q from './types/queries';\n\n// Testing this buildQuery function\nconst buildQuery = (params: Record<string, unknown>): string => {\n  const query = Object.entries(params)\n    .filter(([, value]) => {\n      if (Array.isArray(value)) {\n        return value.length > 0;\n      }\n      return value !== undefined && value !== null && value !== '';\n    })\n    .map(([key, value]) => {\n      if (Array.isArray(value)) {\n        return value.map((v) => `${key}=${encodeURIComponent(v)}`).join('&');\n      }\n      return `${key}=${encodeURIComponent(String(value))}`;\n    })\n    .join('&');\n  return query ? `?${query}` : '';\n};\n\nexport const health = () => '/health';\nexport const user = () => '/api/user';\n\nexport const balance = () => '/api/balance';\n\nexport const userPlugins = () => '/api/user/plugins';\n\nexport const deleteUser = () => '/api/user/delete';\n\nexport const messages = (params: q.MessagesListParams) => {\n  const { conversationId, messageId, ...rest } = params;\n\n  if (conversationId && messageId) {\n    return `/api/messages/${conversationId}/${messageId}`;\n  }\n\n  if (conversationId) {\n    return `/api/messages/${conversationId}`;\n  }\n\n  return `/api/messages${buildQuery(rest)}`;\n};\n\nconst shareRoot = '/api/share';\nexport const shareMessages = (shareId: string) => `${shareRoot}/${shareId}`;\nexport const getSharedLink = (conversationId: string) => `${shareRoot}/link/${conversationId}`;\nexport const getSharedLinks = (\n  pageSize: number,\n  isPublic: boolean,\n  sortBy: 'title' | 'createdAt',\n  sortDirection: 'asc' | 'desc',\n  search?: string,\n  cursor?: string,\n) =>\n  `${shareRoot}?pageSize=${pageSize}&isPublic=${isPublic}&sortBy=${sortBy}&sortDirection=${sortDirection}${\n    search ? `&search=${search}` : ''\n  }${cursor ? `&cursor=${cursor}` : ''}`;\nexport const createSharedLink = (conversationId: string) => `${shareRoot}/${conversationId}`;\nexport const updateSharedLink = (shareId: string) => `${shareRoot}/${shareId}`;\n\nconst keysEndpoint = '/api/keys';\n\nexport const keys = () => keysEndpoint;\n\nexport const userKeyQuery = (name: string) => `${keysEndpoint}?name=${name}`;\n\nexport const revokeUserKey = (name: string) => `${keysEndpoint}/${name}`;\n\nexport const revokeAllUserKeys = () => `${keysEndpoint}?all=true`;\n\nexport const conversationsRoot = '/api/convos';\n\nexport const conversations = (params: q.ConversationListParams) => {\n  return `${conversationsRoot}${buildQuery(params)}`;\n};\n\nexport const conversationById = (id: string) => `${conversationsRoot}/${id}`;\n\nexport const genTitle = () => `${conversationsRoot}/gen_title`;\n\nexport const updateConversation = () => `${conversationsRoot}/update`;\n\nexport const deleteConversation = () => `${conversationsRoot}`;\n\nexport const deleteAllConversation = () => `${conversationsRoot}/all`;\n\nexport const importConversation = () => `${conversationsRoot}/import`;\n\nexport const forkConversation = () => `${conversationsRoot}/fork`;\n\nexport const duplicateConversation = () => `${conversationsRoot}/duplicate`;\n\nexport const search = (q: string, cursor?: string | null) =>\n  `/api/search?q=${q}${cursor ? `&cursor=${cursor}` : ''}`;\n\nexport const searchEnabled = () => '/api/search/enable';\n\nexport const presets = () => '/api/presets';\n\nexport const deletePreset = () => '/api/presets/delete';\n\nexport const aiEndpoints = () => '/api/endpoints';\n\nexport const endpointsConfigOverride = () => '/api/endpoints/config/override';\n\nexport const models = () => '/api/models';\n\nexport const tokenizer = () => '/api/tokenizer';\n\nexport const login = () => '/api/auth/login';\n\nexport const logout = () => '/api/auth/logout';\n\nexport const register = () => '/api/auth/register';\n\nexport const loginFacebook = () => '/api/auth/facebook';\n\nexport const loginGoogle = () => '/api/auth/google';\n\nexport const refreshToken = (retry?: boolean) =>\n  `/api/auth/refresh${retry === true ? '?retry=true' : ''}`;\n\nexport const requestPasswordReset = () => '/api/auth/requestPasswordReset';\n\nexport const resetPassword = () => '/api/auth/resetPassword';\n\nexport const verifyEmail = () => '/api/user/verify';\n\nexport const resendVerificationEmail = () => '/api/user/verify/resend';\n\nexport const plugins = () => '/api/plugins';\n\nexport const config = () => '/api/config';\n\nexport const prompts = () => '/api/prompts';\n\nexport const assistants = ({\n  path = '',\n  options,\n  version,\n  endpoint,\n  isAvatar,\n}: {\n  path?: string;\n  options?: object;\n  endpoint?: AssistantsEndpoint;\n  version: number | string;\n  isAvatar?: boolean;\n}) => {\n  let url = isAvatar === true ? `${images()}/assistants` : `/api/assistants/v${version}`;\n\n  if (path && path !== '') {\n    url += `/${path}`;\n  }\n\n  if (endpoint) {\n    options = {\n      ...(options ?? {}),\n      endpoint,\n    };\n  }\n\n  if (options && Object.keys(options).length > 0) {\n    const queryParams = new URLSearchParams(options as Record<string, string>).toString();\n    url += `?${queryParams}`;\n  }\n\n  return url;\n};\n\nexport const agents = ({ path = '', options }: { path?: string; options?: object }) => {\n  let url = '/api/agents';\n\n  if (path && path !== '') {\n    url += `/${path}`;\n  }\n\n  if (options && Object.keys(options).length > 0) {\n    const queryParams = new URLSearchParams(options as Record<string, string>).toString();\n    url += `?${queryParams}`;\n  }\n\n  return url;\n};\n\nexport const revertAgentVersion = (agent_id: string) => `${agents({ path: `${agent_id}/revert` })}`;\n\nexport const files = () => '/api/files';\n\nexport const images = () => `${files()}/images`;\n\nexport const avatar = () => `${images()}/avatar`;\n\nexport const speech = () => `${files()}/speech`;\n\nexport const speechToText = () => `${speech()}/stt`;\n\nexport const textToSpeech = () => `${speech()}/tts`;\n\nexport const textToSpeechManual = () => `${textToSpeech()}/manual`;\n\nexport const textToSpeechVoices = () => `${textToSpeech()}/voices`;\n\nexport const getCustomConfigSpeech = () => `${speech()}/config/get`;\n\nexport const getPromptGroup = (_id: string) => `${prompts()}/groups/${_id}`;\n\nexport const getPromptGroupsWithFilters = (filter: object) => {\n  let url = `${prompts()}/groups`;\n  if (Object.keys(filter).length > 0) {\n    const queryParams = new URLSearchParams(filter as Record<string, string>).toString();\n    url += `?${queryParams}`;\n  }\n  return url;\n};\n\nexport const getPromptsWithFilters = (filter: object) => {\n  let url = prompts();\n  if (Object.keys(filter).length > 0) {\n    const queryParams = new URLSearchParams(filter as Record<string, string>).toString();\n    url += `?${queryParams}`;\n  }\n  return url;\n};\n\nexport const getPrompt = (_id: string) => `${prompts()}/${_id}`;\n\nexport const getRandomPrompts = (limit: number, skip: number) =>\n  `${prompts()}/random?limit=${limit}&skip=${skip}`;\n\nexport const postPrompt = prompts;\n\nexport const updatePromptGroup = getPromptGroup;\n\nexport const updatePromptLabels = (_id: string) => `${getPrompt(_id)}/labels`;\n\nexport const updatePromptTag = (_id: string) => `${getPrompt(_id)}/tags/production`;\n\nexport const deletePromptGroup = getPromptGroup;\n\nexport const deletePrompt = ({ _id, groupId }: { _id: string; groupId: string }) => {\n  return `${prompts()}/${_id}?groupId=${groupId}`;\n};\n\nexport const getCategories = () => '/api/categories';\n\nexport const getAllPromptGroups = () => `${prompts()}/all`;\n\n/* Roles */\nexport const roles = () => '/api/roles';\nexport const getRole = (roleName: string) => `${roles()}/${roleName.toLowerCase()}`;\nexport const updatePromptPermissions = (roleName: string) => `${getRole(roleName)}/prompts`;\nexport const updateMemoryPermissions = (roleName: string) => `${getRole(roleName)}/memories`;\nexport const updateAgentPermissions = (roleName: string) => `${getRole(roleName)}/agents`;\n\n/* Conversation Tags */\nexport const conversationTags = (tag?: string) =>\n  `/api/tags${tag != null && tag ? `/${encodeURIComponent(tag)}` : ''}`;\n\nexport const conversationTagsList = (pageNumber: string, sort?: string, order?: string) =>\n  `${conversationTags()}/list?pageNumber=${pageNumber}${sort ? `&sort=${sort}` : ''}${\n    order ? `&order=${order}` : ''\n  }`;\n\nexport const addTagToConversation = (conversationId: string) =>\n  `${conversationTags()}/convo/${conversationId}`;\n\nexport const userTerms = () => '/api/user/terms';\nexport const acceptUserTerms = () => '/api/user/terms/accept';\nexport const banner = () => '/api/banner';\n\n// Message Feedback\nexport const feedback = (conversationId: string, messageId: string) =>\n  `/api/messages/${conversationId}/${messageId}/feedback`;\n\n// Two-Factor Endpoints\nexport const enableTwoFactor = () => '/api/auth/2fa/enable';\nexport const verifyTwoFactor = () => '/api/auth/2fa/verify';\nexport const confirmTwoFactor = () => '/api/auth/2fa/confirm';\nexport const disableTwoFactor = () => '/api/auth/2fa/disable';\nexport const regenerateBackupCodes = () => '/api/auth/2fa/backup/regenerate';\nexport const verifyTwoFactorTemp = () => '/api/auth/2fa/verify-temp';\n\n/* Memories */\nexport const memories = () => '/api/memories';\nexport const memory = (key: string) => `${memories()}/${encodeURIComponent(key)}`;\nexport const memoryPreferences = () => `${memories()}/preferences`;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport axios, { AxiosError, AxiosRequestConfig } from 'axios';\nimport * as endpoints from './api-endpoints';\nimport { setTokenHeader } from './headers-helpers';\nimport type * as t from './types';\n\nasync function _get<T>(url: string, options?: AxiosRequestConfig): Promise<T> {\n  const response = await axios.get(url, { ...options });\n  return response.data;\n}\n\nasync function _getResponse<T>(url: string, options?: AxiosRequestConfig): Promise<T> {\n  return await axios.get(url, { ...options });\n}\n\nasync function _post(url: string, data?: any) {\n  const response = await axios.post(url, JSON.stringify(data), {\n    headers: { 'Content-Type': 'application/json' },\n  });\n  return response.data;\n}\n\nasync function _postMultiPart(url: string, formData: FormData, options?: AxiosRequestConfig) {\n  const response = await axios.post(url, formData, {\n    ...options,\n    headers: { 'Content-Type': 'multipart/form-data' },\n  });\n  return response.data;\n}\n\nasync function _postTTS(url: string, formData: FormData, options?: AxiosRequestConfig) {\n  const response = await axios.post(url, formData, {\n    ...options,\n    headers: { 'Content-Type': 'multipart/form-data' },\n    responseType: 'arraybuffer',\n  });\n  return response.data;\n}\n\nasync function _put(url: string, data?: any) {\n  const response = await axios.put(url, JSON.stringify(data), {\n    headers: { 'Content-Type': 'application/json' },\n  });\n  return response.data;\n}\n\nasync function _delete<T>(url: string): Promise<T> {\n  const response = await axios.delete(url);\n  return response.data;\n}\n\nasync function _deleteWithOptions<T>(url: string, options?: AxiosRequestConfig): Promise<T> {\n  const response = await axios.delete(url, { ...options });\n  return response.data;\n}\n\nasync function _patch(url: string, data?: any) {\n  const response = await axios.patch(url, JSON.stringify(data), {\n    headers: { 'Content-Type': 'application/json' },\n  });\n  return response.data;\n}\n\nlet isRefreshing = false;\nlet failedQueue: { resolve: (value?: any) => void; reject: (reason?: any) => void }[] = [];\n\nconst refreshToken = (retry?: boolean): Promise<t.TRefreshTokenResponse | undefined> =>\n  _post(endpoints.refreshToken(retry));\n\nconst dispatchTokenUpdatedEvent = (token: string) => {\n  setTokenHeader(token);\n  window.dispatchEvent(new CustomEvent('tokenUpdated', { detail: token }));\n};\n\nconst processQueue = (error: AxiosError | null, token: string | null = null) => {\n  failedQueue.forEach((prom) => {\n    if (error) {\n      prom.reject(error);\n    } else {\n      prom.resolve(token);\n    }\n  });\n  failedQueue = [];\n};\n\naxios.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    const originalRequest = error.config;\n    if (!error.response) {\n      return Promise.reject(error);\n    }\n\n    if (originalRequest.url?.includes('/api/auth/2fa') === true) {\n      return Promise.reject(error);\n    }\n    if (originalRequest.url?.includes('/api/auth/logout') === true) {\n      return Promise.reject(error);\n    }\n\n    if (error.response.status === 401 && !originalRequest._retry) {\n      console.warn('401 error, refreshing token');\n      originalRequest._retry = true;\n\n      if (isRefreshing) {\n        try {\n          const token = await new Promise((resolve, reject) => {\n            failedQueue.push({ resolve, reject });\n          });\n          originalRequest.headers['Authorization'] = 'Bearer ' + token;\n          return await axios(originalRequest);\n        } catch (err) {\n          return Promise.reject(err);\n        }\n      }\n\n      isRefreshing = true;\n\n      try {\n        const response = await refreshToken(\n          // Handle edge case where we get a blank screen if the initial 401 error is from a refresh token request\n          originalRequest.url?.includes('api/auth/refresh') === true ? true : false,\n        );\n\n        const token = response?.token ?? '';\n\n        if (token) {\n          originalRequest.headers['Authorization'] = 'Bearer ' + token;\n          dispatchTokenUpdatedEvent(token);\n          processQueue(null, token);\n          return await axios(originalRequest);\n        } else if (window.location.href.includes('share/')) {\n          console.log(\n            `Refresh token failed from shared link, attempting request to ${originalRequest.url}`,\n          );\n        } else {\n          window.location.href = '/login';\n        }\n      } catch (err) {\n        processQueue(err as AxiosError, null);\n        return Promise.reject(err);\n      } finally {\n        isRefreshing = false;\n      }\n    }\n\n    return Promise.reject(error);\n  },\n);\n\nexport default {\n  get: _get,\n  getResponse: _getResponse,\n  post: _post,\n  postMultiPart: _postMultiPart,\n  postTTS: _postTTS,\n  put: _put,\n  delete: _delete,\n  deleteWithOptions: _deleteWithOptions,\n  patch: _patch,\n  refreshToken,\n  dispatchTokenUpdatedEvent,\n};\n","import type { AxiosResponse } from 'axios';\nimport type * as t from './types';\nimport * as endpoints from './api-endpoints';\nimport * as a from './types/assistants';\nimport * as ag from './types/agents';\nimport * as m from './types/mutations';\nimport * as q from './types/queries';\nimport * as f from './types/files';\nimport * as config from './config';\nimport request from './request';\nimport * as s from './schemas';\nimport * as r from './roles';\n\nexport function revokeUserKey(name: string): Promise<unknown> {\n  return request.delete(endpoints.revokeUserKey(name));\n}\n\nexport function revokeAllUserKeys(): Promise<unknown> {\n  return request.delete(endpoints.revokeAllUserKeys());\n}\n\nexport function deleteUser(): Promise<s.TPreset> {\n  return request.delete(endpoints.deleteUser());\n}\n\nexport function getSharedMessages(shareId: string): Promise<t.TSharedMessagesResponse> {\n  return request.get(endpoints.shareMessages(shareId));\n}\n\nexport const listSharedLinks = async (\n  params: q.SharedLinksListParams,\n): Promise<q.SharedLinksResponse> => {\n  const { pageSize, isPublic, sortBy, sortDirection, search, cursor } = params;\n\n  return request.get(\n    endpoints.getSharedLinks(pageSize, isPublic, sortBy, sortDirection, search, cursor),\n  );\n};\n\nexport function getSharedLink(conversationId: string): Promise<t.TSharedLinkGetResponse> {\n  return request.get(endpoints.getSharedLink(conversationId));\n}\n\nexport function createSharedLink(conversationId: string): Promise<t.TSharedLinkResponse> {\n  return request.post(endpoints.createSharedLink(conversationId));\n}\n\nexport function updateSharedLink(shareId: string): Promise<t.TSharedLinkResponse> {\n  return request.patch(endpoints.updateSharedLink(shareId));\n}\n\nexport function deleteSharedLink(shareId: string): Promise<m.TDeleteSharedLinkResponse> {\n  return request.delete(endpoints.shareMessages(shareId));\n}\n\nexport function updateUserKey(payload: t.TUpdateUserKeyRequest) {\n  const { value } = payload;\n  if (!value) {\n    throw new Error('value is required');\n  }\n\n  return request.put(endpoints.keys(), payload);\n}\n\nexport function getPresets(): Promise<s.TPreset[]> {\n  return request.get(endpoints.presets());\n}\n\nexport function createPreset(payload: s.TPreset): Promise<s.TPreset> {\n  return request.post(endpoints.presets(), payload);\n}\n\nexport function updatePreset(payload: s.TPreset): Promise<s.TPreset> {\n  return request.post(endpoints.presets(), payload);\n}\n\nexport function deletePreset(arg: s.TPreset | undefined): Promise<m.PresetDeleteResponse> {\n  return request.post(endpoints.deletePreset(), arg);\n}\n\nexport function getSearchEnabled(): Promise<boolean> {\n  return request.get(endpoints.searchEnabled());\n}\n\nexport function getUser(): Promise<t.TUser> {\n  return request.get(endpoints.user());\n}\n\nexport function getUserBalance(): Promise<t.TBalanceResponse> {\n  return request.get(endpoints.balance());\n}\n\nexport const updateTokenCount = (text: string) => {\n  return request.post(endpoints.tokenizer(), { arg: text });\n};\n\nexport const login = (payload: t.TLoginUser): Promise<t.TLoginResponse> => {\n  return request.post(endpoints.login(), payload);\n};\n\nexport const logout = (): Promise<m.TLogoutResponse> => {\n  return request.post(endpoints.logout());\n};\n\nexport const register = (payload: t.TRegisterUser) => {\n  return request.post(endpoints.register(), payload);\n};\n\nexport const userKeyQuery = (name: string): Promise<t.TCheckUserKeyResponse> =>\n  request.get(endpoints.userKeyQuery(name));\n\nexport const getLoginGoogle = () => {\n  return request.get(endpoints.loginGoogle());\n};\n\nexport const requestPasswordReset = (\n  payload: t.TRequestPasswordReset,\n): Promise<t.TRequestPasswordResetResponse> => {\n  return request.post(endpoints.requestPasswordReset(), payload);\n};\n\nexport const resetPassword = (payload: t.TResetPassword) => {\n  return request.post(endpoints.resetPassword(), payload);\n};\n\nexport const verifyEmail = (payload: t.TVerifyEmail): Promise<t.VerifyEmailResponse> => {\n  return request.post(endpoints.verifyEmail(), payload);\n};\n\nexport const resendVerificationEmail = (\n  payload: t.TResendVerificationEmail,\n): Promise<t.VerifyEmailResponse> => {\n  return request.post(endpoints.resendVerificationEmail(), payload);\n};\n\nexport const getAvailablePlugins = (): Promise<s.TPlugin[]> => {\n  return request.get(endpoints.plugins());\n};\n\nexport const updateUserPlugins = (payload: t.TUpdateUserPlugins) => {\n  return request.post(endpoints.userPlugins(), payload);\n};\n\n/* Config */\n\nexport const getStartupConfig = (): Promise<\n  config.TStartupConfig & {\n    mcpCustomUserVars?: Record<string, { title: string; description: string }>;\n  }\n> => {\n  return request.get(endpoints.config());\n};\n\nexport const getAIEndpoints = (): Promise<t.TEndpointsConfig> => {\n  return request.get(endpoints.aiEndpoints());\n};\n\nexport const getModels = async (): Promise<t.TModelsConfig> => {\n  return request.get(endpoints.models());\n};\n\nexport const getEndpointsConfigOverride = (): Promise<unknown | boolean> => {\n  return request.get(endpoints.endpointsConfigOverride());\n};\n\n/* Assistants */\n\nexport const createAssistant = ({\n  version,\n  ...data\n}: a.AssistantCreateParams): Promise<a.Assistant> => {\n  return request.post(endpoints.assistants({ version }), data);\n};\n\nexport const getAssistantById = ({\n  endpoint,\n  assistant_id,\n  version,\n}: {\n  endpoint: s.AssistantsEndpoint;\n  assistant_id: string;\n  version: number | string | number;\n}): Promise<a.Assistant> => {\n  return request.get(\n    endpoints.assistants({\n      path: assistant_id,\n      endpoint,\n      version,\n    }),\n  );\n};\n\nexport const updateAssistant = ({\n  assistant_id,\n  data,\n  version,\n}: {\n  assistant_id: string;\n  data: a.AssistantUpdateParams;\n  version: number | string;\n}): Promise<a.Assistant> => {\n  return request.patch(\n    endpoints.assistants({\n      path: assistant_id,\n      version,\n    }),\n    data,\n  );\n};\n\nexport const deleteAssistant = ({\n  assistant_id,\n  model,\n  endpoint,\n  version,\n}: m.DeleteAssistantBody & { version: number | string }): Promise<void> => {\n  return request.delete(\n    endpoints.assistants({\n      path: assistant_id,\n      options: { model, endpoint },\n      version,\n    }),\n  );\n};\n\nexport const listAssistants = (\n  params: a.AssistantListParams,\n  version: number | string,\n): Promise<a.AssistantListResponse> => {\n  return request.get(\n    endpoints.assistants({\n      version,\n      options: params,\n    }),\n  );\n};\n\nexport function getAssistantDocs({\n  endpoint,\n  version,\n}: {\n  endpoint: s.AssistantsEndpoint | string;\n  version: number | string;\n}): Promise<a.AssistantDocument[]> {\n  if (!s.isAssistantsEndpoint(endpoint)) {\n    return Promise.resolve([]);\n  }\n  return request.get(\n    endpoints.assistants({\n      path: 'documents',\n      version,\n      options: { endpoint },\n      endpoint: endpoint as s.AssistantsEndpoint,\n    }),\n  );\n}\n\n/* Tools */\n\nexport const getAvailableTools = (\n  _endpoint: s.AssistantsEndpoint | s.EModelEndpoint.agents,\n  version?: number | string,\n): Promise<s.TPlugin[]> => {\n  let path = '';\n  if (s.isAssistantsEndpoint(_endpoint)) {\n    const endpoint = _endpoint as s.AssistantsEndpoint;\n    path = endpoints.assistants({\n      path: 'tools',\n      endpoint: endpoint,\n      version: version ?? config.defaultAssistantsVersion[endpoint],\n    });\n  } else {\n    path = endpoints.agents({\n      path: 'tools',\n    });\n  }\n\n  return request.get(path);\n};\n\nexport const getVerifyAgentToolAuth = (\n  params: q.VerifyToolAuthParams,\n): Promise<q.VerifyToolAuthResponse> => {\n  return request.get(\n    endpoints.agents({\n      path: `tools/${params.toolId}/auth`,\n    }),\n  );\n};\n\nexport const callTool = <T extends m.ToolId>({\n  toolId,\n  toolParams,\n}: {\n  toolId: T;\n  toolParams: m.ToolParams<T>;\n}): Promise<m.ToolCallResponse> => {\n  return request.post(\n    endpoints.agents({\n      path: `tools/${toolId}/call`,\n    }),\n    toolParams,\n  );\n};\n\nexport const getToolCalls = (params: q.GetToolCallParams): Promise<q.ToolCallResults> => {\n  return request.get(\n    endpoints.agents({\n      path: 'tools/calls',\n      options: params,\n    }),\n  );\n};\n\n/* Files */\n\nexport const getFiles = (): Promise<f.TFile[]> => {\n  return request.get(endpoints.files());\n};\n\nexport const getFileConfig = (): Promise<f.FileConfig> => {\n  return request.get(`${endpoints.files()}/config`);\n};\n\nexport const uploadImage = (\n  data: FormData,\n  signal?: AbortSignal | null,\n): Promise<f.TFileUpload> => {\n  const requestConfig = signal ? { signal } : undefined;\n  return request.postMultiPart(endpoints.images(), data, requestConfig);\n};\n\nexport const uploadFile = (data: FormData, signal?: AbortSignal | null): Promise<f.TFileUpload> => {\n  const requestConfig = signal ? { signal } : undefined;\n  return request.postMultiPart(endpoints.files(), data, requestConfig);\n};\n\n/* actions */\n\nexport const updateAction = (data: m.UpdateActionVariables): Promise<m.UpdateActionResponse> => {\n  const { assistant_id, version, ...body } = data;\n  return request.post(\n    endpoints.assistants({\n      path: `actions/${assistant_id}`,\n      version,\n    }),\n    body,\n  );\n};\n\nexport function getActions(): Promise<ag.Action[]> {\n  return request.get(\n    endpoints.agents({\n      path: 'actions',\n    }),\n  );\n}\n\nexport const deleteAction = async ({\n  assistant_id,\n  action_id,\n  model,\n  version,\n  endpoint,\n}: m.DeleteActionVariables & { version: number | string }): Promise<void> =>\n  request.delete(\n    endpoints.assistants({\n      path: `actions/${assistant_id}/${action_id}/${model}`,\n      version,\n      endpoint,\n    }),\n  );\n\n/**\n * Agents\n */\n\nexport const createAgent = ({ ...data }: a.AgentCreateParams): Promise<a.Agent> => {\n  return request.post(endpoints.agents({}), data);\n};\n\nexport const getAgentById = ({ agent_id }: { agent_id: string }): Promise<a.Agent> => {\n  return request.get(\n    endpoints.agents({\n      path: agent_id,\n    }),\n  );\n};\n\nexport const updateAgent = ({\n  agent_id,\n  data,\n}: {\n  agent_id: string;\n  data: a.AgentUpdateParams;\n}): Promise<a.Agent> => {\n  return request.patch(\n    endpoints.agents({\n      path: agent_id,\n    }),\n    data,\n  );\n};\n\nexport const duplicateAgent = ({\n  agent_id,\n}: m.DuplicateAgentBody): Promise<{ agent: a.Agent; actions: ag.Action[] }> => {\n  return request.post(\n    endpoints.agents({\n      path: `${agent_id}/duplicate`,\n    }),\n  );\n};\n\nexport const deleteAgent = ({ agent_id }: m.DeleteAgentBody): Promise<void> => {\n  return request.delete(\n    endpoints.agents({\n      path: agent_id,\n    }),\n  );\n};\n\nexport const listAgents = (params: a.AgentListParams): Promise<a.AgentListResponse> => {\n  return request.get(\n    endpoints.agents({\n      options: params,\n    }),\n  );\n};\n\nexport const revertAgentVersion = ({\n  agent_id,\n  version_index,\n}: {\n  agent_id: string;\n  version_index: number;\n}): Promise<a.Agent> => request.post(endpoints.revertAgentVersion(agent_id), { version_index });\n\n/* Tools */\n\nexport const getAvailableAgentTools = (): Promise<s.TPlugin[]> => {\n  return request.get(\n    endpoints.agents({\n      path: 'tools',\n    }),\n  );\n};\n\n/* Actions */\n\nexport const updateAgentAction = (\n  data: m.UpdateAgentActionVariables,\n): Promise<m.UpdateAgentActionResponse> => {\n  const { agent_id, ...body } = data;\n  return request.post(\n    endpoints.agents({\n      path: `actions/${agent_id}`,\n    }),\n    body,\n  );\n};\n\nexport const deleteAgentAction = async ({\n  agent_id,\n  action_id,\n}: m.DeleteAgentActionVariables): Promise<void> =>\n  request.delete(\n    endpoints.agents({\n      path: `actions/${agent_id}/${action_id}`,\n    }),\n  );\n\n/**\n * Imports a conversations file.\n *\n * @param data - The FormData containing the file to import.\n * @returns A Promise that resolves to the import start response.\n */\nexport const importConversationsFile = (data: FormData): Promise<t.TImportResponse> => {\n  return request.postMultiPart(endpoints.importConversation(), data);\n};\n\nexport const uploadAvatar = (data: FormData): Promise<f.AvatarUploadResponse> => {\n  return request.postMultiPart(endpoints.avatar(), data);\n};\n\nexport const uploadAssistantAvatar = (data: m.AssistantAvatarVariables): Promise<a.Assistant> => {\n  return request.postMultiPart(\n    endpoints.assistants({\n      isAvatar: true,\n      path: `${data.assistant_id}/avatar`,\n      options: { model: data.model, endpoint: data.endpoint },\n      version: data.version,\n    }),\n    data.formData,\n  );\n};\n\nexport const uploadAgentAvatar = (data: m.AgentAvatarVariables): Promise<a.Agent> => {\n  return request.postMultiPart(\n    `${endpoints.images()}/agents/${data.agent_id}/avatar`,\n    data.formData,\n  );\n};\n\nexport const getFileDownload = async (userId: string, file_id: string): Promise<AxiosResponse> => {\n  return request.getResponse(`${endpoints.files()}/download/${userId}/${file_id}`, {\n    responseType: 'blob',\n    headers: {\n      Accept: 'application/octet-stream',\n    },\n  });\n};\n\nexport const getCodeOutputDownload = async (url: string): Promise<AxiosResponse> => {\n  return request.getResponse(url, {\n    responseType: 'blob',\n    headers: {\n      Accept: 'application/octet-stream',\n    },\n  });\n};\n\nexport const deleteFiles = async (payload: {\n  files: f.BatchFile[];\n  agent_id?: string;\n  assistant_id?: string;\n  tool_resource?: a.EToolResources;\n}): Promise<f.DeleteFilesResponse> =>\n  request.deleteWithOptions(endpoints.files(), {\n    data: payload,\n  });\n\n/* Speech */\n\nexport const speechToText = (data: FormData): Promise<f.SpeechToTextResponse> => {\n  return request.postMultiPart(endpoints.speechToText(), data);\n};\n\nexport const textToSpeech = (data: FormData): Promise<ArrayBuffer> => {\n  return request.postTTS(endpoints.textToSpeechManual(), data);\n};\n\nexport const getVoices = (): Promise<f.VoiceResponse> => {\n  return request.get(endpoints.textToSpeechVoices());\n};\n\nexport const getCustomConfigSpeech = (): Promise<t.TCustomConfigSpeechResponse> => {\n  return request.get(endpoints.getCustomConfigSpeech());\n};\n\n/* conversations */\n\nexport function duplicateConversation(\n  payload: t.TDuplicateConvoRequest,\n): Promise<t.TDuplicateConvoResponse> {\n  return request.post(endpoints.duplicateConversation(), payload);\n}\n\nexport function forkConversation(payload: t.TForkConvoRequest): Promise<t.TForkConvoResponse> {\n  return request.post(endpoints.forkConversation(), payload);\n}\n\nexport function deleteConversation(payload: t.TDeleteConversationRequest) {\n  return request.deleteWithOptions(endpoints.deleteConversation(), { data: { arg: payload } });\n}\n\nexport function clearAllConversations(): Promise<unknown> {\n  return request.delete(endpoints.deleteAllConversation());\n}\n\nexport const listConversations = (\n  params?: q.ConversationListParams,\n): Promise<q.ConversationListResponse> => {\n  return request.get(endpoints.conversations(params ?? {}));\n};\n\nexport function getConversations(cursor: string): Promise<t.TGetConversationsResponse> {\n  return request.get(endpoints.conversations({ cursor }));\n}\n\nexport function getConversationById(id: string): Promise<s.TConversation> {\n  return request.get(endpoints.conversationById(id));\n}\n\nexport function updateConversation(\n  payload: t.TUpdateConversationRequest,\n): Promise<t.TUpdateConversationResponse> {\n  return request.post(endpoints.updateConversation(), { arg: payload });\n}\n\nexport function archiveConversation(\n  payload: t.TArchiveConversationRequest,\n): Promise<t.TArchiveConversationResponse> {\n  return request.post(endpoints.updateConversation(), { arg: payload });\n}\n\nexport function genTitle(payload: m.TGenTitleRequest): Promise<m.TGenTitleResponse> {\n  return request.post(endpoints.genTitle(), payload);\n}\n\nexport const listMessages = (params?: q.MessagesListParams): Promise<q.MessagesListResponse> => {\n  return request.get(endpoints.messages(params ?? {}));\n};\n\nexport function updateMessage(payload: t.TUpdateMessageRequest): Promise<unknown> {\n  const { conversationId, messageId, text } = payload;\n  if (!conversationId) {\n    throw new Error('conversationId is required');\n  }\n\n  return request.put(endpoints.messages({ conversationId, messageId }), { text });\n}\n\nexport function updateMessageContent(payload: t.TUpdateMessageContent): Promise<unknown> {\n  const { conversationId, messageId, index, text } = payload;\n  if (!conversationId) {\n    throw new Error('conversationId is required');\n  }\n\n  return request.put(endpoints.messages({ conversationId, messageId }), { text, index });\n}\n\nexport const editArtifact = async ({\n  messageId,\n  ...params\n}: m.TEditArtifactRequest): Promise<m.TEditArtifactResponse> => {\n  return request.post(`/api/messages/artifact/${messageId}`, params);\n};\n\nexport function getMessagesByConvoId(conversationId: string): Promise<s.TMessage[]> {\n  if (\n    conversationId === config.Constants.NEW_CONVO ||\n    conversationId === config.Constants.PENDING_CONVO\n  ) {\n    return Promise.resolve([]);\n  }\n  return request.get(endpoints.messages({ conversationId }));\n}\n\nexport function getPrompt(id: string): Promise<{ prompt: t.TPrompt }> {\n  return request.get(endpoints.getPrompt(id));\n}\n\nexport function getPrompts(filter: t.TPromptsWithFilterRequest): Promise<t.TPrompt[]> {\n  return request.get(endpoints.getPromptsWithFilters(filter));\n}\n\nexport function getAllPromptGroups(): Promise<q.AllPromptGroupsResponse> {\n  return request.get(endpoints.getAllPromptGroups());\n}\n\nexport function getPromptGroups(\n  filter: t.TPromptGroupsWithFilterRequest,\n): Promise<t.PromptGroupListResponse> {\n  return request.get(endpoints.getPromptGroupsWithFilters(filter));\n}\n\nexport function getPromptGroup(id: string): Promise<t.TPromptGroup> {\n  return request.get(endpoints.getPromptGroup(id));\n}\n\nexport function createPrompt(payload: t.TCreatePrompt): Promise<t.TCreatePromptResponse> {\n  return request.post(endpoints.postPrompt(), payload);\n}\n\nexport function updatePromptGroup(\n  variables: t.TUpdatePromptGroupVariables,\n): Promise<t.TUpdatePromptGroupResponse> {\n  return request.patch(endpoints.updatePromptGroup(variables.id), variables.payload);\n}\n\nexport function deletePrompt(payload: t.TDeletePromptVariables): Promise<t.TDeletePromptResponse> {\n  return request.delete(endpoints.deletePrompt(payload));\n}\n\nexport function makePromptProduction(id: string): Promise<t.TMakePromptProductionResponse> {\n  return request.patch(endpoints.updatePromptTag(id));\n}\n\nexport function updatePromptLabels(\n  variables: t.TUpdatePromptLabelsRequest,\n): Promise<t.TUpdatePromptLabelsResponse> {\n  return request.patch(endpoints.updatePromptLabels(variables.id), variables.payload);\n}\n\nexport function deletePromptGroup(id: string): Promise<t.TDeletePromptGroupResponse> {\n  return request.delete(endpoints.deletePromptGroup(id));\n}\n\nexport function getCategories(): Promise<t.TGetCategoriesResponse> {\n  return request.get(endpoints.getCategories());\n}\n\nexport function getRandomPrompts(\n  variables: t.TGetRandomPromptsRequest,\n): Promise<t.TGetRandomPromptsResponse> {\n  return request.get(endpoints.getRandomPrompts(variables.limit, variables.skip));\n}\n\n/* Roles */\nexport function getRole(roleName: string): Promise<r.TRole> {\n  return request.get(endpoints.getRole(roleName));\n}\n\nexport function updatePromptPermissions(\n  variables: m.UpdatePromptPermVars,\n): Promise<m.UpdatePermResponse> {\n  return request.put(endpoints.updatePromptPermissions(variables.roleName), variables.updates);\n}\n\nexport function updateAgentPermissions(\n  variables: m.UpdateAgentPermVars,\n): Promise<m.UpdatePermResponse> {\n  return request.put(endpoints.updateAgentPermissions(variables.roleName), variables.updates);\n}\n\nexport function updateMemoryPermissions(\n  variables: m.UpdateMemoryPermVars,\n): Promise<m.UpdatePermResponse> {\n  return request.put(endpoints.updateMemoryPermissions(variables.roleName), variables.updates);\n}\n\n/* Tags */\nexport function getConversationTags(): Promise<t.TConversationTagsResponse> {\n  return request.get(endpoints.conversationTags());\n}\n\nexport function createConversationTag(\n  payload: t.TConversationTagRequest,\n): Promise<t.TConversationTagResponse> {\n  return request.post(endpoints.conversationTags(), payload);\n}\n\nexport function updateConversationTag(\n  tag: string,\n  payload: t.TConversationTagRequest,\n): Promise<t.TConversationTagResponse> {\n  return request.put(endpoints.conversationTags(tag), payload);\n}\nexport function deleteConversationTag(tag: string): Promise<t.TConversationTagResponse> {\n  return request.delete(endpoints.conversationTags(tag));\n}\n\nexport function addTagToConversation(\n  conversationId: string,\n  payload: t.TTagConversationRequest,\n): Promise<t.TTagConversationResponse> {\n  return request.put(endpoints.addTagToConversation(conversationId), payload);\n}\nexport function rebuildConversationTags(): Promise<t.TConversationTagsResponse> {\n  return request.post(endpoints.conversationTags('rebuild'));\n}\n\nexport function healthCheck(): Promise<string> {\n  return request.get(endpoints.health());\n}\n\nexport function getUserTerms(): Promise<t.TUserTermsResponse> {\n  return request.get(endpoints.userTerms());\n}\n\nexport function acceptTerms(): Promise<t.TAcceptTermsResponse> {\n  return request.post(endpoints.acceptUserTerms());\n}\n\nexport function getBanner(): Promise<t.TBannerResponse> {\n  return request.get(endpoints.banner());\n}\n\nexport function updateFeedback(\n  conversationId: string,\n  messageId: string,\n  payload: t.TUpdateFeedbackRequest,\n): Promise<t.TUpdateFeedbackResponse> {\n  return request.put(endpoints.feedback(conversationId, messageId), payload);\n}\n\n// 2FA\nexport function enableTwoFactor(): Promise<t.TEnable2FAResponse> {\n  return request.get(endpoints.enableTwoFactor());\n}\n\nexport function verifyTwoFactor(payload: t.TVerify2FARequest): Promise<t.TVerify2FAResponse> {\n  return request.post(endpoints.verifyTwoFactor(), payload);\n}\n\nexport function confirmTwoFactor(payload: t.TVerify2FARequest): Promise<t.TVerify2FAResponse> {\n  return request.post(endpoints.confirmTwoFactor(), payload);\n}\n\nexport function disableTwoFactor(): Promise<t.TDisable2FAResponse> {\n  return request.post(endpoints.disableTwoFactor());\n}\n\nexport function regenerateBackupCodes(): Promise<t.TRegenerateBackupCodesResponse> {\n  return request.post(endpoints.regenerateBackupCodes());\n}\n\nexport function verifyTwoFactorTemp(\n  payload: t.TVerify2FATempRequest,\n): Promise<t.TVerify2FATempResponse> {\n  return request.post(endpoints.verifyTwoFactorTemp(), payload);\n}\n\n/* Memories */\nexport const getMemories = (): Promise<q.MemoriesResponse> => {\n  return request.get(endpoints.memories());\n};\n\nexport const deleteMemory = (key: string): Promise<void> => {\n  return request.delete(endpoints.memory(key));\n};\n\nexport const updateMemory = (\n  key: string,\n  value: string,\n  originalKey?: string,\n): Promise<q.TUserMemory> => {\n  return request.patch(endpoints.memory(originalKey || key), { key, value });\n};\n\nexport const updateMemoryPreferences = (preferences: {\n  memories: boolean;\n}): Promise<{ updated: boolean; preferences: { memories: boolean } }> => {\n  return request.patch(endpoints.memoryPreferences(), preferences);\n};\n\nexport const createMemory = (data: {\n  key: string;\n  value: string;\n}): Promise<{ created: boolean; memory: q.TUserMemory }> => {\n  return request.post(endpoints.memories(), data);\n};\n","import { z } from 'zod';\nimport _axios from 'axios';\nimport { URL } from 'url';\nimport crypto from 'crypto';\nimport { load } from 'js-yaml';\nimport type { ActionMetadata, ActionMetadataRuntime } from './types/agents';\nimport type { FunctionTool, Schema, Reference } from './types/assistants';\nimport { AuthTypeEnum, AuthorizationTypeEnum } from './types/agents';\nimport type { OpenAPIV3 } from 'openapi-types';\nimport { Tools } from './types/assistants';\n\nexport type ParametersSchema = {\n  type: string;\n  properties: Record<string, Reference | Schema>;\n  required: string[];\n  additionalProperties?: boolean;\n};\n\nexport type OpenAPISchema = OpenAPIV3.SchemaObject &\n  ParametersSchema & {\n    items?: OpenAPIV3.ReferenceObject | OpenAPIV3.SchemaObject;\n  };\n\nexport type ApiKeyCredentials = {\n  api_key: string;\n  custom_auth_header?: string;\n  authorization_type?: AuthorizationTypeEnum;\n};\n\nexport type OAuthCredentials = {\n  tokenUrl: string;\n  clientId: string;\n  clientSecret: string;\n  scope: string;\n};\n\nexport type Credentials = ApiKeyCredentials | OAuthCredentials;\n\ntype MediaTypeObject =\n  | undefined\n  | {\n      [media: string]: OpenAPIV3.MediaTypeObject | undefined;\n    };\n\ntype RequestBodyObject = Omit<OpenAPIV3.RequestBodyObject, 'content'> & {\n  content: MediaTypeObject;\n};\n\nexport function sha1(input: string) {\n  return crypto.createHash('sha1').update(input).digest('hex');\n}\n\nexport function createURL(domain: string, path: string) {\n  const cleanDomain = domain.replace(/\\/$/, '');\n  const cleanPath = path.replace(/^\\//, '');\n  const fullURL = `${cleanDomain}/${cleanPath}`;\n  return new URL(fullURL).toString();\n}\n\nconst schemaTypeHandlers: Record<string, (schema: OpenAPISchema) => z.ZodTypeAny> = {\n  string: (schema) => {\n    if (schema.enum) {\n      return z.enum(schema.enum as [string, ...string[]]);\n    }\n\n    let stringSchema = z.string();\n    if (schema.minLength !== undefined) {\n      stringSchema = stringSchema.min(schema.minLength);\n    }\n    if (schema.maxLength !== undefined) {\n      stringSchema = stringSchema.max(schema.maxLength);\n    }\n    return stringSchema;\n  },\n  number: (schema) => {\n    let numberSchema = z.number();\n    if (schema.minimum !== undefined) {\n      numberSchema = numberSchema.min(schema.minimum);\n    }\n    if (schema.maximum !== undefined) {\n      numberSchema = numberSchema.max(schema.maximum);\n    }\n    return numberSchema;\n  },\n  integer: (schema) => (schemaTypeHandlers.number(schema) as z.ZodNumber).int(),\n  boolean: () => z.boolean(),\n  array: (schema) => {\n    if (schema.items) {\n      const zodSchema = openAPISchemaToZod(schema.items as OpenAPISchema);\n      if (zodSchema) {\n        return z.array(zodSchema);\n      }\n\n      return z.array(z.unknown());\n    }\n    return z.array(z.unknown());\n  },\n  object: (schema) => {\n    const shape: { [key: string]: z.ZodTypeAny } = {};\n    if (schema.properties) {\n      Object.entries(schema.properties).forEach(([key, value]) => {\n        const zodSchema = openAPISchemaToZod(value as OpenAPISchema);\n        shape[key] = zodSchema || z.unknown();\n        if (schema.required && schema.required.includes(key)) {\n          shape[key] = shape[key].describe(value.description || '');\n        } else {\n          shape[key] = shape[key].optional().describe(value.description || '');\n        }\n      });\n    }\n    return z.object(shape);\n  },\n};\n\nfunction openAPISchemaToZod(schema: OpenAPISchema): z.ZodTypeAny | undefined {\n  if (schema.type === 'object' && Object.keys(schema.properties || {}).length === 0) {\n    return undefined;\n  }\n\n  const handler = schemaTypeHandlers[schema.type as string] || (() => z.unknown());\n  return handler(schema);\n}\n\n/**\n * Class representing a function signature.\n */\nexport class FunctionSignature {\n  name: string;\n  description: string;\n  parameters: ParametersSchema;\n  strict: boolean;\n\n  constructor(name: string, description: string, parameters: ParametersSchema, strict?: boolean) {\n    this.name = name;\n    this.description = description;\n    this.parameters = parameters;\n    this.strict = strict ?? false;\n  }\n\n  toObjectTool(): FunctionTool {\n    const parameters = {\n      ...this.parameters,\n      additionalProperties: this.strict ? false : undefined,\n    };\n\n    return {\n      type: Tools.function,\n      function: {\n        name: this.name,\n        description: this.description,\n        parameters,\n        ...(this.strict ? { strict: this.strict } : {}),\n      },\n    };\n  }\n}\n\nclass RequestConfig {\n  constructor(\n    readonly domain: string,\n    readonly basePath: string,\n    readonly method: string,\n    readonly operation: string,\n    readonly isConsequential: boolean,\n    readonly contentType: string,\n    readonly parameterLocations?: Record<string, 'query' | 'path' | 'header' | 'body'>,\n  ) {}\n}\n\nclass RequestExecutor {\n  path: string;\n  params?: Record<string, unknown>;\n  private operationHash?: string;\n  private authHeaders: Record<string, string> = {};\n  private authToken?: string;\n\n  constructor(private config: RequestConfig) {\n    this.path = config.basePath;\n  }\n\n  setParams(params: Record<string, unknown>) {\n    this.operationHash = sha1(JSON.stringify(params));\n    this.params = { ...params } as Record<string, unknown>;\n    if (this.config.parameterLocations) {\n      //Substituting “Path” Parameters:\n      for (const [key, value] of Object.entries(params)) {\n        if (this.config.parameterLocations[key] === 'path') {\n          const paramPattern = `{${key}}`;\n          if (this.path.includes(paramPattern)) {\n            this.path = this.path.replace(paramPattern, encodeURIComponent(String(value)));\n            delete this.params[key];\n          }\n        }\n      }\n    } else {\n      // Fallback: if no locations are defined, perform path substitution for all keys.\n      for (const [key, value] of Object.entries(params)) {\n        const paramPattern = `{${key}}`;\n        if (this.path.includes(paramPattern)) {\n          this.path = this.path.replace(paramPattern, encodeURIComponent(String(value)));\n          delete this.params[key];\n        }\n      }\n    }\n    return this;\n  }\n\n  async setAuth(metadata: ActionMetadataRuntime) {\n    if (!metadata.auth) {\n      return this;\n    }\n\n    const {\n      type,\n      /* API Key */\n      authorization_type,\n      custom_auth_header,\n      /* OAuth */\n      authorization_url,\n      client_url,\n      scope,\n      token_exchange_method,\n    } = metadata.auth;\n\n    const {\n      /* API Key */\n      api_key,\n      /* OAuth */\n      oauth_client_id,\n      oauth_client_secret,\n      oauth_token_expires_at,\n      oauth_access_token = '',\n    } = metadata;\n\n    const isApiKey = api_key != null && api_key.length > 0 && type === AuthTypeEnum.ServiceHttp;\n    const isOAuth = !!(\n      oauth_client_id != null &&\n      oauth_client_id &&\n      oauth_client_secret != null &&\n      oauth_client_secret &&\n      type === AuthTypeEnum.OAuth &&\n      authorization_url != null &&\n      authorization_url &&\n      client_url != null &&\n      client_url &&\n      scope != null &&\n      scope &&\n      token_exchange_method\n    );\n\n    if (isApiKey && authorization_type === AuthorizationTypeEnum.Basic) {\n      const basicToken = Buffer.from(api_key).toString('base64');\n      this.authHeaders['Authorization'] = `Basic ${basicToken}`;\n    } else if (isApiKey && authorization_type === AuthorizationTypeEnum.Bearer) {\n      this.authHeaders['Authorization'] = `Bearer ${api_key}`;\n    } else if (\n      isApiKey &&\n      authorization_type === AuthorizationTypeEnum.Custom &&\n      custom_auth_header != null &&\n      custom_auth_header\n    ) {\n      this.authHeaders[custom_auth_header] = api_key;\n    } else if (isOAuth) {\n      // TODO: maybe doing it in a different way later on. but we want that the user needs to folllow the oauth flow.\n      // If we do not have a valid token, bail or ask user to sign in\n      const now = new Date();\n\n      // 1. Check if token is set\n      if (!oauth_access_token) {\n        throw new Error('No access token found. Please log in first.');\n      }\n\n      // 2. Check if token is expired\n      if (oauth_token_expires_at && now >= new Date(oauth_token_expires_at)) {\n        // Optionally check refresh_token logic, or just prompt user to re-login\n        throw new Error('Access token is expired. Please re-login.');\n      }\n\n      // If valid, use it\n      this.authToken = oauth_access_token;\n      this.authHeaders['Authorization'] = `Bearer ${this.authToken}`;\n    }\n    return this;\n  }\n\n  async execute() {\n    const url = createURL(this.config.domain, this.path);\n    const headers: Record<string, string> = {\n      ...this.authHeaders,\n      ...(this.config.contentType ? { 'Content-Type': this.config.contentType } : {}),\n    };\n    const method = this.config.method.toLowerCase();\n    const axios = _axios.create();\n\n    // Initialize separate containers for query and body parameters.\n    const queryParams: Record<string, unknown> = {};\n    const bodyParams: Record<string, unknown> = {};\n\n    if (this.config.parameterLocations && this.params) {\n      for (const key of Object.keys(this.params)) {\n        // Determine parameter placement; default to \"query\" for GET and \"body\" for others.\n        const loc: 'query' | 'path' | 'header' | 'body' =\n          this.config.parameterLocations[key] || (method === 'get' ? 'query' : 'body');\n\n        const val = this.params[key];\n        if (loc === 'query') {\n          queryParams[key] = val;\n        } else if (loc === 'header') {\n          headers[key] = String(val);\n        } else if (loc === 'body') {\n          bodyParams[key] = val;\n        }\n      }\n    } else if (this.params) {\n      Object.assign(queryParams, this.params);\n      Object.assign(bodyParams, this.params);\n    }\n\n    if (method === 'get') {\n      return axios.get(url, { headers, params: queryParams });\n    } else if (method === 'post') {\n      return axios.post(url, bodyParams, { headers, params: queryParams });\n    } else if (method === 'put') {\n      return axios.put(url, bodyParams, { headers, params: queryParams });\n    } else if (method === 'delete') {\n      return axios.delete(url, { headers, data: bodyParams, params: queryParams });\n    } else if (method === 'patch') {\n      return axios.patch(url, bodyParams, { headers, params: queryParams });\n    } else {\n      throw new Error(`Unsupported HTTP method: ${method}`);\n    }\n  }\n\n  getConfig() {\n    return this.config;\n  }\n}\n\nexport class ActionRequest {\n  private config: RequestConfig;\n\n  constructor(\n    domain: string,\n    path: string,\n    method: string,\n    operation: string,\n    isConsequential: boolean,\n    contentType: string,\n    parameterLocations?: Record<string, 'query' | 'path' | 'header' | 'body'>,\n  ) {\n    this.config = new RequestConfig(\n      domain,\n      path,\n      method,\n      operation,\n      isConsequential,\n      contentType,\n      parameterLocations,\n    );\n  }\n\n  // Add getters to maintain backward compatibility\n  get domain() {\n    return this.config.domain;\n  }\n  get path() {\n    return this.config.basePath;\n  }\n  get method() {\n    return this.config.method;\n  }\n  get operation() {\n    return this.config.operation;\n  }\n  get isConsequential() {\n    return this.config.isConsequential;\n  }\n  get contentType() {\n    return this.config.contentType;\n  }\n\n  createExecutor() {\n    return new RequestExecutor(this.config);\n  }\n\n  // Maintain backward compatibility by delegating to a new executor\n  setParams(params: Record<string, unknown>) {\n    const executor = this.createExecutor();\n    executor.setParams(params);\n    return executor;\n  }\n\n  async setAuth(metadata: ActionMetadata) {\n    const executor = this.createExecutor();\n    return executor.setAuth(metadata);\n  }\n\n  async execute() {\n    const executor = this.createExecutor();\n    return executor.execute();\n  }\n}\n\nexport function resolveRef<\n  T extends\n    | OpenAPIV3.ReferenceObject\n    | OpenAPIV3.SchemaObject\n    | OpenAPIV3.ParameterObject\n    | OpenAPIV3.RequestBodyObject,\n>(obj: T, components?: OpenAPIV3.ComponentsObject): Exclude<T, OpenAPIV3.ReferenceObject> {\n  if ('$ref' in obj && components) {\n    const refPath = obj.$ref.replace(/^#\\/components\\//, '').split('/');\n\n    let resolved: unknown = components as Record<string, unknown>;\n    for (const segment of refPath) {\n      if (typeof resolved === 'object' && resolved !== null && segment in resolved) {\n        resolved = (resolved as Record<string, unknown>)[segment];\n      } else {\n        throw new Error(`Could not resolve reference: ${obj.$ref}`);\n      }\n    }\n\n    return resolveRef(resolved as typeof obj, components) as Exclude<T, OpenAPIV3.ReferenceObject>;\n  }\n\n  return obj as Exclude<T, OpenAPIV3.ReferenceObject>;\n}\n\nfunction sanitizeOperationId(input: string) {\n  return input.replace(/[^a-zA-Z0-9_-]/g, '');\n}\n\n/**\n * Converts an OpenAPI spec to function signatures and request builders.\n */\nexport function openapiToFunction(\n  openapiSpec: OpenAPIV3.Document,\n  generateZodSchemas = false,\n): {\n  functionSignatures: FunctionSignature[];\n  requestBuilders: Record<string, ActionRequest>;\n  zodSchemas?: Record<string, z.ZodTypeAny>;\n} {\n  const functionSignatures: FunctionSignature[] = [];\n  const requestBuilders: Record<string, ActionRequest> = {};\n  const zodSchemas: Record<string, z.ZodTypeAny> = {};\n  const baseUrl = openapiSpec.servers?.[0]?.url ?? '';\n\n  // Iterate over each path and method in the OpenAPI spec\n  for (const [path, methods] of Object.entries(openapiSpec.paths)) {\n    for (const [method, operation] of Object.entries(methods as OpenAPIV3.PathsObject)) {\n      const paramLocations: Record<string, 'query' | 'path' | 'header' | 'body'> = {};\n      const operationObj = operation as OpenAPIV3.OperationObject & {\n        'x-openai-isConsequential'?: boolean;\n      } & {\n        'x-strict'?: boolean;\n      };\n\n      // Operation ID is used as the function name\n      const defaultOperationId = `${method}_${path}`;\n      const operationId = operationObj.operationId || sanitizeOperationId(defaultOperationId);\n      const description = operationObj.summary || operationObj.description || '';\n      const isStrict = operationObj['x-strict'] ?? false;\n\n      const parametersSchema: OpenAPISchema = {\n        type: 'object',\n        properties: {},\n        required: [],\n      };\n\n      if (operationObj.parameters) {\n        for (const param of operationObj.parameters ?? []) {\n          const resolvedParam = resolveRef(\n            param,\n            openapiSpec.components,\n          ) as OpenAPIV3.ParameterObject;\n\n          const paramName = resolvedParam.name;\n          if (!paramName || !resolvedParam.schema) {\n            continue;\n          }\n\n          const paramSchema = resolveRef(\n            resolvedParam.schema,\n            openapiSpec.components,\n          ) as OpenAPIV3.SchemaObject;\n\n          parametersSchema.properties[paramName] = paramSchema;\n          if (resolvedParam.required) {\n            parametersSchema.required.push(paramName);\n          }\n          // Record the parameter location from the OpenAPI \"in\" field.\n          paramLocations[paramName] =\n            resolvedParam.in === 'query' ||\n            resolvedParam.in === 'path' ||\n            resolvedParam.in === 'header' ||\n            resolvedParam.in === 'body'\n              ? resolvedParam.in\n              : 'query';\n        }\n      }\n\n      if (operationObj.requestBody) {\n        const requestBody = operationObj.requestBody as RequestBodyObject;\n        const content = requestBody.content;\n        const contentType = Object.keys(content ?? {})[0];\n        const schema = content?.[contentType]?.schema;\n        const resolvedSchema = resolveRef(\n          schema as OpenAPIV3.ReferenceObject | OpenAPIV3.SchemaObject,\n          openapiSpec.components,\n        );\n        parametersSchema.properties = {\n          ...parametersSchema.properties,\n          ...resolvedSchema.properties,\n        };\n        if (resolvedSchema.required) {\n          parametersSchema.required.push(...resolvedSchema.required);\n        }\n        // Mark requestBody properties as belonging to the \"body\"\n        if (resolvedSchema.properties) {\n          for (const key in resolvedSchema.properties) {\n            paramLocations[key] = 'body';\n          }\n        }\n      }\n\n      const functionSignature = new FunctionSignature(\n        operationId,\n        description,\n        parametersSchema,\n        isStrict,\n      );\n      functionSignatures.push(functionSignature);\n\n      const actionRequest = new ActionRequest(\n        baseUrl,\n        path,\n        method,\n        operationId,\n        !!(operationObj['x-openai-isConsequential'] ?? false),\n        operationObj.requestBody ? 'application/json' : '',\n        paramLocations,\n      );\n\n      requestBuilders[operationId] = actionRequest;\n\n      if (generateZodSchemas && Object.keys(parametersSchema.properties).length > 0) {\n        const schema = openAPISchemaToZod(parametersSchema);\n        if (schema) {\n          zodSchemas[operationId] = schema;\n        }\n      }\n    }\n  }\n\n  return { functionSignatures, requestBuilders, zodSchemas };\n}\n\nexport type ValidationResult = {\n  status: boolean;\n  message: string;\n  spec?: OpenAPIV3.Document;\n};\n\n/**\n * Validates and parses an OpenAPI spec.\n */\nexport function validateAndParseOpenAPISpec(specString: string): ValidationResult {\n  try {\n    let parsedSpec;\n    try {\n      parsedSpec = JSON.parse(specString);\n    } catch {\n      parsedSpec = load(specString);\n    }\n\n    // Check for servers\n    if (\n      !parsedSpec.servers ||\n      !Array.isArray(parsedSpec.servers) ||\n      parsedSpec.servers.length === 0\n    ) {\n      return { status: false, message: 'Could not find a valid URL in `servers`' };\n    }\n\n    if (!parsedSpec.servers[0].url) {\n      return { status: false, message: 'Could not find a valid URL in `servers`' };\n    }\n\n    // Check for paths\n    const paths = parsedSpec.paths;\n    if (!paths || typeof paths !== 'object' || Object.keys(paths).length === 0) {\n      return { status: false, message: 'No paths found in the OpenAPI spec.' };\n    }\n\n    const components = parsedSpec.components?.schemas || {};\n    const messages = [];\n\n    for (const [path, methods] of Object.entries(paths)) {\n      for (const [httpMethod, operation] of Object.entries(methods as OpenAPIV3.PathItemObject)) {\n        // Ensure operation is a valid operation object\n        const { responses } = operation as OpenAPIV3.OperationObject | { responses: undefined };\n        if (typeof operation === 'object' && responses) {\n          for (const [statusCode, response] of Object.entries(responses)) {\n            const content = (response as OpenAPIV3.ResponseObject).content as MediaTypeObject;\n            if (content && content['application/json'] && content['application/json'].schema) {\n              const schema = content['application/json'].schema;\n              if ('$ref' in schema && typeof schema.$ref === 'string') {\n                const refName = schema.$ref.split('/').pop();\n                if (refName && !components[refName]) {\n                  messages.push(\n                    `In context=('paths', '${path}', '${httpMethod}', '${statusCode}', 'response', 'content', 'application/json', 'schema'), reference to unknown component ${refName}; using empty schema`,\n                  );\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return {\n      status: true,\n      message: messages.join('\\n') || 'OpenAPI spec is valid.',\n      spec: parsedSpec,\n    };\n  } catch (error) {\n    console.error(error);\n    return { status: false, message: 'Error parsing OpenAPI spec.' };\n  }\n}\n","import type * as t from './types';\nimport { EndpointURLs } from './config';\nimport * as s from './schemas';\n\nexport default function createPayload(submission: t.TSubmission) {\n  const {\n    conversation,\n    userMessage,\n    endpointOption,\n    isEdited,\n    isContinued,\n    isTemporary,\n    ephemeralAgent,\n  } = submission;\n  const { conversationId } = s.tConvoUpdateSchema.parse(conversation);\n  const { endpoint: _e } = endpointOption as {\n    endpoint: s.EModelEndpoint;\n    endpointType?: s.EModelEndpoint;\n  };\n\n  const endpoint = _e as s.EModelEndpoint;\n  let server = `${EndpointURLs[s.EModelEndpoint.agents]}/${endpoint}`;\n\n  if (isEdited && s.isAssistantsEndpoint(endpoint)) {\n    server += '/modify';\n  }\n\n  const payload: t.TPayload = {\n    ...userMessage,\n    ...endpointOption,\n    endpoint,\n    ephemeralAgent: s.isAssistantsEndpoint(endpoint) ? undefined : ephemeralAgent,\n    isContinued: !!(isEdited && isContinued),\n    conversationId,\n    isTemporary,\n  };\n\n  return { server, payload };\n}\n","import {\n  ImageDetail,\n  EModelEndpoint,\n  openAISettings,\n  googleSettings,\n  ReasoningEffort,\n  BedrockProviders,\n  anthropicSettings,\n} from './types';\nimport { SettingDefinition, SettingsConfiguration } from './generate';\n\n// Base definitions\nconst baseDefinitions: Record<string, SettingDefinition> = {\n  model: {\n    key: 'model',\n    label: 'com_ui_model',\n    labelCode: true,\n    type: 'string',\n    component: 'dropdown',\n    optionType: 'model',\n    selectPlaceholder: 'com_ui_select_model',\n    searchPlaceholder: 'com_ui_select_search_model',\n    searchPlaceholderCode: true,\n    selectPlaceholderCode: true,\n    columnSpan: 4,\n  },\n  temperature: {\n    key: 'temperature',\n    label: 'com_endpoint_temperature',\n    labelCode: true,\n    description: 'com_endpoint_openai_temp',\n    descriptionCode: true,\n    type: 'number',\n    component: 'slider',\n    optionType: 'model',\n    columnSpan: 4,\n  },\n  topP: {\n    key: 'topP',\n    label: 'com_endpoint_top_p',\n    labelCode: true,\n    description: 'com_endpoint_anthropic_topp',\n    descriptionCode: true,\n    type: 'number',\n    component: 'slider',\n    optionType: 'model',\n    columnSpan: 4,\n  },\n  stop: {\n    key: 'stop',\n    label: 'com_endpoint_stop',\n    labelCode: true,\n    description: 'com_endpoint_openai_stop',\n    descriptionCode: true,\n    placeholder: 'com_endpoint_stop_placeholder',\n    placeholderCode: true,\n    type: 'array',\n    default: [],\n    component: 'tags',\n    optionType: 'conversation',\n    minTags: 0,\n    maxTags: 4,\n  },\n  imageDetail: {\n    key: 'imageDetail',\n    label: 'com_endpoint_plug_image_detail',\n    labelCode: true,\n    description: 'com_endpoint_openai_detail',\n    descriptionCode: true,\n    type: 'enum',\n    default: ImageDetail.auto,\n    component: 'slider',\n    options: [ImageDetail.low, ImageDetail.auto, ImageDetail.high],\n    optionType: 'conversation',\n    columnSpan: 2,\n  },\n};\n\nconst createDefinition = (\n  base: Partial<SettingDefinition>,\n  overrides: Partial<SettingDefinition>,\n): SettingDefinition => {\n  return { ...base, ...overrides } as SettingDefinition;\n};\n\nexport const chat = {\n  modelLabel: {\n    key: 'modelLabel',\n    label: 'com_endpoint_custom_name',\n    labelCode: true,\n    type: 'string',\n    default: '',\n    component: 'input',\n    placeholder: 'com_endpoint_openai_custom_name_placeholder',\n    placeholderCode: true,\n    optionType: 'conversation',\n  } as const,\n  maxContextTokens: {\n    key: 'maxContextTokens',\n    label: 'com_endpoint_context_tokens',\n    labelCode: true,\n    type: 'number',\n    component: 'input',\n    placeholder: 'com_nav_theme_system',\n    placeholderCode: true,\n    description: 'com_endpoint_context_info',\n    descriptionCode: true,\n    optionType: 'model',\n    columnSpan: 2,\n  } as const,\n  resendFiles: {\n    key: 'resendFiles',\n    label: 'com_endpoint_plug_resend_files',\n    labelCode: true,\n    description: 'com_endpoint_openai_resend_files',\n    descriptionCode: true,\n    type: 'boolean',\n    default: true,\n    component: 'switch',\n    optionType: 'conversation',\n    showDefault: false,\n    columnSpan: 2,\n  } as const,\n  promptPrefix: {\n    key: 'promptPrefix',\n    label: 'com_endpoint_prompt_prefix',\n    labelCode: true,\n    type: 'string',\n    default: '',\n    component: 'textarea',\n    placeholder: 'com_endpoint_openai_prompt_prefix_placeholder',\n    placeholderCode: true,\n    optionType: 'model',\n  } as const,\n};\n\nconst openAIParams: Record<string, SettingDefinition> = {\n  chatGptLabel: {\n    ...chat.modelLabel,\n    key: 'chatGptLabel',\n  },\n  promptPrefix: chat.promptPrefix,\n  temperature: createDefinition(baseDefinitions.temperature, {\n    default: openAISettings.temperature.default,\n    range: {\n      min: openAISettings.temperature.min,\n      max: openAISettings.temperature.max,\n      step: openAISettings.temperature.step,\n    },\n  }),\n  top_p: createDefinition(baseDefinitions.topP, {\n    key: 'top_p',\n    default: openAISettings.top_p.default,\n    range: {\n      min: openAISettings.top_p.min,\n      max: openAISettings.top_p.max,\n      step: openAISettings.top_p.step,\n    },\n  }),\n  frequency_penalty: {\n    key: 'frequency_penalty',\n    label: 'com_endpoint_frequency_penalty',\n    labelCode: true,\n    description: 'com_endpoint_openai_freq',\n    descriptionCode: true,\n    type: 'number',\n    default: openAISettings.frequency_penalty.default,\n    range: {\n      min: openAISettings.frequency_penalty.min,\n      max: openAISettings.frequency_penalty.max,\n      step: openAISettings.frequency_penalty.step,\n    },\n    component: 'slider',\n    optionType: 'model',\n    columnSpan: 4,\n  },\n  presence_penalty: {\n    key: 'presence_penalty',\n    label: 'com_endpoint_presence_penalty',\n    labelCode: true,\n    description: 'com_endpoint_openai_pres',\n    descriptionCode: true,\n    type: 'number',\n    default: openAISettings.presence_penalty.default,\n    range: {\n      min: openAISettings.presence_penalty.min,\n      max: openAISettings.presence_penalty.max,\n      step: openAISettings.presence_penalty.step,\n    },\n    component: 'slider',\n    optionType: 'model',\n    columnSpan: 4,\n  },\n  max_tokens: {\n    key: 'max_tokens',\n    label: 'com_endpoint_max_output_tokens',\n    labelCode: true,\n    type: 'number',\n    component: 'input',\n    description: 'com_endpoint_openai_max_tokens',\n    descriptionCode: true,\n    placeholder: 'com_nav_theme_system',\n    placeholderCode: true,\n    optionType: 'model',\n    columnSpan: 2,\n  },\n  reasoning_effort: {\n    key: 'reasoning_effort',\n    label: 'com_endpoint_reasoning_effort',\n    labelCode: true,\n    description: 'com_endpoint_openai_reasoning_effort',\n    descriptionCode: true,\n    type: 'enum',\n    default: ReasoningEffort.medium,\n    component: 'slider',\n    options: [ReasoningEffort.low, ReasoningEffort.medium, ReasoningEffort.high],\n    optionType: 'model',\n    columnSpan: 4,\n  },\n};\n\nconst anthropic: Record<string, SettingDefinition> = {\n  maxOutputTokens: {\n    key: 'maxOutputTokens',\n    label: 'com_endpoint_max_output_tokens',\n    labelCode: true,\n    type: 'number',\n    component: 'input',\n    description: 'com_endpoint_anthropic_maxoutputtokens',\n    descriptionCode: true,\n    placeholder: 'com_nav_theme_system',\n    placeholderCode: true,\n    range: {\n      min: anthropicSettings.maxOutputTokens.min,\n      max: anthropicSettings.maxOutputTokens.max,\n      step: anthropicSettings.maxOutputTokens.step,\n    },\n    optionType: 'model',\n    columnSpan: 2,\n  },\n  temperature: createDefinition(baseDefinitions.temperature, {\n    default: anthropicSettings.temperature.default,\n    range: {\n      min: anthropicSettings.temperature.min,\n      max: anthropicSettings.temperature.max,\n      step: anthropicSettings.temperature.step,\n    },\n  }),\n  topP: createDefinition(baseDefinitions.topP, {\n    default: anthropicSettings.topP.default,\n    range: {\n      min: anthropicSettings.topP.min,\n      max: anthropicSettings.topP.max,\n      step: anthropicSettings.topP.step,\n    },\n  }),\n  topK: {\n    key: 'topK',\n    label: 'com_endpoint_top_k',\n    labelCode: true,\n    description: 'com_endpoint_anthropic_topk',\n    descriptionCode: true,\n    type: 'number',\n    default: anthropicSettings.topK.default,\n    range: {\n      min: anthropicSettings.topK.min,\n      max: anthropicSettings.topK.max,\n      step: anthropicSettings.topK.step,\n    },\n    component: 'slider',\n    optionType: 'model',\n    columnSpan: 4,\n  },\n  promptCache: {\n    key: 'promptCache',\n    label: 'com_endpoint_prompt_cache',\n    labelCode: true,\n    description: 'com_endpoint_anthropic_prompt_cache',\n    descriptionCode: true,\n    type: 'boolean',\n    default: anthropicSettings.promptCache.default,\n    component: 'switch',\n    optionType: 'conversation',\n    showDefault: false,\n    columnSpan: 2,\n  },\n  thinking: {\n    key: 'thinking',\n    label: 'com_endpoint_thinking',\n    labelCode: true,\n    description: 'com_endpoint_anthropic_thinking',\n    descriptionCode: true,\n    type: 'boolean',\n    default: anthropicSettings.thinking.default,\n    component: 'switch',\n    optionType: 'conversation',\n    showDefault: false,\n    columnSpan: 2,\n  },\n  thinkingBudget: {\n    key: 'thinkingBudget',\n    label: 'com_endpoint_thinking_budget',\n    labelCode: true,\n    description: 'com_endpoint_anthropic_thinking_budget',\n    descriptionCode: true,\n    type: 'number',\n    component: 'input',\n    default: anthropicSettings.thinkingBudget.default,\n    range: {\n      min: anthropicSettings.thinkingBudget.min,\n      max: anthropicSettings.thinkingBudget.max,\n      step: anthropicSettings.thinkingBudget.step,\n    },\n    optionType: 'conversation',\n    columnSpan: 2,\n  },\n};\n\nconst bedrock: Record<string, SettingDefinition> = {\n  system: {\n    key: 'system',\n    label: 'com_endpoint_prompt_prefix',\n    labelCode: true,\n    type: 'string',\n    default: '',\n    component: 'textarea',\n    placeholder: 'com_endpoint_openai_prompt_prefix_placeholder',\n    placeholderCode: true,\n    optionType: 'model',\n  },\n  region: {\n    key: 'region',\n    type: 'string',\n    label: 'com_ui_region',\n    labelCode: true,\n    component: 'combobox',\n    optionType: 'conversation',\n    selectPlaceholder: 'com_ui_select_region',\n    searchPlaceholder: 'com_ui_select_search_region',\n    searchPlaceholderCode: true,\n    selectPlaceholderCode: true,\n    columnSpan: 2,\n  },\n  maxTokens: {\n    key: 'maxTokens',\n    label: 'com_endpoint_max_output_tokens',\n    labelCode: true,\n    type: 'number',\n    component: 'input',\n    placeholder: 'com_endpoint_anthropic_maxoutputtokens',\n    placeholderCode: true,\n    optionType: 'model',\n    columnSpan: 2,\n  },\n  temperature: createDefinition(baseDefinitions.temperature, {\n    default: 1,\n    range: { min: 0, max: 1, step: 0.01 },\n  }),\n  topK: createDefinition(anthropic.topK, {\n    range: { min: 0, max: 500, step: 1 },\n  }),\n  topP: createDefinition(baseDefinitions.topP, {\n    default: 0.999,\n    range: { min: 0, max: 1, step: 0.01 },\n  }),\n};\n\nconst mistral: Record<string, SettingDefinition> = {\n  temperature: createDefinition(baseDefinitions.temperature, {\n    default: 0.7,\n    range: { min: 0, max: 1, step: 0.01 },\n  }),\n  topP: createDefinition(baseDefinitions.topP, {\n    range: { min: 0, max: 1, step: 0.01 },\n  }),\n};\n\nconst cohere: Record<string, SettingDefinition> = {\n  temperature: createDefinition(baseDefinitions.temperature, {\n    default: 0.3,\n    range: { min: 0, max: 1, step: 0.01 },\n  }),\n  topP: createDefinition(baseDefinitions.topP, {\n    default: 0.75,\n    range: { min: 0.01, max: 0.99, step: 0.01 },\n  }),\n};\n\nconst meta: Record<string, SettingDefinition> = {\n  temperature: createDefinition(baseDefinitions.temperature, {\n    default: 0.5,\n    range: { min: 0, max: 1, step: 0.01 },\n  }),\n  topP: createDefinition(baseDefinitions.topP, {\n    default: 0.9,\n    range: { min: 0, max: 1, step: 0.01 },\n  }),\n};\n\nconst google: Record<string, SettingDefinition> = {\n  temperature: createDefinition(baseDefinitions.temperature, {\n    default: googleSettings.temperature.default,\n    range: {\n      min: googleSettings.temperature.min,\n      max: googleSettings.temperature.max,\n      step: googleSettings.temperature.step,\n    },\n  }),\n  topP: createDefinition(baseDefinitions.topP, {\n    default: googleSettings.topP.default,\n    range: {\n      min: googleSettings.topP.min,\n      max: googleSettings.topP.max,\n      step: googleSettings.topP.step,\n    },\n  }),\n  topK: {\n    key: 'topK',\n    label: 'com_endpoint_top_k',\n    labelCode: true,\n    description: 'com_endpoint_google_topk',\n    descriptionCode: true,\n    type: 'number',\n    default: googleSettings.topK.default,\n    range: {\n      min: googleSettings.topK.min,\n      max: googleSettings.topK.max,\n      step: googleSettings.topK.step,\n    },\n    component: 'slider',\n    optionType: 'model',\n    columnSpan: 4,\n  },\n  maxOutputTokens: {\n    key: 'maxOutputTokens',\n    label: 'com_endpoint_max_output_tokens',\n    labelCode: true,\n    type: 'number',\n    component: 'input',\n    description: 'com_endpoint_google_maxoutputtokens',\n    descriptionCode: true,\n    placeholder: 'com_nav_theme_system',\n    placeholderCode: true,\n    default: googleSettings.maxOutputTokens.default,\n    range: {\n      min: googleSettings.maxOutputTokens.min,\n      max: googleSettings.maxOutputTokens.max,\n      step: googleSettings.maxOutputTokens.step,\n    },\n    optionType: 'model',\n    columnSpan: 2,\n  },\n  thinking: {\n    key: 'thinking',\n    label: 'com_endpoint_thinking',\n    labelCode: true,\n    description: 'com_endpoint_google_thinking',\n    descriptionCode: true,\n    type: 'boolean',\n    default: googleSettings.thinking.default,\n    component: 'switch',\n    optionType: 'conversation',\n    showDefault: false,\n    columnSpan: 2,\n  },\n  thinkingBudget: {\n    key: 'thinkingBudget',\n    label: 'com_endpoint_thinking_budget',\n    labelCode: true,\n    description: 'com_endpoint_google_thinking_budget',\n    descriptionCode: true,\n    placeholder: 'com_ui_auto',\n    placeholderCode: true,\n    type: 'number',\n    component: 'input',\n    range: {\n      min: googleSettings.thinkingBudget.min,\n      max: googleSettings.thinkingBudget.max,\n      step: googleSettings.thinkingBudget.step,\n    },\n    optionType: 'conversation',\n    columnSpan: 2,\n  },\n};\n\nconst googleConfig: SettingsConfiguration = [\n  chat.modelLabel,\n  chat.promptPrefix,\n  chat.maxContextTokens,\n  google.maxOutputTokens,\n  google.temperature,\n  google.topP,\n  google.topK,\n  chat.resendFiles,\n  google.thinking,\n  google.thinkingBudget,\n];\n\nconst googleCol1: SettingsConfiguration = [\n  baseDefinitions.model as SettingDefinition,\n  chat.modelLabel,\n  chat.promptPrefix,\n];\n\nconst googleCol2: SettingsConfiguration = [\n  chat.maxContextTokens,\n  google.maxOutputTokens,\n  google.temperature,\n  google.topP,\n  google.topK,\n  chat.resendFiles,\n  google.thinking,\n  google.thinkingBudget,\n];\n\nconst openAI: SettingsConfiguration = [\n  chat.modelLabel,\n  chat.promptPrefix,\n  chat.maxContextTokens,\n  openAIParams.max_tokens,\n  openAIParams.temperature,\n  openAIParams.top_p,\n  openAIParams.frequency_penalty,\n  openAIParams.presence_penalty,\n  baseDefinitions.stop,\n  chat.resendFiles,\n  baseDefinitions.imageDetail,\n  openAIParams.reasoning_effort,\n];\n\nconst openAICol1: SettingsConfiguration = [\n  baseDefinitions.model as SettingDefinition,\n  chat.modelLabel,\n  chat.promptPrefix,\n];\n\nconst openAICol2: SettingsConfiguration = [\n  chat.maxContextTokens,\n  openAIParams.max_tokens,\n  openAIParams.temperature,\n  openAIParams.top_p,\n  openAIParams.frequency_penalty,\n  openAIParams.presence_penalty,\n  baseDefinitions.stop,\n  openAIParams.reasoning_effort,\n  chat.resendFiles,\n  baseDefinitions.imageDetail,\n];\n\nconst anthropicConfig: SettingsConfiguration = [\n  chat.modelLabel,\n  chat.promptPrefix,\n  chat.maxContextTokens,\n  anthropic.maxOutputTokens,\n  anthropic.temperature,\n  anthropic.topP,\n  anthropic.topK,\n  chat.resendFiles,\n  anthropic.promptCache,\n  anthropic.thinking,\n  anthropic.thinkingBudget,\n];\n\nconst anthropicCol1: SettingsConfiguration = [\n  baseDefinitions.model as SettingDefinition,\n  chat.modelLabel,\n  chat.promptPrefix,\n];\n\nconst anthropicCol2: SettingsConfiguration = [\n  chat.maxContextTokens,\n  anthropic.maxOutputTokens,\n  anthropic.temperature,\n  anthropic.topP,\n  anthropic.topK,\n  chat.resendFiles,\n  anthropic.promptCache,\n  anthropic.thinking,\n  anthropic.thinkingBudget,\n];\n\nconst bedrockAnthropic: SettingsConfiguration = [\n  chat.modelLabel,\n  bedrock.system,\n  chat.maxContextTokens,\n  bedrock.maxTokens,\n  bedrock.temperature,\n  bedrock.topP,\n  bedrock.topK,\n  baseDefinitions.stop,\n  chat.resendFiles,\n  bedrock.region,\n  anthropic.thinking,\n  anthropic.thinkingBudget,\n];\n\nconst bedrockMistral: SettingsConfiguration = [\n  chat.modelLabel,\n  chat.promptPrefix,\n  chat.maxContextTokens,\n  bedrock.maxTokens,\n  mistral.temperature,\n  mistral.topP,\n  chat.resendFiles,\n  bedrock.region,\n];\n\nconst bedrockCohere: SettingsConfiguration = [\n  chat.modelLabel,\n  chat.promptPrefix,\n  chat.maxContextTokens,\n  bedrock.maxTokens,\n  cohere.temperature,\n  cohere.topP,\n  chat.resendFiles,\n  bedrock.region,\n];\n\nconst bedrockGeneral: SettingsConfiguration = [\n  chat.modelLabel,\n  chat.promptPrefix,\n  chat.maxContextTokens,\n  meta.temperature,\n  meta.topP,\n  chat.resendFiles,\n  bedrock.region,\n];\n\nconst bedrockAnthropicCol1: SettingsConfiguration = [\n  baseDefinitions.model as SettingDefinition,\n  chat.modelLabel,\n  bedrock.system,\n  baseDefinitions.stop,\n];\n\nconst bedrockAnthropicCol2: SettingsConfiguration = [\n  chat.maxContextTokens,\n  bedrock.maxTokens,\n  bedrock.temperature,\n  bedrock.topP,\n  bedrock.topK,\n  chat.resendFiles,\n  bedrock.region,\n  anthropic.thinking,\n  anthropic.thinkingBudget,\n];\n\nconst bedrockMistralCol1: SettingsConfiguration = [\n  baseDefinitions.model as SettingDefinition,\n  chat.modelLabel,\n  chat.promptPrefix,\n];\n\nconst bedrockMistralCol2: SettingsConfiguration = [\n  chat.maxContextTokens,\n  bedrock.maxTokens,\n  mistral.temperature,\n  mistral.topP,\n  chat.resendFiles,\n  bedrock.region,\n];\n\nconst bedrockCohereCol1: SettingsConfiguration = [\n  baseDefinitions.model as SettingDefinition,\n  chat.modelLabel,\n  chat.promptPrefix,\n];\n\nconst bedrockCohereCol2: SettingsConfiguration = [\n  chat.maxContextTokens,\n  bedrock.maxTokens,\n  cohere.temperature,\n  cohere.topP,\n  chat.resendFiles,\n  bedrock.region,\n];\n\nconst bedrockGeneralCol1: SettingsConfiguration = [\n  baseDefinitions.model as SettingDefinition,\n  chat.modelLabel,\n  chat.promptPrefix,\n];\n\nconst bedrockGeneralCol2: SettingsConfiguration = [\n  chat.maxContextTokens,\n  meta.temperature,\n  meta.topP,\n  chat.resendFiles,\n  bedrock.region,\n];\n\nexport const paramSettings: Record<string, SettingsConfiguration | undefined> = {\n  [EModelEndpoint.openAI]: openAI,\n  [EModelEndpoint.azureOpenAI]: openAI,\n  [EModelEndpoint.custom]: openAI,\n  [EModelEndpoint.anthropic]: anthropicConfig,\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.Anthropic}`]: bedrockAnthropic,\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.MistralAI}`]: bedrockMistral,\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.Cohere}`]: bedrockCohere,\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.Meta}`]: bedrockGeneral,\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.AI21}`]: bedrockGeneral,\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.Amazon}`]: bedrockGeneral,\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.DeepSeek}`]: bedrockGeneral,\n  [EModelEndpoint.google]: googleConfig,\n};\n\nconst openAIColumns = {\n  col1: openAICol1,\n  col2: openAICol2,\n};\n\nconst bedrockGeneralColumns = {\n  col1: bedrockGeneralCol1,\n  col2: bedrockGeneralCol2,\n};\n\nexport const presetSettings: Record<\n  string,\n  | {\n      col1: SettingsConfiguration;\n      col2: SettingsConfiguration;\n    }\n  | undefined\n> = {\n  [EModelEndpoint.openAI]: openAIColumns,\n  [EModelEndpoint.azureOpenAI]: openAIColumns,\n  [EModelEndpoint.custom]: openAIColumns,\n  [EModelEndpoint.anthropic]: {\n    col1: anthropicCol1,\n    col2: anthropicCol2,\n  },\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.Anthropic}`]: {\n    col1: bedrockAnthropicCol1,\n    col2: bedrockAnthropicCol2,\n  },\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.MistralAI}`]: {\n    col1: bedrockMistralCol1,\n    col2: bedrockMistralCol2,\n  },\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.Cohere}`]: {\n    col1: bedrockCohereCol1,\n    col2: bedrockCohereCol2,\n  },\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.Meta}`]: bedrockGeneralColumns,\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.AI21}`]: bedrockGeneralColumns,\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.Amazon}`]: bedrockGeneralColumns,\n  [`${EModelEndpoint.bedrock}-${BedrockProviders.DeepSeek}`]: bedrockGeneralColumns,\n  [EModelEndpoint.google]: {\n    col1: googleCol1,\n    col2: googleCol2,\n  },\n};\n\nexport const agentParamSettings: Record<string, SettingsConfiguration | undefined> = Object.entries(\n  presetSettings,\n).reduce<Record<string, SettingsConfiguration | undefined>>((acc, [key, value]) => {\n  if (value) {\n    acc[key] = value.col2;\n  }\n  return acc;\n}, {});\n"],"names":["Tools","EToolResources","AnnotationTypes","StepStatus","MessageContentTypes","RunStatus","envVarRegex","extractVariableName","value","match","trim","extractEnvVariable","trimmed","singleMatch","varName","process","env","regex","result","matches","exec","push","fullMatch","index","i","length","_a","envValue","substring","FilePurpose","actionDelimiter","actionDomainSeparator","hostImageIdSuffix","hostImageNamePrefix","AssistantStreamEvents","defaultOrderQuery","order","limit","FEEDBACK_RATINGS","FEEDBACK_REASON_KEYS","FEEDBACK_TAGS","key","label","direction","icon","getTagsForRating","rating","filter","tag","feedbackTagKeySchema","z","enum","feedbackRatingSchema","feedbackSchema","object","text","string","max","optional","toMinimalFeedback","feedback","getTagByKey","find","AuthType","isUUID","uuid","EModelEndpoint","authTypeSchema","nativeEnum","BedrockProviders","paramEndpoints","Set","agents","openAI","bedrock","azureOpenAI","anthropic","custom","google","ImageDetail","ReasoningEffort","getModelKey","endpoint","model","parts","split","provider","part","Object","values","includes","getSettingsKeys","endpointKey","modelKey","concat","isAssistantsEndpoint","_endpoint","toLowerCase","endsWith","assistants","isAgentsEndpoint","isParamEndpoint","endpointType","has","EAgent","imageDetailNumeric","low","auto","high","imageDetailValue","eImageDetailSchema","eReasoningEffortSchema","defaultAssistantFormValues","assistant","id","name","description","instructions","conversation_starters","functions","code_interpreter","image_vision","retrieval","append_current_datetime","defaultAgentFormValues","_b","agent","model_parameters","tools","projectIds","artifacts","isCollaborative","recursion_limit","undefined","execute_code","file_search","web_search","ImageVisionTool","_c","type","function","parameters","properties","required","isImageVisionTool","tool","openAISettings","default","temperature","min","step","top_p","presence_penalty","frequency_penalty","resendFiles","maxContextTokens","max_tokens","imageDetail","googleSettings","maxOutputTokens","topP","topK","thinking","thinkingBudget","LEGACY_ANTHROPIC_MAX_OUTPUT","anthropicSettings","promptCache","reset","modelName","test","set","legacy","agentsSettings","endpointSettings","_d","eModelEndpointSchema","extendedModelEndpointSchema","union","tPluginAuthConfigSchema","authField","tPluginSchema","pluginKey","authConfig","array","authenticated","boolean","chatMenu","isButton","toolkit","tExampleSchema","input","content","output","agentOptionSettings","options","classic","skipCompletion","eAgentOptionsSchema","tAgentOptionsSchema","number","tMessageSchema","messageId","clientId","nullable","conversationId","parentMessageId","responseMessageId","overrideParentMessageId","bg","title","or","literal","sender","generation","isCreatedByUser","error","clientTimestamp","createdAt","Date","toISOString","updatedAt","current","unfinished","searchResult","finish_reason","thread_id","iconURL","coerceNumber","transform","val","parseFloat","DocumentType","lazy","null","record","tConversationSchema","isArchived","user","messages","modelLabel","userLabel","promptPrefix","system","context","examples","tags","file_ids","reasoning_effort","assistant_id","agent_id","region","maxTokens","additionalModelRequestFields","additional_instructions","presetOverride","unknown","stop","greeting","spec","expiredAt","resendImages","agentOptions","chatGptLabel","tPresetSchema","omit","merge","presetId","defaultPreset","tConvoUpdateSchema","tQueryParamsSchema","pick","tSharedLinkSchema","shareId","isPublic","tConversationTagSchema","_id","count","position","googleBaseSchema","googleSchema","obj","removeNullishValues","catch","googleGenConfigSchema","presencePenalty","frequencyPenalty","stopSequences","thinkingConfig","includeThoughts","strip","gptPluginsBaseSchema","gptPluginsSchema","__assign","_e","_f","_g","_h","_j","_k","_l","_m","_o","_p","removeEmptyStrings","newObj","keys","forEach","FileSources","assistantSchema","compactAssistantSchema","agentsBaseSchema","agentsSchema","openAIBaseSchema","openAISchema","compactGoogleSchema","anthropicBaseSchema","anthropicSchema","compactPluginsSchema","tBannerSchema","bannerId","message","displayFrom","displayTo","compactAgentsBaseSchema","compactAgentsSchema","tModelSpecSchema","preset","showIconInMenu","showIconInHeader","authType","specsConfigSchema","enforce","prioritize","list","addedEndpoints","supportsFiles","azureAssistants","excelFileTypes","fullMimeTypesList","__spreadArray","codeInterpreterMimeTypesList","retrievalMimeTypesList","imageExtRegex","excelMimeTypes","textMimeTypes","applicationMimeTypes","imageMimeTypes","supportedMimeTypes","codeInterpreterMimeTypes","codeTypeMapping","c","cs","cpp","h","md","php","py","rb","tex","js","sh","ts","tar","zip","yml","yaml","log","tsv","retrievalMimeTypes","megabyte","mbToBytes","mb","defaultSizeLimit","assistantsFileConfig","fileLimit","fileSizeLimit","totalSizeLimit","disabled","fileConfig","endpoints","serverFileSizeLimit","avatarSizeLimit","clientImageResize","enabled","maxWidth","maxHeight","quality","checkType","fileType","supportedTypes","some","supportedMimeTypesSchema","any","refine","mimeTypes","every","mimeType","RegExp","endpointFileConfigSchema","fileConfigSchema","imageGeneration","percentage","px","convertStringsToRegex","patterns","reduce","acc","pattern","console","mergeFileConfig","dynamic","mergedConfig","dynamicEndpoint","mergedEndpoint","field","FileContext","AuthTypeEnum","AuthorizationTypeEnum","TokenExchangeMethodEnum","checkOpenAIStorage","source","openai","azure","SettingsViews","BaseOptionsSchema","iconPath","timeout","initTimeout","serverInstructions","oauth","authorization_url","url","token_url","client_id","client_secret","scope","redirect_uri","token_exchange_method","customUserVars","StdioOptionsSchema","extend","command","args","processedEnv","_i","entries","stderr","WebSocketOptionsSchema","pipe","protocol","URL","SSEOptionsSchema","headers","StreamableHTTPOptionsSchema","MCPOptionsSchema","MCPServersSchema","defaultSocialLogins","defaultRetrievalModels","excludedKeys","fileSourceSchema","getSchemaDefaults","schema","shape","map","ZodDefault","_def","defaultValue","fromEntries","Capabilities","AgentCapabilities","modelConfigSchema","deploymentName","version","azureBaseSchema","apiKey","serverless","instanceName","addParams","dropParams","forcePrompt","baseURL","additionalHeaders","azureGroupSchema","group","models","and","azureGroupConfigsSchema","RateLimitPrefix","defaultAssistantsVersion","baseEndpointSchema","streamRate","titlePrompt","titleModel","bedrockEndpointSchema","availableRegions","assistantEndpointSchema","disableBuilder","pollIntervalMs","timeoutMs","supportedIds","excludedIds","privateAssistants","retrievalModels","capabilities","actions","fetch","userIdQuery","titleConvo","titleMethod","defaultAgentCapabilities","chain","ocr","agentsEndpointSchema","recursionLimit","maxRecursionLimit","allowedProviders","endpointSchema","safeParse","success","join","summarize","summaryModel","modelDisplayLabel","customParams","defaultParamsEndpoint","paramDefinitions","strict","customOrder","directEndpoint","titleMessageRole","azureEndpointSchema","groups","plugins","partial","ttsOpenaiSchema","voices","ttsAzureOpenAISchema","apiVersion","ttsElevenLabsSchema","websocketUrl","voice_settings","similarity_boost","stability","style","use_speaker_boost","pronunciation_dictionary_locators","ttsLocalaiSchema","backend","ttsSchema","elevenlabs","localai","sttOpenaiSchema","sttAzureOpenAISchema","sttSchema","speechTab","conversationMode","advancedMode","speechToText","engineSTT","languageSTT","autoTranscribeAudio","decibelValue","autoSendText","textToSpeech","engineTTS","voice","languageTTS","automaticPlayback","playbackRate","cacheTTS","EImageOutputType","rateLimitSchema","fileUploads","ipMax","ipWindowInMinutes","userMax","userWindowInMinutes","conversationsImport","tts","stt","OCRStrategy","SearchCategories","SearchProviders","ScraperTypes","RerankerTypes","SafeSearchTypes","termsOfServiceSchema","externalUrl","openNewTab","modalAcceptance","modalTitle","modalContent","mcpServersSchema","placeholder","intefaceSchema","privacyPolicy","termsOfService","customWelcome","mcpServers","endpointsMenu","modelSelect","sidePanel","multiConvo","bookmarks","memories","presets","prompts","temporaryChat","temporaryChatRetention","runCode","webSearch","turnstileOptionsSchema","language","size","turnstileSchema","siteKey","KnownEndpoints","FetchTokenConfig","webSearchSchema","serperApiKey","firecrawlApiKey","firecrawlApiUrl","jinaApiKey","cohereApiKey","searchProvider","scraperType","rerankerType","scraperTimeout","safeSearch","MODERATE","ocrSchema","mistralModel","strategy","MISTRAL_OCR","balanceSchema","startBalance","autoRefillEnabled","refillIntervalValue","refillIntervalUnit","refillAmount","memorySchema","validKeys","tokenLimit","personalize","messageWindowSize","configSchema","cache","memory","secureImageLinks","imageOutputType","PNG","includedTools","filteredTools","interface","turnstile","fileStrategy","local","allowedDomains","registration","socialLogins","balance","speech","rateLimits","modelSpecs","all","gptPlugins","data","getConfigDefaults","VisionModes","defaultEndpoints","chatGPTBrowser","alternateName","ollama","deepseek","xai","sharedOpenAIModels","bedrockModels","defaultModels","openAIModels","initialModelsConfig","initial","str","EndpointURLs","modularEndpoints","supportsBalanceCheck","visionModels","validateVisionModel","additionalModels","availableModels","visionModel","InfiniteCollections","Time","CacheKeys","ViolationTypes","ErrorTypes","AuthKeys","ImageDetailCost","SettingsTabValues","STTProviders","TTSProviders","Constants","LocalStorageKeys","ForkOptions","CohereConstants","SystemCategories","imageGenTools","ContentTypes","StepTypes","ToolCallTypes","providerEndpointMap","specialVariables","current_date","current_user","iso_datetime","current_datetime","bedrockInputSchema","s.tConversationSchema","_obj","budget_tokens","s.removeNullishValues","bedrockInputParser","catchall","knownKeys","additionalFields","typedData","anthropic_beta","bedrockOutputParser","updatedData","Math","floor","configureThinking","endpointSchemas","getEnabledEndpoints","endpointsEnv","ENDPOINTS","enabledEndpoints","orderEndpointsConfig","endpointsConfig","endpointKeys","defaultCustomIndex","indexOf","accumulatedConfig","currentEndpointKey","isCustom","errorsToString","errors","path","getFirstDefinedValue","possibleValues","returnValue","possibleValues_1","getNonEmptyValue","possibleValues_2","parseConvo","conversation","Error","convo","parse","secondaryModels","extractGPTVersion","modelStr","gptMatch","suffix","extractOmniVersion","omniMatch","getResponseSender","endpointOption","_mdl","_cgl","_ml","compactEndpointSchemas","parseCompactConvo","parseTextParts","contentParts","skipReasoning","contentParts_1","TEXT","textValue","THINK","think","SEPARATORS","findLastSeparatorIndex","separators","lastIndex","separators_1","separator","lastIndexOf","replaceSpecialVars","currentDate","dayjs","format","dayNumber","day","combinedDate","replace","currentDatetime","isoDatetime","ArtifactModes","deprecatedAzureVariables","conflictingAzureVariables","validateAzureGroups","configs","isValid","modelNames","modelGroupMap","groupMap","groupName","rest","__rest","groupDeploymentName","groupVersion","modelDeploymentName","modelVersion","mapModelToAzureConfig","modelConfig","groupConfig","result_1","azureOptions","azureOpenAIApiVersion","azureOpenAIApiKey","apiKeyValue","modelDetails","azureOpenAIApiInstanceName","azureOpenAIApiDeploymentName","mapGroupToAzureConfig","firstModelName","ComponentTypes","SettingTypes","OptionTypes","utils","accordian","alertDialog","alert","avatar","badge","breadcrumb","button","calendar","card","carousel","checkbox","collapsible","dialog","drawer","dropdownMenu","hoverCard","menuBar","navigationMenu","pagination","popover","progress","radioGroup","select","skeleton","slider","switchComponent","table","tabs","textarea","toast","toaster","toggleGroup","toggle","tooltip","useToast","shadcnComponents","essentialShadcnComponents","loadOCRConfig","config","dropSchemaFields","fields","Array","isArray","newProps","propKey","dropped","convertToZodUnion","schemas","zodSchemas","subSchema","objSchema","convertJsonSchemaToZod","items","zodSchema","additionalProperties","passthrough","ZodObject","slice","allowEmptyObject","dropFields","transformOneOfAnyOf","oneOf","hasOptionalProperty","baseSchema","baseZodSchema","oneOfZodSchema","intersection","anyOf","anyOfZodSchema","droppedSchema","jsonSchema","first","itemSchema","valueWithAny","fieldSchema_1","describe","fieldSchema_2","fieldSchema","objectSchema","partialNullable","additionalSchema","requiredSettingFields","generateDynamicSchema","settings","schemaFields","settings_1","setting","range","minText","maxText","minTags","maxTags","Number","Boolean","String","Enum","warn","ZodArray","ZodTypeToSettingType","ZodString","ZodNumber","ZodBoolean","validateSettingDefinitions","columnsSet","settings_2","columns","code","ZodIssueCode","add","next","settings_3","requiredSettingFields_1","settingTypes","component","Tags","Input","Textarea","Slider","includeInput","round","Checkbox","Switch","Dropdown","Combobox","columnSpan","optionType","Custom","conversationSchema","zodType","typeName","isNaN","ZodError","generateOpenAISchema","customOpenAI","defaults","generateGoogleSchema","customGoogle","loadWebSearchConfig","webSearchAuth","providers","serper","scrapers","firecrawl","rerankers","jina","cohere","getWebSearchKeys","category","categoryObj","serviceObj","PermissionTypes","Permissions","webSearchKeys","extractWebSearchEnvVars","authFields","relevantKeys_1","k","loadWebSearchAuth","checkAuth","isUserProvided","PROVIDERS","webSearchConfig","specificService","SCRAPERS","RERANKERS","services","services_1","service","serviceConfig","requiredKeys","optionalKeys","typedKey","requiredAuthFields","optionalAuthFields","allKeys","allAuthFields","optionalSet","loadAuthValues","userId","throwError","authValues","sent","allFieldsAuthenticated","j","originalKey","authResult","categories","authTypes","categories_1","isCategoryAuthenticated","USER_PROVIDED","SYSTEM_DEFINED","loadMemoryConfig","isMemoryEnabled","SystemRoles","promptPermissionsSchema","SHARED_GLOBAL","USE","CREATE","bookmarkPermissionsSchema","memoryPermissionsSchema","UPDATE","READ","OPT_OUT","agentPermissionsSchema","multiConvoPermissionsSchema","temporaryChatPermissionsSchema","runCodePermissionsSchema","webSearchPermissionsSchema","permissionsSchema","PROMPTS","BOOKMARKS","MEMORIES","AGENTS","MULTI_CONVO","TEMPORARY_CHAT","RUN_CODE","WEB_SEARCH","DATE_RANGE","QueryKeys","MutationKeys","roleSchema","permissions","roleDefaults","ADMIN","USER","_q","_r","_s","_t","_u","_v","_w","setAcceptLanguageHeader","axios","common","setTokenHeader","token","buildQuery","params","query","v","encodeURIComponent","shareRoot","shareMessages","getSharedLinks","pageSize","sortBy","sortDirection","search","cursor","keysEndpoint","conversationsRoot","conversations","updateConversation","isAvatar","images","queryParams","URLSearchParams","toString","getPromptGroup","getPrompt","postPrompt","updatePromptGroup","deletePromptGroup","getRole","roleName","conversationTags","_post","post","JSON","stringify","isRefreshing","failedQueue","refreshToken","retry","endpoints.refreshToken","dispatchTokenUpdatedEvent","window","dispatchEvent","CustomEvent","detail","processQueue","prom","reject","resolve","interceptors","response","use","__awaiter","originalRequest","Promise","status","_retry","err_1","location","href","err_2","request","get","getResponse","postMultiPart","formData","postTTS","responseType","put","delete","deleteWithOptions","patch","payload","endpoints.addTagToConversation","endpoints.updateConversation","arg","toolId","toolParams","endpoints.agents","endpoints.assistants","endpoints.conversationTags","endpoints.postPrompt","endpoints.createSharedLink","action_id","endpoints.memory","groupId","endpoints.deletePrompt","endpoints.deletePromptGroup","endpoints.shareMessages","s.isAssistantsEndpoint","config.defaultAssistantsVersion","Accept","endpoints.conversationById","endpoints.conversations","file_id","config.Constants","NEW_CONVO","PENDING_CONVO","endpoints.messages","endpoints.getPrompt","endpoints.getPromptGroup","endpoints.getPromptGroupsWithFilters","endpoints.getPromptsWithFilters","variables","skip","endpoints.getRole","endpoints.getSharedLink","endpoints.getSharedLinks","version_index","endpoints.revertAgentVersion","endpoints.revokeUserKey","body","updates","endpoints.feedback","preferences","endpoints.updatePromptGroup","endpoints.updateSharedLink","endpoints.images","signal","requestConfig","endpoints.userKeyQuery","sha1","crypto","createHash","update","digest","createURL","domain","cleanDomain","cleanPath","fullURL","schemaTypeHandlers","stringSchema","minLength","maxLength","numberSchema","minimum","maximum","integer","int","openAPISchemaToZod","FunctionSignature","this","prototype","toObjectTool","RequestConfig","basePath","method","operation","isConsequential","contentType","parameterLocations","RequestExecutor","authHeaders","setParams","operationHash","paramPattern","setAuth","metadata","auth","authorization_type","custom_auth_header","client_url","api_key","oauth_client_id","oauth_client_secret","oauth_token_expires_at","oauth_access_token","isApiKey","ServiceHttp","isOAuth","OAuth","Basic","basicToken","Buffer","from","Bearer","now","authToken","execute","_axios","create","bodyParams","loc","assign","getConfig","ActionRequest","defineProperty","createExecutor","executor","resolveRef","components","resolved","refPath_1","$ref","segment","sanitizeOperationId","openapiToFunction","openapiSpec","generateZodSchemas","functionSignatures","requestBuilders","baseUrl","servers","paths","methods","paramLocations","operationObj","defaultOperationId","operationId","summary","isStrict","parametersSchema","resolvedParam","paramName","paramSchema","in","requestBody","resolvedSchema","apply","functionSignature","actionRequest","validateAndParseOpenAPISpec","specString","parsedSpec","load","httpMethod","responses","statusCode","refName","pop","createPayload","submission","userMessage","isEdited","isContinued","isTemporary","ephemeralAgent","s.tConvoUpdateSchema","server","s.EModelEndpoint","baseDefinitions","labelCode","selectPlaceholder","searchPlaceholder","searchPlaceholderCode","selectPlaceholderCode","descriptionCode","placeholderCode","createDefinition","base","overrides","chat","showDefault","openAIParams","medium","mistral","meta","googleConfig","googleCol1","googleCol2","openAICol1","openAICol2","anthropicConfig","anthropicCol1","anthropicCol2","bedrockAnthropic","bedrockMistral","bedrockCohere","bedrockGeneral","bedrockAnthropicCol1","bedrockAnthropicCol2","bedrockMistralCol1","bedrockMistralCol2","bedrockCohereCol1","bedrockCohereCol2","bedrockGeneralCol1","bedrockGeneralCol2","paramSettings","Anthropic","MistralAI","Cohere","Meta","AI21","Amazon","DeepSeek","openAIColumns","col1","col2","bedrockGeneralColumns","presetSettings","agentParamSettings"],"mappings":"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"}