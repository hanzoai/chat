name: Hanzo Chat Deploy

on:
  push:
    branches:
      - main
      - hanzo-*
    tags:
      - v*
  pull_request:
    branches:
      - main
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  ROUTER_IMAGE: ghcr.io/hanzoai/router
  CHAT_IMAGE: ghcr.io/hanzoai/chat

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.ROUTER_IMAGE }}
            ${{ env.CHAT_IMAGE }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha,prefix={{branch}}-
            
      - name: Build Hanzo Router image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: false
          load: true
          tags: ${{ env.ROUTER_IMAGE }}:test
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Test Hanzo Router image
        run: |
          docker run --rm ${{ env.ROUTER_IMAGE }}:test litellm --version
          
      - name: Build Chat image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          target: runtime
          push: false
          load: true
          tags: ${{ env.CHAT_IMAGE }}:test
          build-args: |
            APP_TITLE=Hanzo AI Chat
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Run integration tests
        run: |
          docker compose -f docker-compose.hanzo.yml up -d
          sleep 30
          curl -f http://localhost:4000/health || exit 1
          curl -f http://localhost:3081/health || exit 1
          docker compose -f docker-compose.hanzo.yml down
          
      - name: Push Hanzo Router image
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ env.ROUTER_IMAGE }}:latest
            ${{ env.ROUTER_IMAGE }}:${{ steps.meta.outputs.version }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Push Chat image
        if: github.event_name != 'pull_request'
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          target: runtime
          push: true
          tags: |
            ${{ env.CHAT_IMAGE }}:latest
            ${{ env.CHAT_IMAGE }}:${{ steps.meta.outputs.version }}
          build-args: |
            APP_TITLE=Hanzo AI Chat
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy-staging:
    needs: build-and-test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    environment: staging
    
    steps:
      - name: Deploy to staging
        run: |
          echo "Deploying to staging environment..."
          # Add deployment commands here
          
  deploy-production:
    needs: build-and-test
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - name: Deploy to production
        run: |
          echo "Deploying to production environment..."
          # Add deployment commands here