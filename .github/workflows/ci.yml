name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

env:
  NODE_ENV: test

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [20.x]
        mongodb-version: ['7.0']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}

    - name: Start MongoDB
      uses: supercharge/mongodb-github-action@1.10.0
      with:
        mongodb-version: ${{ matrix.mongodb-version }}

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.npm
          node_modules
          */node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Cache build artifacts
      uses: actions/cache@v4
      with:
        path: |
          packages/*/dist
          api/lib
          client/dist
        key: ${{ runner.os }}-build-${{ hashFiles('packages/**/*.ts', 'packages/**/*.js') }}
        restore-keys: |
          ${{ runner.os }}-build-

    - name: Install dependencies
      run: npm ci

    - name: Build packages
      run: |
        npm run build:data-provider
        npm run build:data-schemas
        npm run build:api

    - name: Create test environment
      run: |
        cat > .env.test << EOF
        NODE_ENV=test
        MONGO_URI=mongodb://localhost:27017/HanzoChat_test
        MEILI_HOST=
        RAG_API_URL=
        ALLOW_REGISTRATION=true
        ALLOW_UNVERIFIED_EMAIL_LOGIN=true
        RATE_LIMIT_ENABLED=false
        CREDS_KEY=test-creds-key-32-chars-long-string
        CREDS_IV=test-creds-iv-16
        JWT_SECRET=test-jwt-secret-very-secure
        JWT_REFRESH_SECRET=test-jwt-refresh-secret
        GOOGLE_ANALYTICS_ID=
        SENTRY_DSN=
        DOMAIN_CLIENT=http://localhost:3080
        DOMAIN_SERVER=http://localhost:3080
        TRUST_PROXY=0
        DEBUG_LOGGING=false
        CONSOLE_JSON=false
        EOF

    - name: Run Client Tests
      run: NODE_ENV=test npm run test:client -- --coverage --coverageReporters=json
      continue-on-error: false

    - name: Run API Tests
      run: NODE_ENV=test npm run test:api -- --coverage --coverageReporters=json --maxWorkers=2
      continue-on-error: false

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results
        path: |
          client/coverage/
          api/coverage/

    - name: Test Report
      uses: dorny/test-reporter@v1
      if: always()
      with:
        name: Jest Tests
        path: '**/junit.xml'
        reporter: jest-junit

    - name: Coverage Report
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./client/coverage/coverage-final.json,./api/coverage/coverage-final.json
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  lint:
    name: Code Quality
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.npm
          node_modules
          */node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies
      run: npm ci

    - name: Run ESLint
      run: npm run lint

    - name: Run Prettier Check
      run: npm run format:check || true

  security:
    name: Security Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run npm audit
      run: npm audit --production || true

    - name: Run Snyk Security Scan
      uses: snyk/actions/node@master
      continue-on-error: true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  build:
    name: Build Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'

    - name: Cache dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.npm
          node_modules
          */node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install dependencies
      run: npm ci

    - name: Build all packages
      run: |
        npm run build:data-provider
        npm run build:data-schemas
        npm run build:api

    - name: Build client
      run: npm run build:client
      env:
        DOMAIN_CLIENT: https://chat.hanzo.ai
        DOMAIN_SERVER: https://chat.hanzo.ai

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: |
          client/dist/
          api/lib/
          packages/*/dist/