# Hanzo AI Chat - Base Configuration
# Use directly for local development with pre-built images
# Override with compose.dev.yml for mounted volumes
# Override with compose.prod.yml for production deployment

services:
  # MongoDB for Chat History
  mongodb:
    image: mongo:7-jammy
    container_name: hanzo-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME:-hanzo}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-hanzo123}
      MONGO_INITDB_DATABASE: HanzoChat
    volumes:
      - mongodb_data:/data/db
    networks:
      - hanzo-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Meilisearch for Full-Text Search
  meilisearch:
    image: getmeili/meilisearch:v1.8
    container_name: hanzo-meilisearch
    environment:
      MEILI_MASTER_KEY: ${MEILI_MASTER_KEY:-hanzo-search-key}
      MEILI_ENV: ${MEILI_ENV:-development}
    volumes:
      - meilisearch_data:/meili_data
    networks:
      - hanzo-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:7700/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Hanzo Chat UI (LibreChat Fork)
  chat:
    image: hanzoai/chat:latest
    container_name: hanzo-chat
    build:
      context: .
      dockerfile: docker/Dockerfile
    ports:
      - "3081:3080"
    environment:
      # Database
      MONGO_URI: mongodb://${MONGO_USERNAME:-hanzo}:${MONGO_PASSWORD:-hanzo123}@mongodb:27017/HanzoChat?authSource=admin
      
      # Search
      MEILI_HOST: http://meilisearch:7700
      MEILI_MASTER_KEY: ${MEILI_MASTER_KEY:-hanzo-search-key}
      
      # Auth
      ALLOW_REGISTRATION: ${ALLOW_REGISTRATION:-true}
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt}
      
      # AI Provider - Point to Hanzo Router or external API
      OPENAI_API_KEY: ${OPENAI_API_KEY:-sk-hanzo-your-key}
      OPENAI_BASE_URL: ${OPENAI_BASE_URL:-https://api.hanzo.ai/v1}
      
      # Features
      MCP_ENABLED: ${MCP_ENABLED:-true}
      
      # Branding
      APP_TITLE: ${APP_TITLE:-Hanzo AI Chat}
      CUSTOM_FOOTER: ${CUSTOM_FOOTER:-Powered by Hanzo AI}
    depends_on:
      mongodb:
        condition: service_healthy
      meilisearch:
        condition: service_healthy
    networks:
      - hanzo-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3080/api/health"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  mongodb_data:
  meilisearch_data:

networks:
  hanzo-network:
    driver: bridge